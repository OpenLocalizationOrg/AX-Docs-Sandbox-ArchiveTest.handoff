<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99a444e5e6c1d829861161b0e5e8cc6f3b7be186</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\extensibility\customization-overlayering-extensions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad8c0bcabbcd501dc06cec1bfc39756c9e582ae5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01a27b3d3f3f5b6869aba133c13b00821cd2ff6b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Customize with extensions and overlayering</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This topic discusses the two methods of customizing source code and metadata of model elements -  overlayering and extensions and details supported extension capabilities.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Customize with extensions and overlayering</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic discusses the two methods of customizing source code and metadata of model elements -  overlayering and extensions and details supported extension capabilities.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overlayering</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can customize source code and metadata of model elements that are shipped by Microsoft or third-party Microsoft partners.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In order to customize metadata and source code of a model, the developer must create a new model that overlays the model they want to customize.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, solution developers can provide code in the SLN layer, independent software vendors can use the ISV layer, and value-added resellers can use the VAR layer.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Functionality defined in higher layers (VAR layer in this example) can override the functionality of lower layers.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The overlaying model must belong to the same <bpt id="p1">**</bpt>Package<ept id="p1">**</ept> as the source model and belong to a layer that is higher than the source model.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Overlayering is a powerful tool to perform advanced customizations of metadata and source code, but may increase the cost of upgrading a solution to a new version.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Click on this <bpt id="p1">[</bpt>link<ept id="p1">](https://mix.office.com/watch/1ol6ov90jrd4w)</ept> to open an Office Mix that provides a good introduction on how to customize model elements.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Extensions</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can customize an application by using <bpt id="p1">*</bpt>extensions<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An extension enables you to add functionality to existing model elements and source code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Extensions provide the following capabilities:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating new model elements.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Extending existing model elements.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Extending source code using class extensions.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Customizing business logic.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Ways to customize business logic include:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creating event handlers to respond to framework events, such as data events.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creating event handlers to respond to event delegates that are defined by the application.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creating new plug-ins.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To get started, review or complete this tutorial: <bpt id="p1">[</bpt>Customize model elements using extensions<ept id="p1">](customize-model-elements-extensions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Extension models and packages</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can create a model that contains only new model elements, new code, or extensions.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This model is compiled into its own separate assembly.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These assemblies, along with related metadata and runtime artifacts can be packaged (as a deployable package file) and deployed on runtime sandbox or production environment.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To create an extension model, go through the Create model wizard and select <bpt id="p1">**</bpt>Create new package<ept id="p1">**</ept> on the second step.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>./media/1_cust.png</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Extension models have several advantages, including:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Application lifecycle management (ALM):<ept id="p1">**</ept> Extension models simplify and improve the performance of deployments, builds, test automation and delivery to customers.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Design time performance:<ept id="p1">**</ept> Building your model or project doesn't require you to recompile the entire application.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Servicing:<ept id="p1">**</ept> In the cloud, Microsoft can install, patch, upgrade, and change internal APIs without affecting your customizations.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Upgrades:<ept id="p1">**</ept> Unlike overlayering, extensions reduce the cost of upgrading to a new version, as this approach eliminates costly code and metadata conflicts.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates how extensions get isolated in their assemblies.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>media/ax7customization1.png</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Code extensions</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can extend source code in 3 ways:</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By subscribing to events (framework events and delegates)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>By writing plug-ins.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>By creating class extensions (aka class Augmentation), see section below.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You should understand the following characteristics of framework events:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Events are implemented as multi-cast delegates, which means that more than one event handler can be subscribed to any particular event.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Events are broadcast; there's no sequencing of calls to event handlers.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Event handlers execute within the transaction scope of the base methods.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Events</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Events are raised as preceding and succeeding operations around the base methods.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This means that you have the opportunity to run code before a base method is called and after it has completed.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Microsoft Dynamics AX 2012 introduced XPP events, which are also available in this release and can be subscribed to in your extensions.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Plug-ins</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Plug-ins are extension points that are defined by the base application.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By using a class-factory pattern, plug-ins enable you to replace the base functionality.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can see how to implement a plug-in in the tutorial, <bpt id="p1">[</bpt>Customize model elements using extensions<ept id="p1">](customize-model-elements-extensions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Class Extensions</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Class extensions enable you to augment a class by adding methods and variables to existing classes.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more details refer to the topic <bpt id="p1">[</bpt>class extensions<ept id="p1">](class-extensions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Form extensions</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can extend the functionality of a form by extending its controls and data sources.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, in a form extension, you can:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Add a new control.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enable or disable a control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Change the text or label property of a control.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Change a control's visibility.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Change a form's help text.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Change a form's caption.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Add a new data source.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Change properties at the data-source level.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Add a form part.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Other ways to customize a form, such as reordering controls in the form or subscribing to form or control events, are planned to be included in a future release.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In Microsoft Dynamics AX 2012, you could override form methods.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the current version, you use extensions to implement event handlers that are called from the base implementations of form methods.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following table lists each method and its associated events.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Published form DataSource method<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Preceding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Succeeding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>active</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Activated</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>delete</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Deleting</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Deleted</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>validateWrite</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>ValidatingWriting</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>ValidatedWrite</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>write</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Writing</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Written</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>create</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creating</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Created</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>executeQuery</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>QueryExecuted</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>linkActive</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PostLinkActive</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>init</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Initialized</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>validateDelete</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ValidatingDelete</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>ValidatedDelete</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>reread</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Reread</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>selectionChanged</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>SelectionChanged</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>markChanged</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>MarkChanged</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>leaveRecord</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>LeavingRecord</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>LeftRecord</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Published form Object method<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Preceding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Succeeding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>init</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Initializing</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Initialized</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>close</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Closing</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>run</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>PostRun</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>activate</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Activated</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Published form Control method<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Preceding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Succeeding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>modified</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Modified</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>validate</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Validating</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Validated</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>leave</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Leaving</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>LostFocus</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>enter</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Enter</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>gotFocus</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>GotFocus</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>clicked</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Clicked</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>selectionChange</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>SelectionChanging</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>pageActivated</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PageActivated</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>allowPageDeactivate</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>AllowPageDeactivate</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>expand</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Expanding</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Expanded</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>tabChanged</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>TabChanged</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>dialogClosed</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>DialogClosed</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Code behind extension forms</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>You can use class extensions to author X++Â logic associated with form extensions.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This allows the definition of state variables accessible to form and control event handlers.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>It also allows overriding form methods without overlayering code.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Refer to <bpt id="p1">[</bpt>this<ept id="p1">](https://community.dynamics.com/ax/b/newdynamicsax/archive/2016/10/11/code-behind-extension-forms-how-to-add-state-variable-and-override-methods-without-overlayering)</ept> blog article for an example.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Table extensions</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You can create a table extension to extend a table's design and logic.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>You can add new fields, field groups, indexes, mappings and relations.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>You can also add new fields to existing field groups, change the label of a table field, change the Created By, Created Date Time, Modified By, Modified Date Time properties.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Using table extensions, you can also change the Extended Data Type property on fields and set it to an EDT that is derived from the current EDT (<bpt id="p1">*</bpt>This is available as of platform update 8<ept id="p1">*</ept>).</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>In Microsoft Dynamics AX 2012, you could override the virtual methods of a table's base class to control the behavior that occurred during table operations, such as when creating, reading, updating, or deleting.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>In the current version, you instead use extensions to implement event handlers that are called from the base implementations of the table methods.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The following table lists each table method and its events.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Published Table method<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Preceding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Succeeding event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>validateWrite</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>ValidatingWrite</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>ValidatedWrite</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>validateDelete</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>ValidatingDelete</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>ValidatedDelete</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>validateField</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>ValidatingField</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>ValidatedField</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>validateFieldValue</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>ValidatingFieldValue</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>ValidatedFieldValue</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>modifiedField</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>ModifyingField</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>ModifiedField</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>modifiedFieldValue</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>ModifyingFieldValue</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>ModifiedFieldValue</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Insert</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Inserting</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Inserted</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Update</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Updating</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Updated</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Delete</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Deleting</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Deleted</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Initvalue</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>InitializingRecord</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>InitializedRecord</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>FinalDeleteValidation</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Executed when a delete operation is performed on a table object, before the operation is committed to the underlying database table</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>FinalInsertValidation</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Executed when an insert operation is performed on a table object, before the operation is committed to the underlying database table</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>FinalReadValidation</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Executed when a read operation is performed on a table object.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>FinalUpdateValidation</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Executed when an update operation is performed on a table object, before the operation is committed to the underlying database table.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Validation events capture and return results by using the <bpt id="p1">**</bpt>DataEventArgs<ept id="p1">**</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The display and edit method modifiers are supported on table extensions.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>View and Data entity extensions</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>You can extend a View or Data entity to achieveÂ much of theÂ functionalityÂ available withÂ table extensions.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Enum extensions</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>You can extend any Enum that is marked extensble (IsExtensible=True).</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>extensibleenums<ept id="p1">](./media/extensibleenums-300x158.png)](./media/extensibleenums.png)</ept></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>By extending an Enum, you can add new Enum values to it.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>It is important to keep the following in mind when dealing with extensible Enums:</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>You cannot have X++ logic that depends on the integer value of Enum values (For example.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>If (Enum1.v1 <ph id="ph1">&amp;gt;</ph> Enum1.v2) ...<ept id="p1">*</ept> is not supported for extensible enums)</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>WhenÂ Enum values of extensible Enums are synchronized into the database:</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>IntegerÂ values thatÂ belong to theÂ baseline enum are deterministic, they come from the metadata.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>IntegerÂ values that are an extension are generated during the synchronization process and are not deterministic.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>EDT extensions</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>You can extend an EDT element in order to modify any of the following properties:</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Form help</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Label</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>String size</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Help text</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Query extensions</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can extend a Query element to achieve the following:</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Add ranges to an existing data source.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Add new (embedded) data sources to an existing data source.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Add new fields to an existing data source.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Menu extensions</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>You can extend a Menu element to achieve the following:</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Add new menu items, submenus, menu references and tile references to an existing menu.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Hide an existing menu item, tile, or sub-menu in a menu by setting the <bpt id="p1">**</bpt>Visible<ept id="p1">**</ept> property to No.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>menuextensions<ept id="p1">](./media/menuextensions-300x137.png)](./media/menuextensions.png)</ept></source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Security role and duty extensions</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>You can extend a Security Role or a Security Duty to add new duties/privileges to these elements.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Report extensions</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>You can customize reports and business docs using extensions, below is a list of tutorials that help you learn more.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Customizing App Suite reports using extensions<ept id="p1">](..\analytics\customize-app-suite-reports-with-extensions.md)</ept>: Customizations to reporting solutions in the standard application are fully supported using a pure ‘Extension’ model.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This article offers guidance on how to add the most common customizations to standard application reports without over-layering Application Suite artifacts.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Here are some…</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How To: Custom designs for business docs<ept id="p1">](..\analytics\custom-designs-business-docs.md)</ept>: This article focuses on the steps involved in crafting a custom report design for an existing application business document using a ‘pure’ extension model.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Follow the steps below to associate a custom report design with an application document instance….</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How To: Expanding App Suite report data sets<ept id="p1">](..\analytics\expand-app-suite-report-data-sets.md)</ept>: This article focuses on the expansion of an existing report data set produced using X++ business logic in a Report Data Provider (RDP) class.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Use custom delegate handlers and table extensions to include additional field data and/or calculations without…</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How To: Extending report menu items<ept id="p1">](..\analytics\extend-report-menu-items.md)</ept>: This article focuses on the process of extending existing application menu items to redirect navigations with minimal code changes.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Using this technique you will avoid the hassle of tracking down and replacing all references to an existing application…</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Label extensions</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>You can create label extension files in order to modify the string value of a label, add new labels to the same label file or add new languages.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To create a label extension file you must name it with a <ph id="ph1">\_</ph>extension suffix.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, to extend the <bpt id="p1">**</bpt>FLM<ept id="p1">**</ept> labels of the Fleet Management model, do the following:</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Create a project that belongs to a model that references Fleet Management (The model Fleet Management Extension is an example).</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Add a new label file to the project and name it <bpt id="p1">**</bpt>FLM<ph id="ph1">\_</ph>Extension<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Within the FLM<ph id="ph1">\_</ph>Extension label file, you can create new labels or modify the value of labels that are defined in the <bpt id="p1">**</bpt>FLM<ept id="p1">**</ept> label file of the Fleet Management model.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Use the standard label editor to define new labels or redefine labels that already exist in the original FLM label file.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>If your goal is to create translations of the FLM label, right-click on the FLM<ph id="ph1">\_</ph>Extension element in your project and select <bpt id="p1">**</bpt>Add new languages<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Follow the wizard to add translation files to the FLM labels.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If the FLM_Extension file already exists in another model, you can name your file <bpt id="p1">**</bpt>FLM_Extension<ph id="ph1">&lt;N&gt;</ph><ept id="p1">**</ept> where <ph id="ph2">&lt;N&gt;</ph> is any integer.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Extension of Country/Region Codes</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>This functionality is available as of Platform update 7.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Country Region Codes<ept id="p1">**</ept> property enables developers to restrict functionality to certain regions or countries based on the current legal entity’s primary address.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Developers can extend this functionality by setting the Country Region Codes property on the following extension element types: Menu extension, Menu Item extension, Table extension (and fields), Form extensions (form controls), EDT extensions, Enum extensions, and View extensions.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>You can specify additional country/region codes in their extension.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The effective country/regions (at runtime) associated with an element will be the union of all codes from the baseline element and all its extensions.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Event argument types</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>When an event takes place, the delegates described in the sections above get triggered.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>In this section, we provide the details of the types of the arguments that are passed as the event arguments.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Some of the entries in the table below have a null in the column designating the event args; this means that no arguments are passed - the relevant information is in the first argument (typically called sender) in this case.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Event<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Argument type<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>onDefaultedField</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>DefaultFieldEventArgs</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>onDefaultedRow</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>onDefaultingField</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>DefaultFieldEventArgs</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>onDefaultingRow</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>onDeleted</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>onDeletedEntityDataSource</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>DataEntityContextResultEventArgs</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>onDeleting</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>onDeletingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>DataEntityContextResultEventArgs</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>onFindingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>DataValidationEventArgs</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>onFindingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>DataValidationEventArgs</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>onFindingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>DataValidationEventArgs</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>onFindingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>DataValidationEventArgs</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>onFindingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>DataEntityContextRecordEventArgs</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>onFoundEntityDataSource</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>DataEntityContextRecordEventArgs</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>onGettingDefaultingDependencies</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>DefaultingDependenciesEventArgs</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>onGotDefaultingDependencies</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>DefaultingDependenciesEventArgs</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>onInitializedEntityDataSource</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>onInitializedRecord</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>onInitializingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>onInitializingRecord</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>onInserted</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>onInsertedEntityDataSource</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>DataEntityContextResultEventArgs</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>onInserting</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>onInsertingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>DataEntityContextResultEventArgs</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>onMappedDatasourceToEntity</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>onMappedEntityToDataSource</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>onMappingDatasourceToEntity</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>onMappingEntityToDataSource</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>onModifiedField</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>ModifyFieldEventArgs</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>onModifiedFieldValue</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>ModifyFieldValueEventArgs</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>onModifyingField</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>ModifyFieldEventArgs</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>onModifyingFieldValue</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>ModifyFieldValueEventArgs</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>onPersistedEntity</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>onPersistingEntity</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>DataEntityContextEventArgs</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>onPostedLoad</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>onPostingLoad</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>onUpdated</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>onUpdatedEntityDataSource</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>DataEntityContextResultEventArgs</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>onUpdating</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>null</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>onUpdatingEntityDataSource</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>DataEntityContextResultEventArgs</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>onValidatedDelete</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>ValidateEventArgs</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>onValidatedField</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>ValidateFieldEventArgs</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>onValidatedFieldValue</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>ValidateFieldValueEventArgs</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>onValidatedWrite</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>ValidateEventArgs</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>onValidatingDelete</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>ValidateEventArgs</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>onValidatingField</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>ValidateFieldEventArgs</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>onValidattingFieldValue</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>ValidateFieldValueEventArgs</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>onValidatingWrite</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>ValidateEventArgs</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Development tools support</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The development tools in Visual Studio provide integrated features to help you create and work with extensions.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>For example, when you right-click an element name in <bpt id="p1">**</bpt>Application Explorer<ept id="p1">**</ept>, you can create an extension for that element.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>3<ph id="ph2">\_</ph>Cust<ept id="p1">](./media/3_cust.png)](./media/3_cust.png)</ept></source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>To create an extension, the current project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> must belong to a model that references the model of the selected element in <bpt id="p2">**</bpt>Application Explorer<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>To view the model for a particular project, view the project properties.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>4<ph id="ph2">\_</ph>Cust<ept id="p1">](./media/4_cust.png)](./media/4_cust.png)</ept></source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Visual Studio creates the extension file for you, either in the current project or in a new project.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>You can then work with the extension file either as source code or by using a designer.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>You package a code-extension model for deployment exactly like you would package any other model.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Dynamics 365<ept id="p1">**</ept> menu, point to <bpt id="p2">**</bpt>Deploy<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>Create Deployment Package<ept id="p3">**</ept>, and then select the check box for the package name.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Framework events</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Tables, form data sources, form controls, and other element types that support extension events list the available events (and delegates) under an <bpt id="p1">**</bpt>Events<ept id="p1">**</ept> collection node.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For example, viewing the <bpt id="p1">**</bpt>Events<ept id="p1">**</ept> node of a table extension shows events that are defined by the framework, and delegate methods that are defined by application developers.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>5<ph id="ph2">\_</ph>Cust<ept id="p1">](./media/5_cust.png)](./media/5_cust.png)</ept></source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Events are exposed on the designer on different element and sub-element types, like table events, form events, form data source events, form control events, and others.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Open the context menu of an event node to interact with events:</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>6<ph id="ph2">\_</ph>Cust<ept id="p1">](./media/6_cust.png)](./media/6_cust.png)</ept></source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Copy event handler method<ept id="p1">**</ept>: This option copies a method signature to the clipboard.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>You can paste it in any X++ code editor to define a method that subscribes to the selected event.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Find event handlers<ept id="p1">**</ept>: Searches and lists all methods subscribed to the selected event.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Customize model elements using extensions<ept id="p1">](customize-model-elements-extensions.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>