<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4070c211ac808265dcbce28d17d2d537a7b8056a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\perf-test\testing-validation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28128be52e4f15ae5fc14e05f27b4383d28afffc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c96b0b88d0c8b4fce1029d6c3b7cc8295241166e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Testing and validations</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This tutorial shows you how to create and run test cases.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Testing and validations</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to create and run test cases.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You will need to deploy Developer Topology with Developer and Build VM.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Key concepts</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use SysTest Framework to author unit/component test code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Test module creation to manage test code and FormAdaptors.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Import Task Recorder recordings into Visual Studio to generate test code.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Integrate a Test module with a build machine.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Integrate a test module<ept id="p1">](./media/54.png)](./media/54.png)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use SysTest Framework to author unit/component test code</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can create new test cases to test the functionality in an application.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Open Visual Studio as an administrator.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Open<ept id="p2">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>, and then select <bpt id="p4">**</bpt>FleetManagement<ept id="p4">**</ept> <bpt id="p5">**</bpt>solution<ept id="p5">**</ept> from the desktop folder.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the solution file is not on your computer, the steps to create it are listed in <bpt id="p1">[</bpt>Tutorial: Create a Fleet Management solution file out of the Fleet Management models in the AOT<ept id="p1">](https://community.dynamics.com/ax/b/newdynamicsax/archive/2016/05/19/tutorial-create-a-fleet-management-solution-file-out-of-the-fleet-management-models-in-the-aot)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the <bpt id="p2">**</bpt>Fleet Management<ept id="p2">**</ept> solution, point to <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>New Project<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>Finance and Operations<ept id="p1">**</ept> as the project type to create.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Name this new project <bpt id="p1">*</bpt>FleetManagementUnitTestSample<ept id="p1">*</ept>, specify the FleetManagement folder on the desktop (C:UsersPublicDesktopFleetManagement) as the location, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>FleetManagementUnitTestSampe<ept id="p1">](./media/55.png)](./media/55.png)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the new project, and then click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Model<ept id="p1">**</ept> property to <bpt id="p2">**</bpt>FleetManagementUnitTests<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Model property<ept id="p1">](./media/56.png)](./media/56.png)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Right-click the FleetManagementUnitTestSample project, point to <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Class<ept id="p2">**</ept> as the type of element to add.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Name the new class FMUnitTestSample, and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Add new item<ept id="p1">](./media/57.png)](./media/57.png)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the first line of the code for the new class, indicate that the class extends the SysTestCase class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add the following code to define the methods for the class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These methods define two additional tests.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Save the new class.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>After the save is complete, you will see the additional two test cases in <bpt id="p1">**</bpt>Test Explorer<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Right-click on the FleetManagementUnitTestSample project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Build.<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>View<ept id="p1">**</ept> menu, open <bpt id="p2">**</bpt>Test Explorer<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Test explorer<ept id="p1">](./media/58-1024x545.png)](./media/58.png)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Run selected test<ept id="p1">**</ept> to execute specific test case.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Test Explorer will show the results of test after it is complete.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Completed test<ept id="p1">](./media/59-300x290.png)](./media/59.png)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Test module creation to manage test code and FormAdaptors</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creating a test specific module helps to keep test code together and manageable.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>Visual Studio<ept id="p1">**</ept> and go to <bpt id="p2">**</bpt>Finance and Operations<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Model Management<ept id="p3">**</ept><ph id="ph2"> &gt; </ph><bpt id="p4">**</bpt>Create model<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Create model<ept id="p1">](./media/60-1024x574.png)](./media/60.png)</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enter the model name, select the layer, and then enter any additional details.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>**Note: **It's a good idea that you include the word <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> in the name of the test module.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default build definition is configured to discover all test modules that contain the word <bpt id="p1">**</bpt>Test<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Model name<ept id="p1">](./media/61-1024x775.png)](./media/61.png)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because this model holds forms from the Application Platform/Foundation, add references to models shown below.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Model references<ept id="p1">](./media/62-1024x786.png)](./media/62.png)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>After the base test module is in place, you can import a Task Recorder recording to generate test code.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When you import a Task Recorder recording XML, test code is generated using FormAdaptors.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Form adaptors are wrapper classes over forms which provide strongly typed API that can be used to test form functionality.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>We have included pre-generated FormAdapters for each package for built-in forms.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the test module, add a reference to the corresponding Form Adaptor for packages and Test Essentials, which has helper methods to execute test code.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Import a Task Recorder recording into Visual Studio to generate test code</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can generate test code from Task Recorder recording to execute headless (non-UI) test.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Record a scenario in by using Task Recorder.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To import a Task Recording, in Visual Studio, click <bpt id="p1">**</bpt>Finance and Operations<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Addins<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Import Task Recording<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Import task recording<ept id="p1">](./media/63-1024x613.png)](./media/63.png)</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Import Task Recording<ept id="p1">**</ept> dialog, select the Test Module (ISVTestModule) under which you want to import task recording, and browse to recording xml file.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Test module<ept id="p1">](./media/64-249x300.png)](./media/64.png)</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The task recording import process generates test code that is based on the SysTestAdapter and FormAdaptor which can be viewed in Visual Studio IDE.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>We do not expect you to change any test source code that is generated as part of this step.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Generate test code<ept id="p1">](./media/65-1024x655.png)](./media/65.png)</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>After the test code is generated, set up Visual Studio options for test discovery and execution:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you have a 64-bit machine, you can run unit tests and capture code coverage information as a 64-bit process.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To configure this, select <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Test Settings<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Default Processor Architecture<ept id="p3">**</ept>, and then select <bpt id="p4">**</bpt>X64<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You might run into a situation in which the test execution engine opens and locks an assembly in your test project.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When this happens, you can’t for example, save changes to the assembly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To fix this, select <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Test Settings<ept id="p2">**</ept>, and then select <bpt id="p3">**</bpt>Keep Test Execution Engine Running<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Keep execution engine running<ept id="p1">](./media/66.png)](./media/66.png)</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Now that you have test code generated in Visual Studio IDE, it's time to discover the test and try executing them locally.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>From menu options, select <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Test Explorer<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>After the Test Explorer window is open, it will try to discover test from test code and list all the available tests as shown below.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Test explorer<ept id="p1">](./media/67-1024x658.png)](./media/67.png)</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Select the test and then click <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Execute selected<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This will execute test against the locally deployed environment.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Execute selected<ept id="p1">](./media/68-1024x652.png)](./media/68.png)</ept></source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Integration of the test module with build process</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>After the test module is a part of source control, the build process template will discover all test modules, which contain the word <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> in the name.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following illustration shows build and test execution as part of Visual Studio Online.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Build and test execution<ept id="p1">](./media/69.png)](./media/69.png)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>