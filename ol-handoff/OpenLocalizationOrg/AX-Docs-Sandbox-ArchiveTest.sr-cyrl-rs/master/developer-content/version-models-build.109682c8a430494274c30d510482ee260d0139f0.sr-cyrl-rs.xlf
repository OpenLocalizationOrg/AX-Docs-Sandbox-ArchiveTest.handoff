<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1b3c91106621b187c63b84b85d73f48f182791b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\dev-tools\version-models-build.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da3ecf8e926b3f2709a48f8c0ce3d9280f6ab32c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaf664204b26d40b07c1c8732d4c7440f4ef5c5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Version models in the automated build</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>The topic explains how you can update the models in a source package and deployable package of the build output with the version of the build that produced them.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Version models in the automated build</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Platform update 6, a new task in the automated build definition updates the models in the source package and deployable package of the build output with the version of the build that produced them.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Build definitions that were created before Platform update 6 must be manually updated to include this task.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Updating an existing build definition<ept id="p1">](#updating-an-existing-build-definition)</ept> section later in this topic.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Version numbers</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Even though models are compiled into one package, the metadata information of all models is retained inside the binary package.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This information can be reviewed from Microsoft Dynamics Lifecycle Services (LCS) or from the client.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In LCS, follow these steps to find the version numbers of models that are installed in an environment.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Full details<ept id="p1">**</ept> page for the environment, under <bpt id="p2">**</bpt>Environment Version Information<ept id="p2">**</ept>, click the <bpt id="p3">**</bpt>View detailed version information<ept id="p3">**</ept> link.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Installed updates<ept id="p1">**</ept> page, in the <bpt id="p2">**</bpt>Machine name<ept id="p2">**</ept> field, select an Application Object Server (AOS) computer.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the table list, find the <bpt id="p1">**</bpt>Publisher name<ept id="p1">**</ept> field of the model, and expand the list by clicking the arrow icon.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A full list of all models from that publisher is shown.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The version number is shown in the <bpt id="p1">**</bpt>Version<ept id="p1">**</ept> column.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the client, follow these steps to find the version numbers of models that are installed in an environment.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Open the URL for the environment, and sign in.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>After the dashboard is loaded, click the gear symbol at the upper right of the page, and then click <bpt id="p1">**</bpt>About<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the dialog box that appears, expand <bpt id="p1">**</bpt>Loaded Packages and their Models<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Find the package where the model resides, and expand the list by clicking the arrow icon.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The list of models for the package is shown, together with the version number.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>All version numbers are in .NET assembly format.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>They consist of four numbers that are separated by a dot (.), such as <bpt id="p1">**</bpt>1.2.3.4<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The purpose of model versioning</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As code is updated, the build is used to produce new packages that can be deployed to environments.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Microsoft Visual Studio Team Services (VSTS) tracks the changes that have been included in each build since the previous build.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the version number of the build is included in the models that are produced, it provides end-to-end traceability of the code changes that are available in a specific environment.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can find the build number and then review the changes that are included in that build in VSTS.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For customers and partners that use builds on different branches, or that use different build definitions for nightly builds, gated check-in builds, or deployment builds, each build can have a different versioning scheme.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This approach helps differentiate the model metadata in the deployable packages and tie them back to their originating build definition.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Setting up versioning</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For build definitions that are created by Platform update 6 or newer deployments, the task to include build version in models is automatically added and active.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default build number of a new build definition in VSTS consists of the year, month, and day, and the incremental number of the build for that day.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about build numbers in VSTS, and the options that are available, see <bpt id="p1">[</bpt>Build definition options<ept id="p1">](https://www.visualstudio.com/en-us/docs/build/define/options#Buildnumberformat)</ept> on the Microsoft Visual Studio docs site.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The automated build will apply the build version number to the models that are built.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Preventing models from being updated</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>By default, the build task assigns versions only to models that are in layers above the ISP layer.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Therefore, customers can consume code models from third-party vendors without overwriting the version numbers that are supplied in their models.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>However, you can also prevent other models from having their version numbers overwritten during the build, regardless of layer.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you edit the build definition, on the <bpt id="p1">**</bpt>Variables<ept id="p1">**</ept> tab, in the <bpt id="p2">**</bpt>ModelVersionExclusions<ept id="p2">**</ept> variable, supply a comma-separated list of model names to exclude.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Updating models in lower layers</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For third parties that develop solutions in the ISV or ISP layer, a manual change must be made to the build definition to automatically set model versions in those layers.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Edit the build definition.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Tasks<ept id="p1">**</ept> tab, click the <bpt id="p2">**</bpt>Set Model Versions<ept id="p2">**</ept> task.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Arguments<ept id="p1">**</ept> field, add the following option at the end of the existing list of arguments: <bpt id="p2">**</bpt>-UpdateLayersAbove 7<ept id="p2">**</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Updating an existing build definition</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For build definitions that were created before Platform update 6, a new task must be manually added to the build definition.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This feature can be added to a build definition only after the build virtual machine (VM) has been updated to Platform update 6 or later.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In VSTS, on the <bpt id="p1">**</bpt>Build &amp; Release<ept id="p1">**</ept> page, under <bpt id="p2">**</bpt>Builds<ept id="p2">**</ept>, on the <bpt id="p3">**</bpt>All Definitions<ept id="p3">**</ept> tab, find your build definition.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Click the ellipsis (…), and then click <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Edit the build definition</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Tasks<ept id="p1">**</ept> tab, click <bpt id="p2">**</bpt>+ Add Task<ept id="p2">**</ept> at the bottom of the page.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add tasks<ept id="p1">**</ept> pane on the right side of the page, on the <bpt id="p2">**</bpt>Utility<ept id="p2">**</ept> tab, scroll down to find the <bpt id="p3">**</bpt>PowerShell<ept id="p3">**</ept> task.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Hover the mouse pointer over the task, and click the <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> button that appears.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add a PowerShell task</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the list of tasks on the left side of the page, click to select the <bpt id="p1">**</bpt>PowerShell Script<ept id="p1">**</ept> task that is added.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>On the right side of the page, change the <bpt id="p1">**</bpt>Display name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Script Path<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Arguments<ept id="p3">**</ept> properties to reflect the required settings.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Set the properties for the Set Model Versions task</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the list of tasks on the left side of the page, drag the <bpt id="p1">**</bpt>Set Model Versions<ept id="p1">**</ept> task so that it's between the <bpt id="p2">**</bpt>Prepare for build<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Build the solution<ept id="p3">**</ept> tasks.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Set the order of the Set Model Versions task</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Variables<ept id="p1">**</ept> tab, click <bpt id="p2">**</bpt>+ Add<ept id="p2">**</ept> at the bottom of the list of variables.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the first column, for the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> variable, enter <bpt id="p2">**</bpt>ModelVersionExclusions<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> to save the new task.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>