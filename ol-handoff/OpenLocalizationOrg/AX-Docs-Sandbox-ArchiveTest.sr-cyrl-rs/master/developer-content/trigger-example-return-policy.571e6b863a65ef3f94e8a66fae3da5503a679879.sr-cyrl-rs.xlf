<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbdff5f260e5d61cdb50ae044b0e87ca9ff414a9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">retail\dev-itpro\trigger-example-return-policy.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">806f5990faf2d368225b6b1e00b7318a966fb92e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b6ca8ddeb152fe8bf19939b94b5bb9e6862f26f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Implement a return policy using triggers</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This topic has two examples which show how you can implement a new policy using a trigger.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Implement a return policy using triggers</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic has two examples which show how you can implement a new policy using a trigger.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The examples in this topic assume that you have a new return policy.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The maximum time period for returning an item is 30 days and no item may be returned more than 30 days after the date of purchase.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Additionally, the cashier or manager is not allowed to void more than three items in a single transaction.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Extend the MPOS trigger</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Open Visual Studio as an administrator.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Open the ModernPOS solution from K:<ph id="ph1">\\</ph>RainMainStab<ph id="ph2">\\</ph>7.0.1265.3014<ph id="ph3">\\</ph>retail<ph id="ph4">\\</ph>Services<ph id="ph5">\\</ph>RetailSDK<ph id="ph6">\\</ph>Code<ph id="ph7">\\</ph>POS.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add new a TypeScript file in the POS.Core project, under the <bpt id="p1">**</bpt>Triggers<ept id="p1">**</ept> folder, and name it ExtensionTrigger.ts.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add reference to the triggers interface and create a new module for the code.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the ExtensionTrigger.ts file, add the following code.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Scenario 1: 30day return policy</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To implement the 30-day return policy, extend the IPreConfrimReturnTransactionTrigger by creating a new class and implementing the IPreConfirmReturnTransactionTrigger interface.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This trigger will be invoked before returning any item from the transaction.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a new class that implements IPreConfirmReturnTransactionTrigger in the module Commerce.Triggers.Samples.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Name it PreConfirmReturnTransactionTrigger, as shown in the following code example.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Implement the <bpt id="p1">**</bpt>execute<ept id="p1">**</ept> method from the interface and add code to validate the return condition.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Scenario 2: Limit of three returns per transaction</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To implement the three-time limit, create a new class and implement the IPreVoidProductsTrigger interface.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This trigger will be invoked before voiding any item in a transaction.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create a new class named PreVoidProductsTrigger that implements the IPreVoidProductsTrigger interface in the module Commerce.Triggers.Samples.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Make sure this code is outside of the PreConfirmReturnTransactionTrigger class that you created in the previous step.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Implement the <bpt id="p1">**</bpt>execute<ept id="p1">**</ept> method from the interface and add the code to validate the void condition.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Register the two triggers after the MPOS logon.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Copy the following code to the same file after the two classes that you created in the previous steps but within the same module Commerce.Triggers.Samples.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Register the PostLogon trigger during the DOMCOntentLoaded event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Copy the following code outside of all the classes but within the module Commerce.Triggers.Samples.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Build the project</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Compile and rebuild the project.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Deploy the MPOS in Local Machine by clicking the <bpt id="p1">**</bpt>Deploy<ept id="p1">**</ept> button in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you get an error which states that “The project POS.App needs to be deployed before it can be started.”, then follow the steps below to resolve the error and try again.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Right-click the ModernPOS solution in Visual Studio and click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Property<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Configuration<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Deploy<ept id="p1">**</ept> check box for the Pos.App project and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Validate the customization</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Log in to MPOS using 000160 as the operator ID and 123 as the password.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Complete a sales transaction.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Show Journal<ept id="p1">**</ept> and try to return the merchandise.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You will get the error message “Cannot return, you are past return date”.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Create another new transaction and add four different items.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Try to return all four items.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You will get an error for the fourth item with the message, "Void is not allowed anymore.”</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> In the sample code, the return the time period is configured as 100ms, so that you can test your code immediately.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You should change the configuration as needed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>