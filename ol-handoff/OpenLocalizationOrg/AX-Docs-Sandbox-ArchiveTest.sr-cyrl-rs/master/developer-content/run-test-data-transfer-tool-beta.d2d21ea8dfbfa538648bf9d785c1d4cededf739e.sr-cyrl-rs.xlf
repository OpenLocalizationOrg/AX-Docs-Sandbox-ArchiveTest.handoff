<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb769ffa81e46c03270196fc9341f0af63c7d58b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\lifecycle-services\ax-2012\run-test-data-transfer-tool-beta.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71580a58aaf315740137e3cf6f04c49c3ac0c8fd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46a95e08edb4d673293f1557b6f8bf972c5aa503</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Run the Test Data Transfer Tool (beta) for Dynamics AX (AX 2012)</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Run the Test Data Transfer Tool (beta) for Dynamics AX (AX 2012)</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Security and permissions</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) requires only Microsoft SQL Server permissions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) does not in any way recognize the security mechanisms that are built into Microsoft Dynamics AX.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you have permission to execute <bpt id="p1">**</bpt>SELECT<ept id="p1">**</ept> statements in SQL Server Management Studio or to use the SQL Server bulk copy tool (bcp) to export data, you have the permissions that are required to export data by using the Test Data Transfer Tool (beta).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following SQL Server permissions are required during export:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Read permission to the sys schema to read tables, indexes, and sysdatabases</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Read permission to the ModelElements view</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Read permission to the SQLDictionary table</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Read permission to the ElementType table</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Read permission to the ModelElement table</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Read permission to the table that you are exporting</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you have permission to execute <bpt id="p1">**</bpt>SELECT<ept id="p1">**</ept> statements and <bpt id="p2">**</bpt>BULK INSERT<ept id="p2">**</ept> statements in SQL Server Management Studio, you have the permissions that are required to import data by using the tool.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following SQL Server permissions are required during import:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Read permission to the sys schema to read tables, indexes, and sysdatabases</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Read permission to the ModelElements view</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Read permission to the SQLDictionary table</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Read permission to the ElementType table</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Read permission to the ModelElement table</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Read/write permission to the SYSTEMSEQUENCES table</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Write permission to the table that you are importing</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Permission to execute <bpt id="p1">**</bpt>ALTER INDEX<ept id="p1">**</ept> on the table that you are importing, if the data violates unique index constraints and you want the index to be disabled automatically</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Appropriate permissions for any SQL commands that are found in the <ph id="ph1">\[</ph>Import<ph id="ph2">\]</ph> directory</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Run the tool</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You must run the Test Data Transfer Tool (beta) from a system that has the SQL Server client tools installed, so that the bcp utility is in the command-prompt path.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You must run the tool directly from the computer that is hosting the database during import.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run the Test Data Transfer Tool (beta), follow these steps.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Stop the instance of Microsoft Dynamics AX Application Object Server (AOS).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Run the Test Data Transfer Tool (beta) (DP.exe).</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Include arguments that describe the action to take.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As the tool runs, the following information is displayed:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The tool’s progress</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The number of tables that must still be processed</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The number of errors that have occurred</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After processing is completed, the tool writes the DPLog.xml log file to the current directory.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To find errors, search for ‘failed’ in the log file.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>All arguments are optional.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>direction<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>EXPORT</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specify EXPORT to export data or IMPORT to import data.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>directory<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The current directory</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specify the directory from which the data should be exported or to which the data should be imported.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>database<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>AXDB</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the database.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>server<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The current computer</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specify the computer name or instance name of the SQL Server computer that is hosting the Microsoft Dynamics AX database.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To specify an instance name, enter it in the format ServerNameInstanceName.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you have a named instance on a local computer, you can use the format localhostInstanceName or InstanceName.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can view a summary of the command-line options by using the following command.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Stop the tool</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To stop the tool, press Ctrl+C.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The tool finishes the tables that it is currently working on and then closes.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Overview of data export and import</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) exports and imports three files for each Microsoft Dynamics AX table.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If tables have dependencies in Microsoft Dynamics AX, these files support the capability of the tool to export and import the tables independently of related tables.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following diagram shows the export and import process.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Process of exporting and importing data</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Export and import process</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following table describes the three types of files.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>File type</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>.out</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A bcp data file that contains table data.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Columns are separated by \ #&amp;#124;EOC&amp;#124;<ph id="ph1">\#</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Rows are separated by <ph id="ph1">\#</ph> &amp;#124;EOR &amp;#124;<ph id="ph2">\#</ph>n.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>.xml</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A bcp data file that contains the table metadata (column descriptions).</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>.outmodel</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A file that contains metadata that is specific to Microsoft Dynamics AX.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This metadata includes all names and IDs of the table and its fields.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This file also includes the <bpt id="p1">**</bpt>elementType<ept id="p1">**</ept> attribute, which stores the names and IDs of any Microsoft Dynamics AX tables, classes, or extended data types that are referenced by the table.This information is used during import to match up fields that have been renamed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The information is also used to update the table IDs, class IDs, or data type IDs so that those IDs match the IDs in the target database.Data in the .outmodel file is constructed from the Metadata.xml file.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This file is generated by an X++ job that you run from Microsoft Dynamics AX on the source database.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When the Test Data Transfer Tool (beta) exports data, the Metadata.xml file is used to identify table relationships and EDT references that require additional information during import.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This additional information is included in the .outmodel file that the tool exports.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It is important that you maintain an updated .outmodel file in some scenarios, such as scenarios that involve table inheritance.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Each row in the <bpt id="p1">**</bpt>SuperType<ept id="p1">**</ept> table includes an <bpt id="p2">**</bpt>InstanceRelationType<ept id="p2">**</ept> column that contains the Microsoft Dynamics AX ID of the <bpt id="p3">**</bpt>SubType<ept id="p3">**</ept> table for that row.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Because the Microsoft Dynamics AX IDs can change over time, the data in the .out file can become inaccurate.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) uses information from the Metadata.xml file to avoid this situation and to make sure that the data is imported correctly.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When you import files, make sure that the Metadata.xml file is current.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>During the import process, the tool uses the .outmodel file to recognize the relationships.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The tool then queries Microsoft Dynamics AX to make sure that the data is imported correctly.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, the .outmodel file indicates that the value to insert into the <bpt id="p1">**</bpt>InstanceRelationType<ept id="p1">**</ept> column is <bpt id="p2">**</bpt>1234<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>However, the tool recognizes that new tables have been added to the new Microsoft Dynamics AX ID for which the subtype table is <bpt id="p1">**</bpt>1235<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When you use a Metadata.xml file that is out of date, the data is usually imported and exported without any errors.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This lack of errors can make it difficult to diagnose issues.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The Microsoft Dynamics AX IDs that are included in the .out file are typically correct.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>However, when a table’s Microsoft Dynamics AX ID changes, the data import is completed successfully, but incorrect values are added in the Microsoft Dynamics AX ID field.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, payroll data contains some inheritance tables that are related to the setup of an employee’s payroll tax.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you load data that was exported by using an outdated Metadata.xml file, several issues occur that involve the inheritance relationships in the tables.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you are running Microsoft Dynamics AX as an administrator, the inheritance relationships can be correctly resolved, and the payroll payments are then generated correctly.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>However, if you are running Microsoft Dynamics AX as a non-administrator, the X++ code does not read the records from the database.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Therefore, the payroll payments that are generated do not include any taxes.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Exporting data</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The procedure for exporting data consists of the following general steps:</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Generate a Metadata.xml file.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Determine which data to export.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Run the tool.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Generate the Metadata.xml file</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Before you use the Test Data Transfer Tool (beta) to export data, you must generate the Metadata.xml file on the source system.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The Metadata.xml file is used only during export.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The Metadata.xml file can become out of date if you do not update it periodically.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If the file is out of date, the exported data might not contain the <bpt id="p1">**</bpt>elementType<ept id="p1">**</ept> attribute, and the import might not update the IDs to match the IDs in the target database.You must update the file manually.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To update the Metadata.xml file, follow these steps.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Import the MetadataXMLGenerator.xpo from the same folder that DP.exe is stored in, and then run the MetadataXMLGenerator job.A new Metadata.xml file is created in a temporary folder on your computer.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Locate the new Metadata.xml file in one of the following ways:</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When the MetadataXMLGenerator job is completed, the path of the new Metadata.xml file is provided in the Infolog.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Open a Command Prompt window, and enter <bpt id="p1">**</bpt>echo %temp%<ept id="p1">**</ept> to view the path of the temporary folder where the Metadata.xml file is stored.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Navigate to the temporary folder, and then copy the Metadata.xml file to the subfolder where the Test Data Transfer Tool (beta) is installed.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If there is an existing Metadata.xml file in the <ph id="ph1">\[</ph>Lists<ph id="ph2">\]</ph> subfolder, overwrite the existing Metadata.xml file by using the Metadata.xml file that you just generated.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Choose data to export</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) is designed to export all data from all tables in the database, unless tables, columns, or rows are filtered out of the exported data.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The tool is preconfigured to include a set of filters that filter out many tables.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The preconfigured filters are based on the following guidelines:</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Do not export tables that contain code or models.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Do not export security settings.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Do not export computer-specific data.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Do not export user-specific data.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Do not export temp tables.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>These filters might not be complete or appropriate for your requirements.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For example, you might want to export some of the data that is filtered out by default, or you might have additional tables that should not be exported.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If a table contains a <bpt id="p1">**</bpt>RecVersion<ept id="p1">**</ept> column, the Test Data Transfer Tool (beta) ignores the current value in the table and always exports the table by using the value 1.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This feature makes it much easier to compare .out files and see only meaningful differences.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This feature is especially useful when you keep your data in a version control system.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Most Microsoft Dynamics AX tables contain a <bpt id="p1">**</bpt>RecVersion<ept id="p1">**</ept> column.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following table describes the export strategies that are used in the standard exclude files and the Filters.xml file.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Content of the table</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Export strategy</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Reason</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Code, system data, or user data that is not connected to the business data</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Exclude this table from export.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This strategy prevents data from being unintentionally changed when business data is imported.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Cached values that are calculated from business data</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Export an empty .out file.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This strategy helps control the content of the table when the table is imported, because the content depends on business data.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An .out file is required, but we do not want to store values that can be recalculated from the source data.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Therefore, an empty .out file is exported.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Export data</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>After you have generated the Metadata.xml file and chosen the data to export, you can export the file.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) does not create any temporary files during export.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) generates SQL statements from the content of the <ph id="ph1">\[</ph>Lists<ph id="ph2">\]</ph>Filters.xml file.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In particular, the content of the <ph id="ph1">&amp;lt;</ph>filter<ph id="ph2">&amp;gt;</ph> element can contain arbitrary SQL statements that are executed in your user context during export.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Make sure that you thoroughly test all changes to the Filters.xml file before you modify it.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Export filtering</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>When you export data by using the Microsoft Dynamics AX 2012 Test Data Transfer Tool (beta), you can prevent the tool from exporting data in three ways:</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Exclude  or include tables</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Exclude columns</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Exclude rows</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Create an exclude file to exclude tables from the export</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To exclude a table or a set of tables from the exported data, follow these steps.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Add a text file in the <ph id="ph1">\[</ph>Lists<ph id="ph2">\]</ph> directory.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The file name must start with <bpt id="p1">**</bpt>Exclude –<ept id="p1">**</ept> (the space and hyphen are part of the name), and the file name extension must be <bpt id="p2">**</bpt>.txt<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>You can also modify an existing file.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>In the text file, add a line that contains a regular expression that matches the name of the table or tables to exclude from the export.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>When a table is excluded, no files are created for that table during the export.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The regular expression that you provide is matched against the name of the table as that name appears in the SQL Server database.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Differences in capitalization are disregarded.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Additionally, the Test Data Transfer Tool (beta) adds anchors to the regular expression from the exclude file to make sure that tables are excluded only if the whole name matches the regular expression.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The tool uses Microsoft .NET regular expression syntax.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The exclude file format lets you enter blank lines, so that you can create separate groups for expressions in a single file.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The file format also lets you enter single-line comments (where the line starts with //), so that you can provide comments that describe why the tables have been excluded.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Examples of excluding tables from the export</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>To exclude only the table that is named SysVersionControlParameters, use the following regular expression.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>// Exclude 1 table SYSVERSIONCONTROLPARAMETERS</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To exclude all tables that have names that start with SysVersionControl, use the following regular expression.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>// Exclude multiple tables SYSVERSIONCONTROL.*</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Including tables in the export</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Typically, you specify the data that is exported by describing the tables that you do not want to export.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>However, if you want to describe the tables that you do want to export, you can use a regular expression in an exclude list.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Just create a regular expression that matches all tables except the tables that you want to export.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The following table describes the syntax that you can include in your regular expression.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Regular expression syntax</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Match any single character.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Match the previous expression zero or more times.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>(?<ph id="ph1">&amp;lt;</ph>!</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>subexpression)</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Prevent a match if the end of the previously matched content matches the subexpression.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This expression is known as a zero-width negative lookbehind assertion.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Match the start of the string.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>To specify tables, first define a regular expression that starts with .<ph id="ph1">\*</ph> to match all tables.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Then append a zero-width negative lookbehind assertion for each table that you want to export.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The subexpression in each assertion is the name of the table that is anchored to the start of the string.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For example, to export only the InventTable and DocuRef tables, use the following regular expression.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>// Match all tables except InventTable and DocuRef .*(?&lt;!^InventTable)(?&lt;!^DocuRef)</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For each additional table that you want to export, append (?<ph id="ph1">&amp;lt;</ph>!^NameOfTable) to the same regular expression.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Exclude columns from the export</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>To exclude a column or columns from the exported data, follow these steps.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt><ph id="ph1">\[</ph>Lists<ph id="ph2">\]</ph>Filters.xml<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&amp;lt;</ph>table<ph id="ph2">&amp;gt;</ph> element that has a <bpt id="p1">**</bpt>name<ept id="p1">**</ept> attribute.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>name<ept id="p1">**</ept> attribute is the name of the table that contains the columns to exclude.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Add an <ph id="ph1">&amp;lt;</ph>exclude<ph id="ph2">&amp;gt;</ph> element in the <ph id="ph3">&amp;lt;</ph>table<ph id="ph4">&amp;gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>For each column that you want to exclude from the export for this table, add a <ph id="ph1">&amp;lt;</ph>field<ph id="ph2">&amp;gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The content of the <ph id="ph1">&amp;lt;</ph>field<ph id="ph2">&amp;gt;</ph> element is the name of the column to exclude.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>There can be only one <ph id="ph1">&amp;lt;</ph>exclude<ph id="ph2">&amp;gt;</ph> element per table.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Example of excluding columns from the export</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To exclude the <bpt id="p1">**</bpt>BackingEntityTableId<ept id="p1">**</ept>, <bpt id="p2">**</bpt>BackingEntityKeyFieldId<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>BackingEntityValueFieldId<ept id="p3">**</ept> columns when you export the <bpt id="p4">**</bpt>DimensionAttribute<ept id="p4">**</ept> table, include an entry such as this in Filters.xml.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;exclude&gt;</bpt> <bpt id="p2">&lt;field&gt;</bpt>BackingEntityTableId<ept id="p2">&lt;/field&gt;</ept> <bpt id="p3">&lt;field&gt;</bpt>BackingEntityKeyFieldId<ept id="p3">&lt;/field&gt;</ept> <bpt id="p4">&lt;field&gt;</bpt>BackingEntityValueFieldId<ept id="p4">&lt;/field&gt;</ept> <ept id="p1">&lt;/exclude&gt;</ept><ph id="ph1">
</ph><ph id="ph2">      </ph></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Exclude rows from the export</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>To exclude rows from the exported data, follow these steps.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">\[</ph>Lists<ph id="ph2">\]</ph>Filters.xml.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&amp;lt;</ph>table<ph id="ph2">&amp;gt;</ph> element that has a <bpt id="p1">**</bpt>name<ept id="p1">**</ept> attribute.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>name<ept id="p1">**</ept> attribute is the name of the table that contains the columns to exclude.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">&amp;lt;</ph>filter<ph id="ph2">&amp;gt;</ph> element in the <ph id="ph3">&amp;lt;</ph>table<ph id="ph4">&amp;gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The content of the <ph id="ph1">&amp;lt;</ph>filter<ph id="ph2">&amp;gt;</ph> element should be an SQL statement that describes the rows to export.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>filter<ph id="ph2">&amp;gt;</ph> element is like an SQL WHERE clause, but each column name should be wrapped in a <ph id="ph3">&amp;lt;</ph>field<ph id="ph4">&amp;gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>There can be only one <ph id="ph1">&amp;lt;</ph>filter<ph id="ph2">&amp;gt;</ph> element per table.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>You can filter based on multiple columns in the table.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>You cannot filter based on data in other tables.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Users often want to exclude all rows from the export.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>You can easily exclude all rows by using a filter that always evaluates to false.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>In the standard filters that we supply, a filter of 0 = 1 is the idiom for tables that we want to export as empty.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>However, when this technique is used, the Test Data Transfer Tool (beta) still creates files for the table during export, even if the .out file does not contain any data.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This behavior is unlike the behavior when you exclude the whole table by using an entry in an exclude file.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Examples of excluding rows from the export</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>To export only those rows in <bpt id="p1">**</bpt>SysLastValue<ept id="p1">**</ept> where the <bpt id="p2">**</bpt>UserID<ept id="p2">**</ept> is blank, include the following entry in Filters.xml.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;filter&gt;</bpt><bpt id="p2">&lt;field&gt;</bpt>UserID<ept id="p2">&lt;/field&gt;</ept> = ''<ept id="p1">&lt;/filter&gt;</ept><ph id="ph1">
</ph><ph id="ph2">      </ph></source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>In this case, you can imagine that the SQL query that defines the rows to export is SELECT <ph id="ph1">\*</ph> FROM SysLastValue WHERE UserID = ''.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>To prevent all rows in SysPersonalization from being exported, include the following entry in Filters.xml.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;filter&gt;</bpt>0 = 1<ept id="p1">&lt;/filter&gt;</ept><ph id="ph1">
</ph><ph id="ph2">      </ph></source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>In this case, you can imagine that the SQL query that defines the rows to export is SELECT <ph id="ph1">\*</ph> FROM SysPersonalization WHERE 0 = 1.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Importing data</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) is designed to try to import all the data in the directory that you specify.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The tool does not perform any filtering during import.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The only exception to this rule is the <bpt id="p1">**</bpt>SystemSequences<ept id="p1">**</ept> table.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The tool exports the <bpt id="p1">**</bpt>SystemSequences<ept id="p1">**</ept> table just like any other table.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>However, during import, the tool ignores any data that you supply for this table.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Instead, the tool updates the <bpt id="p1">**</bpt>SystemSequences<ept id="p1">**</ept> table in the database for each table that is imported if the next <bpt id="p2">**</bpt>RecID<ept id="p2">**</ept> value for that table in the <bpt id="p3">**</bpt>SystemSequences<ept id="p3">**</ept> table is less than the maximum <bpt id="p4">**</bpt>RecID<ept id="p4">**</ept> in the table that is being imported.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>As each table is imported, the tool also makes any adjustments that are required to the other ID values that are stored in the <bpt id="p1">**</bpt>SystemSequences<ept id="p1">**</ept> table.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>You can import a table that has no rows in the .out file.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>You can also not import a table at all.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>These two operations are not the same.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>When you import a table that has no rows, the existing data in that table is deleted.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>However, if you do not import a table at all, the existing data in that table is untouched.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>For each table that must be imported, the tool performs the following actions:</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The tool searches for a table in the target database that has the same origin GUID.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>If such a table exists, the tool uses that table as the target of the import.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If no such table exists, the tool tries to find a table in the target database that has the same name.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>If such a table exists, the tool uses that table as the target of the import.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>If no target table can be found, the table is not imported, and no error is produced.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>When a target table has been identified, the tool creates a new temporary version of the .out file that matches the columns in the target table.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>For each column in the source table, the tool first searches for the matching column in the target table by using the origin GUID of the field.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>If no origin-based match is found, columns are matched by using the field names.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If there are columns in the source table that do not have matching columns in the target table, the data for those columns is ignored, and no error is produced.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>If there are columns in the target table that do not have matching columns in the source table, default values are used.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>In most cases, the default values are 0 (zero) or empty values that match the data type of the target column.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>However, if the target column is named <bpt id="p1">**</bpt>InstanceRelationType<ept id="p1">**</ept>, the default value is the table ID of the target table.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>For any column that is known to refer to a Microsoft Dynamics AX entity by the entity’s table ID, class ID, or extended data type ID, the tool updates the ID to match the ID of the same entity in the target database.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The tool first maps the ID in the source data to the origin of the entity at the time of export.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The tool then uses the origin of the entity to obtain the ID in the target database.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>If the entity cannot be found in the target system, the original ID is used, and no error is produced.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>During import, if data is not imported because of an index violation in a non-clustered index, the tool tries to disable the index and then retries the import.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>In this case, an error is reported in the log file, even if the data is successfully imported after the index was disabled.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Import example</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following example shows how to import all files in the <bpt id="p1">**</bpt>Import<ph id="ph1">\_</ph>March2013<ept id="p1">**</ept> directory.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>DP.exe IMPORT Import_March2013 AXTestDB</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Files used during import</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This section describes the files that are used by the Test Data Transfer Tool (beta) during the import process.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Temporary files</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) can import data into tables that have many kinds of changes, such as columns that have been added, removed, or renamed.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>To enable this functionality, the tool writes a modified version of the .out file to a temporary location on disk and passes this file to bcp to import.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Then, when the import is completed, the tool deletes the temporary file.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The name of the temporary file is generated by calling <bpt id="p1">**</bpt>Path.GetTempPath()<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Path.GetRandomFileName()<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Typically, the temporary files are deleted even when run-time errors occur.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>However, in very rare situations, such as when a power outage occurs during import, the temporary files can be written and not deleted.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Because the files are written to the current user’s temporary path, this issue should not cause unexpected information disclosure.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>However, depending on the importance of the information that you are importing and on your organization’s data handling policies, you might have to know about this risk.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>.sql files</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) lets you execute arbitrary SQL statements in your user context by adding .sql files to the <ph id="ph1">\[</ph>Import<ph id="ph2">\]</ph> folder.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Add only .sql files that come from a trusted source.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>.out files, .outmodel files, and .xml files</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) generates SQL statements from the names of the .out files and from the content of the other files in the directory that contains the data to import.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The content that is pulled from those files and used to generate SQL statements is expected to represent table names.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>To prevent SQL injection attacks, the tool validates and escapes the data before that data is used to create the SQL queries.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>However, we still recommend that you accept data only from trusted sources.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Run SQL scripts after import</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The Test Data Transfer Tool (beta) lets you run SQL scripts after you complete the import.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Any modifications that you have to make to imported data can be completed by using the SQL scripts.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Before you complete your data import, write the SQL script, and then save the file as an .sql file in the <ph id="ph1">\[</ph>Import<ph id="ph2">\]</ph> subfolder in the same location as the tool.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>When the import is completed, the tool automatically runs the SQL script file that you have stored in the <ph id="ph1">\[</ph>Import<ph id="ph2">\]</ph> folder.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>