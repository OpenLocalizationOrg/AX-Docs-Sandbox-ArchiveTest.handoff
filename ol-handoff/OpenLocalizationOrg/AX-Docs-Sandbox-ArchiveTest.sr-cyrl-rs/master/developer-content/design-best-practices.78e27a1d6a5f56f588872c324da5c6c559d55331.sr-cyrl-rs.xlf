<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cce961cca10f071b94d9e83f804cdbd5c9eb446</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\dev-tools\design-best-practices.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31a8de8a8c3d841f29e79e65b27719b3568aaa86</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77a463c2f50b36612bf4cbad5285c64b59d8331d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Design principles and best practices</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This article describes design principles for data entities.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>It also includes guidelines for the names of data entities, fields, relation roles, roles, and OData EntityTypes and EntitySets.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Design principles and best practices</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article describes design principles for data entities.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It also includes guidelines for the names of data entities, fields, relation roles, roles, and OData EntityTypes and EntitySets.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Entity design principles</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A data entity should provide a holistic object that encapsulates the relevant business logic in a single consumable contract.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The contract is then exposed through application interfaces (APIs), such as OData, import and export, integration, and the programming model.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each data entity should be designed to meet the following goals.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Encapsulation</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each entity should provide an abstraction between the physical data model and the consumer of the entity.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The entity should encapsulate the underlying tables that, together, can define an object that has a specific purpose in the business.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Consumers of the entity might be form clients, services, and integration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Each entity should encapsulate multiple related tables to represent the domain object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In some situations, single table entities are acceptable.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A single public contract</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The public contract for an entity should be the same across all integration end points.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the customer entity must expose the same fields or API to both OData and import/export.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This principle guarantees that the published schema for an entity is consistent, regardless of the mechanism for consumer interaction.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When an entity is consumed, the business logic that is executed within the entity during CRUD operations must not vary based on the type of consumer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Simplicity</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The consumer of an entity should be able to interact with the entity based on the accepted industry or domain definitions of the entity.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The behavior details of the entity should be kept hidden and should be prevented from distorting the interaction.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The consumer of an entity must be able to interact with the entity by using the natural key of the entity.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The consumer must not be required to use any keys that are implementation-specific, such as any surrogate key that it generates.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Naming guidelines</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Data entity names</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Do</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Don’t</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Prefix the name with standard prefixes, because of the lack of namespaces.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Don't include underscores in names.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the postfix "Entity" to the name to prevent conflicts with tables and classes that have the same prefix.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Don't use abbreviations in conceptual names.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Give the entity a conceptual name that is aligned with the name in the en-us UI.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the conceptual name of the entity that exposes records from the InventTable table should be named <bpt id="p1">**</bpt>ReleasedProduct<ept id="p1">**</ept>, so that the full name of the entity will be <bpt id="p2">**</bpt>EcoResReleasedProductEntity<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Result:<ept id="p1">**</ept> <ph id="ph1">&amp;lt;</ph>prefix<ph id="ph2">&amp;gt;</ph><ph id="ph3">&amp;lt;</ph>ConceptualName<ph id="ph4">&amp;gt;</ph>Entity</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Data entity field names</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Do</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Don’t</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Give the field name a conceptual name that is aligned with the name in the en-us UI.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, use <bpt id="p1">**</bpt>ItemNumber<ept id="p1">**</ept> instead of <bpt id="p2">**</bpt>ItemID<ept id="p2">**</ept> as the field name to align with the UI, where the label is <bpt id="p3">**</bpt>Item number<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Don't include prefixes in field names.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, a field should not be named <bpt id="p1">**</bpt>InventLocationId<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the postfix "ID," "Number," and so on, to the name of a field that is part of foreign keys to prevent collision with the navigation properties.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, use <bpt id="p1">**</bpt>WarehouseID<ept id="p1">**</ept> instead of <bpt id="p2">**</bpt>Warehouse<ept id="p2">**</ept> as a field name, because <bpt id="p3">**</bpt>Warehouse<ept id="p3">**</ept> is the navigation method to the <bpt id="p4">**</bpt>Warehouse<ept id="p4">**</ept> entity.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Don't include country/region-specific postfixes in field names.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, a field should not be named <bpt id="p1">**</bpt>InventoryProfileID<ph id="ph1">\_</ph>RU<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Don't include underscores in field names.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Don't use abbreviations in field names.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Data entity relation role names</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Do</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Don’t</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Use the plural form when you name roles that have a cardinality that is higher than 1.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, the foreign key on Customer to Party should have the role name of Customers, because the cardinality from Party to Customer is 0...N.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Don't include prefixes in relation role names.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, don’t use the name <bpt id="p1">**</bpt>WMSWarehouseLocation<ept id="p1">**</ept>, even though the referenced entity includes the prefix "WMS."</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Use the singular form when you name roles that have a cardinality of 0 (zero) or 1.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the foreign key on Worker to Person should have the role name of Worker, because the cardinality from Person to Worker is 0..1.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Don't add the postfix "Entity" to relation role names.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, don’t use the role name <bpt id="p1">**</bpt>WarehouseEntity<ept id="p1">**</ept> in a relationship, even though the referenced entity includes the name "Entity."</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Instead, use the name <bpt id="p1">**</bpt>Warehouse<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Consider adding the role of the relationship as a prefix.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, to clearly describe the role of the relationship, name a relationship <bpt id="p1">**</bpt>BuyingLegalEntity<ept id="p1">**</ept> instead of <bpt id="p2">**</bpt>LegalEntity<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Don't add country/region-specific postfixes to relation role names.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, don’t use the role name <bpt id="p1">**</bpt>InventoryProfile<ph id="ph1">\_</ph>RU<ept id="p1">**</ept>, even though the relationship applies only in an RU country/region format.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Don't include underscores in relation role names.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Data entity relation names</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Do<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Give the relation name the same name as the related role name, in singular form.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, the relation that describes the foreign key from Customer to Party should be named <bpt id="p1">**</bpt>Party<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>OData EntityType names</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Do<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Give the EntityType a conceptual name.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name should be the same as the conceptual name of the data entity, but without the prefix and without the "Entity" postfix.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>EcoResReleasedProductEntity<ept id="p1">**</ept> becomes <bpt id="p2">**</bpt>ReleasedProduct<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Name the EntityType in singular form.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>OData EntitySet (Entity Collection) names</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Do<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Name the EntitySet in plural form.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, the EntitySet for the <bpt id="p1">**</bpt>ReleasedProduct<ept id="p1">**</ept> EntityType is <bpt id="p2">**</bpt>ReleasedProducts<ept id="p2">**</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>