<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9802de25e4127f27ed6ddc25c80b4cd248d1cd0b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\dev-ref\xpp-string-run-time-functions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c46283e35cb9db769225ee90ec4183604c567495</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fb7ef656a32c1f53b050683cda96d6cdd896456</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>X++ string run-time functions</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This topic describes the string run-time functions.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>X++ string run-time functions</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes the string run-time functions.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>match</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Searches for a string or expression in another string.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>pattern</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The string or expression to search for.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>text</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>1<ept id="p1">**</ept> if the pattern is located in the string; otherwise, <bpt id="p2">**</bpt>0<ept id="p2">**</ept> (zero).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The search is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following special characters can be used to create the pattern for the <bpt id="p1">*</bpt>pattern<ept id="p1">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Character</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A backslash (<ph id="ph1">\)</ph> nullifies, or escapes, the special treatment of special characters, so that a special character can be matched like a normal letter.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A pair of backslashes is translated into one non-special backslash.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab$cd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab$cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab$cd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab$cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The backslash isn't escaped.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab<ph id="ph2">\$</ph>cd<ph id="ph3">&amp;quot;</ph>,<ph id="ph4">&amp;quot;</ph>ab$cd<ph id="ph5">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The backslash and dollar sign are escaped.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph> or ^</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A left angle bracket (<ph id="ph1">&amp;lt;</ph>) or a circumflex (^) at the start of an expression is used to match the start of a line.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph><ph id="ph2">&amp;lt;</ph>abc<ph id="ph3">&amp;quot;</ph>,<ph id="ph4">&amp;quot;</ph>abcdef<ph id="ph5">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph><ph id="ph2">&amp;lt;</ph>abc<ph id="ph3">&amp;quot;</ph>,<ph id="ph4">&amp;quot;</ph>defabc<ph id="ph5">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>^abc<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abcdef<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>^abc<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>defabc<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;gt;</ph> or $</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A right angle bracket (<ph id="ph1">&amp;gt;</ph>) or a dollar sign (?) at the end of the expression is used to match the end of a line.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc<ph id="ph2">&amp;gt;</ph><ph id="ph3">&amp;quot;</ph>,<ph id="ph4">&amp;quot;</ph>abcdef<ph id="ph5">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc<ph id="ph2">&amp;gt;</ph><ph id="ph3">&amp;quot;</ph>,<ph id="ph4">&amp;quot;</ph>defabc<ph id="ph5">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>?</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>or .</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A question mark (?) or a period (.) matchs any one character in the same position.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc.def<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abc#def<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>colou?r<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>colouXr<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>:x</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A colon specifies a group of characters to match, as indicated by the character that immediately follows.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>:a</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Sets the match to letters.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:acd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab#cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:acd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abxyzcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:acd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abxcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>:d</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Sets the match to numeric characters.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:dcd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab3cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:dcd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab123cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:dcd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>:n</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Sets the match to alphanumeric characters.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:ncd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab%cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:ncd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab9cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab:ncd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abXcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>:SPACE</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>SPACE is the space character ( ).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Sets the match to blanks, tabulations, and control characters such as Enter (new line).</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab: cd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab: cd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab\ncd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab: cd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab\tcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>ab: cd<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>ab cd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Only the first space is matched.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An expression that is followed by an asterisk (*) requires a match for zero, one, or more occurrences of the preceding expression.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc*d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc*d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc*d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abcccd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc*d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abxd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An expression that is followed by a plus sign (+) requires a match for one or more occurrences of the preceding expression.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc+d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc+d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abcd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc+d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abcccd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>abc+d<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>abxd<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An expression that is followed by a minus sign (-) requires a match for zero or one occurrence of the preceding expression.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In other words, the preceding expression is optional.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>colou-r<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>color<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>colou-r<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>colour<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>[]</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Matches a single character with any character that is enclosed in the brackets.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A range of characters can be specified by two characters that are separated by a minus sign (-).</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">&lt;strong&gt;</bpt>[a-z]<ept id="p1">&lt;/strong&gt;</ept> matches all letters between a and z, <bpt id="p2">&lt;strong&gt;</bpt>[0-9]<ept id="p2">&lt;/strong&gt;</ept> matches a digit, and <bpt id="p3">&lt;strong&gt;</bpt>[0-9a-f]<ept id="p3">&lt;/strong&gt;</ept> matches a hexadecimal digit.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>[abc]<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>apple<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>, because it matches the a in <ph id="ph5">&amp;quot;</ph>apple.<ph id="ph6">&amp;quot;</ph></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>[abc]<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>kiwi<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>, because <ph id="ph5">&amp;quot;</ph>kiwi<ph id="ph6">&amp;quot;</ph> doesn't contain an a, b, or c.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>gr[ae]y<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>grey<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns 1.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This expression also matches <ph id="ph1">&amp;quot;</ph>gray.<ph id="ph2">&amp;quot;</ph></source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>gr[ae]y<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>graey<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>, because only one character between <ph id="ph5">&amp;quot;</ph>gr<ph id="ph6">&amp;quot;</ph> and <ph id="ph7">&amp;quot;</ph>y<ph id="ph8">&amp;quot;</ph> is matched.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[^]</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the first character in the text that is enclosed in brackets is a circumflex (^), the expression matches all characters except the characters that are enclosed in the brackets.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Examples:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>[^bc]at<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>bat<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>0<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>[^bc]at<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>hat<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;strong&gt;</bpt>match(<ph id="ph1">&amp;quot;</ph>[^abc]<ph id="ph2">&amp;quot;</ph>,<ph id="ph3">&amp;quot;</ph>bat<ph id="ph4">&amp;quot;</ph>);<ept id="p1">&lt;/strong&gt;</ept> returns <bpt id="p2">&lt;strong&gt;</bpt>1<ept id="p2">&lt;/strong&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Anything except a, b, or c is matched.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Therefore, the t is matched.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>strAlpha</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Copies only the alphanumeric characters from a string.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The string to copy from.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A new string that contains all the alphanumeric characters from the specified string.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>strAlpha("2+2=5 is this correct?")<ept id="p1">**</ept> returns the string <bpt id="p2">**</bpt>225isthiscorrect<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>strCmp</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Compares two text strings.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>text1</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The first string.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>text2</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The second string.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>0<ept id="p1">**</ept> if the two strings are identical, <bpt id="p2">**</bpt>1<ept id="p2">**</ept> if the first string sorts earlier, or <bpt id="p3">**</bpt>-1<ept id="p3">**</ept> if the second string sorts earlier.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The comparison performed by this method is case-sensitive.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>strColSeq</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Converts all uppercase characters to lowercase characters, and converts all characters that have accents to the corresponding unaccented lowercase characters.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>text</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The string to copy and convert characters from.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The converted text string.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strColSeq<ept id="p1">**</ept> function exists for backward-compatibility purposes.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This function supports only the mapping for the following Western European characters:</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>AàáâãäÀÁÂÃÄBCçÇDEèéêëÈÉÊËFGHIìíîïÌÍÎÏJKLMNñÑOòóôõöÒÓÔÕÖPQRSTUùúûüÙÚÛÜVWXYýÝZæøåÆØÅ</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>aaaaaaaaaaabcccdeeeeeeeeefghiiiiiiiiijklmnnnooooooooooopqrstuuuuuuuuuvwxyyyz~¦Ç~¦Ç</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For Unicode-compliant functionality, use the Win32 LCMapString application programming interface (API) via the <bpt id="p1">**</bpt>DLL<ept id="p1">**</ept> and <bpt id="p2">**</bpt>DLLFunc<ept id="p2">**</ept> classes.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The following example prints <bpt id="p1">**</bpt>abcdeabcde<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>strDel</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creates a copy of a string, from which the specified substring is removed.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The string to copy from.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The position at which to begin ignoring characters during the copy operation.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>number</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The number of characters to ignore.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A minus sign in front of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept> parameter indicates that <bpt id="p2">*</bpt><ph id="ph2">\_</ph>number<ept id="p2">*</ept>–1 characters before the character at <bpt id="p3">*</bpt><ph id="ph3">\_</ph>position<ept id="p3">*</ept> should be removed together with the character at <bpt id="p4">*</bpt><ph id="ph4">\_</ph>position<ept id="p4">*</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The remaining characters that are copied from the string.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strDel<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>substr<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>strFind</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Searches a string for the first occurrence of one of the specified characters.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>characters</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The characters to search for.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The position in the string where the search begins.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>number</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A signed number that indicates the direction of the search and how many positions to search in the string.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The value of the position of the first occurrence of one of the specified characters.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>To search from the beginning of the string to the end, use <bpt id="p1">**</bpt>1<ept id="p1">**</ept> as the value of the <bpt id="p2">*</bpt><ph id="ph1">\_</ph>position<ept id="p2">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept> parameter is negative, the system searches the number of characters backward from the specified position.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The search isn't case-sensitive.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Here is an example.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strFind<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strNFind<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>strFmt</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Formats the specified string and substitutes any occurrences of n with the nth argument.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>string</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The strings to format.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The formatted string.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>If an argument isn't provided for a parameter, the parameter will be returned as "%n" in the string.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The string conversion of values of the <bpt id="p1">**</bpt>real<ept id="p1">**</ept> type is limited to two decimal places.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Values are rounded, not truncated.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>System.String::Format<ept id="p1">**</ept> method from the Microsoft .NET Framework can be used to gain additional functionality, as shown in the example.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>strIns</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Builds a string by inserting one string into another.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text1</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The string to insert the other string into.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text2</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The string to insert into the other string.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The position where the first character of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>text2<ept id="p1">*</ept> parameter should occur in the output string.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The combined text string.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strIns<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strDel<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>position<ept id="p1">*</ept> parameter is more than the length of the original string, the string to insert is appended to the end of the original string.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>strKeep</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Builds a string by using only the characters from the first input string that the second input string specifies should be kept.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text1</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The string that contains the characters that can be used to build an output string.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text2</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The string that specifies which characters to keep for the output string.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A string of the characters that are kept.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strKeep<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strRem<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>strLen</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Calculates the length of the specified string.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>text</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The string to calculate the length of.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The length of the specified string.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>strLine</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Retrieves a single line from a string that spans multiple lines.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>string</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>A string that might span multiple lines.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>count</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The offset of the line to return.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A copied line of the string that is specified by the <bpt id="p1">*</bpt>string<ept id="p1">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The first line of the string has an offset of 0.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>You can assign multiple lines to one string by embedding the <bpt id="p1">*</bpt><ph id="ph1">n</ph><ept id="p1">*</ept> or <bpt id="p2">*</bpt>rn<ept id="p2">*</ept> characters in the string.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the at sign (@) immediately before the opening quotation mark and use the Enter key to spread parts of the string value over multiple lines in the X++ code editor.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>strLTrim</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Removes leading blanks from a text string.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>text</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The string to delete the leading blanks from.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The string equivalent for the text that leading blanks have been removed from.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strLTrim<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strRTrim<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>strLwr</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Converts all letters in the specified string to lowercase.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The string to convert to lowercase.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>A copy of the specified string that contains only lowercase letter.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strLwr<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strUpr<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strLwr<ept id="p1">**</ept> function uses the <bpt id="p2">**</bpt>LCMapString<ept id="p2">**</ept> function in the Win32 API.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>strNFind</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Searches part of a text string for the first occurrence of a character that isn't included in the specified list of characters.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The text string to search.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>characters</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The list of characters to exclude from the search.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The position in the string at which to begin the search.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>number</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A signed number that indicates the direction of the search and how many positions to search.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>If a minus sign precedes <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept>, the system searches <bpt id="p2">*</bpt><ph id="ph2">\_</ph>number<ept id="p2">*</ept> characters in reverse order from <bpt id="p3">*</bpt><ph id="ph3">\_</ph>position<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The position of the first occurrence of a character that isn't specified by the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>characters<ept id="p1">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The search isn't case-sensitive.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>To search from the beginning of the string to the end, use a value of <bpt id="p1">**</bpt>1<ept id="p1">**</ept> for the <bpt id="p2">*</bpt><ph id="ph1">\_</ph>position<ept id="p2">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>If a minus sign precedes the value of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept> parameter, the characters will be searched in reverse order, starting from the position that is specified by the <bpt id="p2">*</bpt><ph id="ph2">\_</ph>position<ept id="p2">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strNFind<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strFind<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>strPoke</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Overwrites part of a string with another string.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text1</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The original string.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text2</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The string to replace part of the original string with.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The position of the original string at which to begin replacing the characters.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The new string.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The new string can be longer than the original string.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>However, if the value of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>position<ept id="p1">*</ept> parameter is more than the length of the string, the original string is returned without replacements.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>strPrompt</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Appends a string with the specified number of period characters, followed by a colon and space character.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>string</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The original string.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>len</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The desired final length of the string.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>A string that looks like a prompt for user input.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>In atypical cases, where the value of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>len<ept id="p1">*</ept> parameter is only slightly more than the length of the original string, the highest precedence is given to adding the trailing space.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Next, precedence is given to the colon.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The lowest precedence is given to the periods.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Negative values for the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>len<ept id="p1">*</ept> parameter return the input string appended with a trailing space.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>strRem</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Removes the characters that are specified in one string from another string.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>text1</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The string to remove characters from.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>text2</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The characters to exclude from the output string.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The remaining content of the original string.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>This function is case-sensitive.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>This function is complementary to the <bpt id="p1">**</bpt>strKeep<ept id="p1">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>strRep</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Repeats a string of characters.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The string to repeat.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>number</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The number of times to repeat the string.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>A new string that contains the contents of the original string that are repeated the specified number of times.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The following example prints the text string <bpt id="p1">**</bpt>ABABABABABAB<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>strRTrim</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Removes the trailing space characters from the end of a string.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The string to remove the trailing space characters from .</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>A copy of the specified string that doesn't include trailing space characters.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strRTrim<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strLTrim<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>strScan</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Searches a text string for an occurrence of another string.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text1</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The string to search in.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text2</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The string to find.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The first position in the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>text1<ept id="p1">*</ept> parameter at which to perform a comparison.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>number</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The number of positions in the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>text1<ept id="p1">*</ept> parameter to retry the comparison for.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>If a minus sign precedes the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept> parameter, the system searches the number of characters in reverse order from the specified position.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The position at which the specified string was found in the string; otherwise, <bpt id="p1">**</bpt>0<ept id="p1">**</ept> (zero).</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The comparisons aren't case-sensitive.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Values for the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>position<ept id="p1">*</ept> parameter that are less than <bpt id="p2">**</bpt>1<ept id="p2">**</ept> are treated as <bpt id="p3">**</bpt>1<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The direction of the scan is controlled by the sign that is specified in the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>A positive sign indicates that each successive comparison will start one position closer to the end of the string.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>A negative sign indicates that each comparison will start one position closer to the start of the string.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>strUpr</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Converts all the letters in a string to uppercase.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The string to convert to uppercase letters.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>A copy of the specified string that contains only lowercase letters.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strUpr<ept id="p1">**</ept> function is complementary to the <bpt id="p2">**</bpt>strLwr<ept id="p2">**</ept> function.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>strUpr<ept id="p1">**</ept> function uses the <bpt id="p2">**</bpt>LCMapString()<ept id="p2">**</ept> function in the Win32 API.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The following example will print <bpt id="p1">**</bpt>ABCDD55EFGHIJ<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>subStr</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Retrieves part of a string.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Parameter</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>text</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The original string.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>position</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The position in the original string where the part to retrieve begins.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\_</ph>number</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>A signed integer that indicates the direction and number of positions to retrieve from the original string.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>If a minus sign precedes <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept>, the system selects the substring backward from the specified position.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>A substring of the original string.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Remarks</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If a minus sign precedes the value of the <bpt id="p1">*</bpt><ph id="ph1">\_</ph>number<ept id="p1">*</ept> parameter, the substring will be selected backward from the specified position.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>