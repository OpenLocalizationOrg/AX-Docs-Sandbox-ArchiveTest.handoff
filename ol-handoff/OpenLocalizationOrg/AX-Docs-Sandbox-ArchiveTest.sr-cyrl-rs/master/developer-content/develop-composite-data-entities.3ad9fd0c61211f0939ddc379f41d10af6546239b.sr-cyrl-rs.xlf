<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3c3452742136dbcd403e10c354e862f96b87f32</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\data-entities\develop-composite-data-entities.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acf9f341ea5c8a5df3bafeb0fa753dc3081c4a68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c24c10930cc8d92802512ce5eee716b11246645</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Develop composite data entities</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>A composite entity is a concept that allows you to build a single entity by leveraging multiple entities that are related to each other.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Develop composite data entities</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A composite entity is a concept that allows you to build a single entity by leveraging multiple entities that are related to each other.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>What is a composite entity?</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Composite entity is concept that allows you to build a single entity by leveraging multiple entities that are related to each other.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The concept is heavily used in scenarios where an entity can be represented as a single document, like Sales header/line, Invoice header/line and Vendor Catalog.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This concept is applicable in asynchronous integration scenarios rather than synchronous OData scenarios, and it will only be supported from a data management platform.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There is no programmatic interface for composite entities in X++.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It is only supported for a data management platform that is part of XML file-based imports/exports.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sales Header and Sales Line are two different entities in the system.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In case the customer requirement suggests that header and lines are part of a single document, then these two entities can be merged as a composite entity.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Sample sales order entity: The composite entity (MySalesTableCompositeEntity) represents a sales orders document which is comprised of Sales Order header entity (MySalesTableEntity) and Sales Order Line entity (MySalesTableLineEntity).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (17)<ept id="p1">](./media/developingcompositeentities-17-1024x290.png)](./media/developingcompositeentities-17.png)</ept> Based on the linked entities, these entities can be exposed as an XML document with embedded element tags for entities.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>XML is the only way to expose a composite entity in data management.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each node in the XML represents attributes from an individual entity.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example - <ph id="ph1">&amp;lt;</ph>MySalesTableEntity SalesID="SO1" CurrencyCode="USD" CustAccount="Acc001"<ph id="ph2">&amp;gt;</ph> SalesId, CurrencyCode and CustAccount are attributes from MySalesTableEntity.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Building the composite entity</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>There is a node for composite data entities under Data model.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Let’s take the example of MySalesTableEntity.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Step 1: Identify and create the individual entities for the composite entity</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Make sure that the entities are related to each other.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this example the individual entities are MySalesTableEntity and MySalesLineEntity.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Step 2: Add relations between individual entities</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add a relation to parent entity in the relations node.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example – MySalesLineEntity has relationship to MySalesTableEntity.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (18)<ept id="p1">](./media/developingcompositeentities-18.png)](./media/developingcompositeentities-18.png)</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Step 3: Create a new composite entity</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add a new <bpt id="p1">**</bpt>Dynamics 365<ept id="p1">**</ept> artifact item of type <bpt id="p2">**</bpt>Composite entity<ept id="p2">**</ept> to the project.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In designer mode, right-click the entity and select <bpt id="p1">**</bpt>New Root Data Entity Reference<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (2)<ept id="p1">](./media/developingcompositeentities-2.png)](./media/developingcompositeentities-2.png)</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Set the data entity to parent data entity.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In this case its MySalesTableEntity.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Right-click the parent entity node and select <bpt id="p1">**</bpt>New Embedded Data Entity Reference<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (3)<ept id="p1">](./media/developingcompositeentities-3.png)](./media/developingcompositeentities-3.png)</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Set the embedded data entity as the child entity.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In this case it is MySalesLineEntity.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Relation<ept id="p1">**</ept> property from the drop-down list on the embedded data entity properties.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (4)<ept id="p1">](./media/developingcompositeentities-4.png)](./media/developingcompositeentities-4.png)</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Composite entity supports multi-level child entities.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Step 4: Create relationships between staging tables</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You need to create relationships between the parent and child entity staging tables based on the natural keys.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, staging tables for MySalesTable and MySalesLine are linked by SalesID, DefinitionGroup, and ExecutionId.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add a foreign key relation on MySalesLineStaging table.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (5)<ept id="p1">](./media/developingcompositeentities-5.png)](./media/developingcompositeentities-5.png)</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add two columns, RowId and ParentRowId (type int), on all the staging tables associated with the composite data entity.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Refer to SysCompositeHeaderStaging table for the columns properties.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (7)<ept id="p1">](./media/developingcompositeentities-7.png)](./media/developingcompositeentities-7.png)</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These columns are used to define runtime relationships during the target data movement.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create a cluster index on the staging tables which includes RowId, ParentRowid,DefinitionGroup, and ExecutionId.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is for performance reasons.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Compile and synchronize the artifacts.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Step 5: Set up the metadata for DMFEntity</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For local testing the composite entity metadata needs to be refreshed.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Go to <bpt id="p1">**</bpt>DIXF Parameters <ph id="ph1">&amp;gt;</ph> Entity settings<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Refresh entity list<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>DevelopingCompositeEntities (8)<ept id="p1">](./media/developingcompositeentities-8-1024x212.png)](./media/developingcompositeentities-8.png)</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Alternately, you can write the following job to refresh the composite entity list metadata.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Execute the job.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This refreshes the metadata required for the entity lookup.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Currently this is a workaround.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In the future a feature will be enabled to refresh the list at compile/sync time.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Step 6: Test the entity locally</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>We recommend that you import and export the data as a normal entity from DIXF standard process.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Refer to the following the steps for importing and exporting entity.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The source types of XML-Attribute or XML-Element are supported for composite entity.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Import a composite entity</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Import<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Enter <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Source data format<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Entity name<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Source data format<ept id="p1">**</ept> is either xml-attribute or xml-element.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Import now<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The number of records created/updated/pending are shown.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Export a composite entity</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Export<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Enter <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Source data format<ept id="p2">**</ept>, <bpt id="p3">**</bpt>and Entity name<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Add entity<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Export now<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Download package<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>General troubleshooting guidelines</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Issue: The exported composite XML file is not imported.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The scenario that produces this is:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Export a file for composite entity.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Import the same file.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Mapping fails and the file is not imported.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Root cause:</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Check if the exported file has lines or related child entity information.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If there no lines or related child entity information, then the lines will not be mapped during import.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Resolution:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Create a sample file with all of the child entities.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Use this file for initial mapping only.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When the mapping is successful, import the actual file which does not have the line data into the entity.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Use reimport or upload a new file.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This should import files with partial data (blank child records), depending on the validity of the records.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>