<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caa47e129658abb8b527c147abf457cf965e5e59</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\user-interface\check-box-tree-controls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">705222e2dbb981d57a8af5d13a3d62fc8b57e0d2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1652f9d0b972b4e6948e2c7cbf6650b1741b346</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Check box support in tree controls</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This article is intended as a primer for using check box controls in the tree control.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>It's not a general 'how to' for using tree controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Check box support in tree controls</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article is intended as a primer for using check box controls in the tree control.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It's not a general “how to” for using tree controls.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Microsoft Dynamics AX 2012 includes several examples of tree controls that were enhanced so that they both show data in a tree hierarchy and let the user select one or more nodes by using check boxes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In Dynamics AX 2012, the tree control had no built-in support for check box controls.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Instead, an image of a check box was added for each node in the tree control.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The image state for each node was then toggled as the user clicked the check box.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>LegacyCheckbox</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The current version has greatly simplified the experience for the developer.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Check box support is now built into the tree control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>AX7Checkbox</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You no longer have to use images to include a check box, and you also don't have to explicitly set the state of the check box state when it's selected.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The control doesn’t use images, and the check box state is managed in the way that you would expect for a tri-state check box.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Examples of tri-state check boxes can be found in most installation scenarios.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When tri-state check boxes are used, if the user selects a parent node, all children of that parent also become selected.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The check box interaction is independent of the node's expand/collapse functionality.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the parent node is collapsed (no children are visible), a check mark on the parent node indicates that all children are also selected.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, if one child of a parent that has multiple children isn't selected, the appearance of the parent node changes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The check box no longer contains a check mark but is filled in.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This state is considered a partial check.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Therefore, a parent node has three states:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Checked</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Unchecked</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Partial</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the user clicks the check box on a parent node that is in a partial state, the state of the parent and all its children changes to checked.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>(The parent node and all its child nodes are now selected.) <bpt id="p1">**</bpt>Parent node in a partial state<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>PartialParent</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parent node and all child nodes in a checked state after the parent node is selected<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>Parent</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the user clicks the check box on a parent node that is in a checked state, the state of the parent and all its children changes to unchecked.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(The parent node and all its child nodes are now cleared.) <bpt id="p1">**</bpt>Parent node in a checked state<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>Parent</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parent node and all child nodes in an unchecked state after the parent node is cleared<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>NoParent</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the user clicks the check box on a parent node that is in an unchecked state, the state of the parent and all its children changes to checked.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(The parent node and all its child nodes are now selected.) <bpt id="p1">**</bpt>Parent node in an unchecked state<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>NoParent</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parent node and all child nodes in a checked state after the parent node is selected<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>TreeControl<ph id="ph1">\_</ph>Parent</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A child node that has no children (in other words, a child node that isn't a parent itself) has only two states: checked and unchecked.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A child node that is the only child in a checked state affects the state of its parent.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If a child node is selected, the state of its parent changes to partial.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> A single node in a tree also has a “selected” state to indicate that it's the current node.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This state differs from the checked state.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Tree controls that contain check boxes in Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following example is from SysConfiguration.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The program checks for the <bpt id="p1">**</bpt>mouseDown<ept id="p1">**</ept> event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">**</bpt>mouseDown<ept id="p1">**</ept> event is detected, the program determines whether the user clicked the node or the image.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the user clicked the image, the program toggles the image state.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>None of this code is required for the current version.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the current version, you still set the selected state for scenarios where the user is presented with preselected nodes.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Additionally, the developer can still set the state explicitly when the FormTreeItem is created.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, instead of specifying the current image, the developer now sets the <bpt id="p1">**</bpt>stateChecked<ept id="p1">**</ept> property on the FormTreeItem.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If developers must know when the state of a check box changes, they can override the <bpt id="p1">**</bpt>checkedStateChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Basic check box use for tree controls in the current version</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Make sure that the <bpt id="p1">**</bpt>Check Box<ept id="p1">**</ept> property on the modeled tree control is set to <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To explicitly set the state on a node, use the following code.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To interrogate a node for its current state, use the following code.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To react to or track the checked state of a node (<bpt id="p1">**</bpt>idx<ept id="p1">**</ept> is the node index), use the following code.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>