<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbca84927f46ba23bf9d66ca79b989fbd17927ea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\financial\segmented-entry-control-conversion.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a08a20ce34df1ba5db6cbffca07b61a5da19ccc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8763ceab1764e073aaf5482d0fdfacf725d4a129</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Segmented entry control migration</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This tutorial walks you through two migration scenarios for the Segmented Entry control -  a simple scenario (for the SMAServiceOrderTable form) and a complex scenario (for the LedgerJournalTransDaily form).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Segmented entry control migration</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through two migration scenarios for the Segmented Entry control -  a simple scenario (for the SMAServiceOrderTable form) and a complex scenario (for the LedgerJournalTransDaily form).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Simple migration scenario – SMAServiceOrderTable form</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Search for the <bpt id="p1">**</bpt>SMAServiceOrderTable<ept id="p1">**</ept> form in Application Explorer.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Add the form to the current project.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Open the form in the form design view and the code editor view.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the form design view, find the Segmented Entry control (SEC), either by manually walking the control tree or by searching for “SegmentedEntry” in the search bar below the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Select the SEC, and verify the following information:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The type for the control, as specified in parenthesis next to the control, is <bpt id="p1">**</bpt>SegmentedEntryControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Controller class<ept id="p1">**</ept> property is set to <bpt id="p2">**</bpt>DimensionDynamicAccountController<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This property indicates the type of controller that this instance of the SEC will use.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The type of controller, in turn, determines the behavior of the control.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Switch to the code editor view, and search for all occurrences of “TODO: (Code Upgrade) <ph id="ph1">\[</ph>Segmented entry control<ph id="ph2">\]</ph>” in the form source code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the search results, ignore the first result, which points to the controller variable declaration.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You must fix this TODO last, after you've removed all references to the controller variable.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Go through each of the remaining TODO comments, as described in the following subsections.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>LedgerDimension data field</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">**</bpt>Form<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Data sources<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>SMAServiceOrderLine<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Fields<ept id="p4">**</ept> <ph id="ph4">&amp;gt;</ph> <bpt id="p5">**</bpt>LedgerDimension<ept id="p5">**</ept> <ph id="ph5">&amp;gt;</ph> <bpt id="p6">**</bpt>Methods<ept id="p6">**</ept>)</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>ExpenseCost<ph id="ph1">\_</ph>LedgerDimension control</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(Search for "ExpenseCost<ph id="ph1">\_</ph>LedgerDimension" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't performing any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>loadSegments()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Therefore, leave the method as it is.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Just remove the TODO.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Here is an example.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Controller variable declarations</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Finally, go back to the first TODO, for the controller variable declaration.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>dimDynamicAccountController<ept id="p1">**</ept> variable is no longer used on the form.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Therefore, you can now delete it.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Complex migration scenario – LedgerJournalTransDaily form</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Search for the <bpt id="p1">**</bpt>LedgerJournalTransDaily<ept id="p1">**</ept> form in Application Explorer.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Add the form to the current project.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Open the form in the form design view and the code editor view.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the form design view, find the SEC, either by manually walking the control tree or by searching for “SegmentedEntry” in the search bar below the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> tab.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Select the SEC, and verify the following information:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The type for the control, as specified in parenthesis next to the control, is <bpt id="p1">**</bpt>SegmentedEntryControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Controller class<ept id="p1">**</ept> property is set to <bpt id="p2">**</bpt>DimensionDynamicAccountController<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This property indicates the type of controller that this instance of the SEC will use.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The type of controller, in turn, determines the behavior of the control.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Switch to the code editor view, and search for all occurrences of “TODO: (Code Upgrade) <ph id="ph1">\[</ph>Segmented entry control<ph id="ph2">\]</ph>” in the form source code.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the search results, the first three results are for the controller variable declarations.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Look at the comments that accompany the TODOs, and make a note of the mapping that shows which SEC instance uses which controller instance.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You will need this mapping when you replace method calls on the controller with method calls on the control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Here is what the controller-to-control mapping looks like:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>dimAccountController</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum1</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Group4<ph id="ph1">\_</ph>AccountNum</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>dimOffsetAccountController</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>GridOffsetAccount</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>LedgerJournalTrans<ph id="ph1">\_</ph>OffsetAccount1</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Group4<ph id="ph1">\_</ph>OffsetAccount</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>dimPaymentFeeAccountController</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CustPaymJournalFee<ph id="ph1">\_</ph>CustAccount</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You will fix these three TODO comments at the end, after you've removed all references to the controller variables.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Go through each of the remaining TODO comments, as described in the following subsections.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>LedgerDimension data field</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">**</bpt>Form<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Data sources<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>LedgerJournalTrans<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Fields<ept id="p4">**</ept> <ph id="ph4">&amp;gt;</ph> <bpt id="p5">**</bpt>LedgerDimension<ept id="p5">**</ept> <ph id="ph5">&amp;gt;</ph> <bpt id="p6">**</bpt>Methods<ept id="p6">**</ept>)</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>OffsetLedgerDimension data field</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">**</bpt>Form<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Data sources<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>LedgerJournalTrans<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Fields<ept id="p4">**</ept> <ph id="ph4">&amp;gt;</ph> <bpt id="p5">**</bpt>OffsetLedgerDimension<ept id="p5">**</ept> <ph id="ph5">&amp;gt;</ph> <bpt id="p6">**</bpt>Methods<ept id="p6">**</ept>)</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>OffsetLedgerDimension<ept id="p1">**</ept> field’s <bpt id="p2">**</bpt>jumpRef()<ept id="p2">**</ept> method:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum control</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>(Search for "LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Update the code in the <bpt id="p1">**</bpt>LedgerJournalTrans<ept id="p1">**</ept> data source’s <bpt id="p2">**</bpt>active()<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The <bpt id="p2">**</bpt>getValue()<ept id="p2">**</ept> method should be called only if the account type is set to <bpt id="p3">**</bpt>Ledger<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Otherwise, a call to this method will cause an invalid function call.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>CurrencyCode<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>Company<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>TransDate<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Therefore, leave the method as it is.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Just remove the TODO.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onPrimaryAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all those calls.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>GridOffsetAccount control</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>(Search for "GridOffsetAccount" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method, after the code that updates the ledgerJournalTable buffer.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>gotFocus()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The <bpt id="p2">**</bpt>getValue()<ept id="p2">**</ept> method should be called only if the account type is set to <bpt id="p3">**</bpt>Ledger<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Otherwise, a call to this method will cause an invalid function call.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Update the code in the <bpt id="p1">**</bpt>LedgerJournalTrans<ept id="p1">**</ept> data source’s <bpt id="p2">**</bpt>active()<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The <bpt id="p2">**</bpt>getValue()<ept id="p2">**</ept> method should be called only if the account type is set to <bpt id="p3">**</bpt>Ledger<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Otherwise, a call to this method will cause an invalid function call.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>CurrencyCode<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>OffsetCompany<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>TransDate<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>OffsetAccountType<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The <bpt id="p2">**</bpt>getValue()<ept id="p2">**</ept> method should be called only if the account type is set to <bpt id="p3">**</bpt>Ledger<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Otherwise, a call to this method cause an invalid function call.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Therefore, keep the method, but replace the controller with the control instance.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>In this case, because the method is overridden on the <bpt id="p1">**</bpt>GridOffsetAccount<ept id="p1">**</ept> control, even though <bpt id="p2">**</bpt>dimOffsetAccountController<ept id="p2">**</ept> was used for three different SEC instances (based on the mapping that is shown in the TODOs on controller variable declarations), we must replace the controller with only one SEC instance.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Therefore, the code will look like this.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onOffsetAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all those calls.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Step 6</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum1</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>(Search for "LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum1" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The steps for migrating this method are the same as the steps for migrating the <bpt id="p1">**</bpt>LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum.loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Therefore, no additional steps are required.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Delete this method.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Therefore, leave the method as it is.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Just remove the TODO.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup is overridden.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onPrimaryAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all of those calls.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>LedgerJournalTrans<ph id="ph1">\_</ph>OffsetAccount1</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>(Search for "LedgerJournalTrans<ph id="ph1">\_</ph>OffsetAccount1" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The migration steps for the <bpt id="p1">**</bpt>GridOffsetAccount.loadSegments()<ept id="p1">**</ept> method already made most of the changes that are required for this method.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>However, you must still make the following changes.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Add a line of code to the <bpt id="p1">**</bpt>LedgerJournalTrans<ept id="p1">**</ept> data source’s <bpt id="p2">**</bpt>active<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Make the same change in the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>OffsetAccountType<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Make the same change in the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Therefore, keep the method, but replace the controller with the control instance.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>In this case, because the method is overridden on the <bpt id="p1">**</bpt>LedgerJournalTrans<ph id="ph1">\_</ph>OffsetAccount1<ept id="p1">**</ept> control, even though <bpt id="p2">**</bpt>dimOffsetAccountController<ept id="p2">**</ept> was used for three different SEC instances (based on the mapping that is shown in the TODOs on controller variable declarations), we must replace the controller with only one SEC instance.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Therefore, the code will look like this.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onOffsetAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all those calls.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>CustPaymJournalFee<ph id="ph1">\_</ph>CustAccount</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>(Search for "CustPaymJournalFee<ph id="ph1">\_</ph>CustAccount" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Update the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>CustVendPaymJournalFee<ept id="p1">**</ept> data source’s <bpt id="p2">**</bpt>active()<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The method doesn't exist, so you must override it.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>CustVendPaymJournalFee<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>FeeCurrency<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The method doesn't exist, so you must override it.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>LedgerJournalTrans<ept id="p1">**</ept> data source’s <bpt id="p2">**</bpt>active()<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>TransDate<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Therefore, leave the method as it is.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Just remove the TODO.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Here is an example.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onPrimaryAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all those calls.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method can that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Group4<ph id="ph1">\_</ph>AccountNum</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>(Search for "Group4<ph id="ph1">\_</ph>AccountNum" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The steps for migrating this method are the same as the steps for migrating the <bpt id="p1">**</bpt>LedgerJournalTrans<ph id="ph1">\_</ph>AccountNum.loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Therefore, no additional steps are required.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Delete this method.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Therefore, leave the method as it is.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Just remove the TODO.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onPrimaryAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all those calls.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Group4<ph id="ph1">\_</ph>OffsetAccount</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>(Search for "Group4<ph id="ph1">\_</ph>OffsetAccount" in the search bar below the <bpt id="p1">**</bpt>Form<ept id="p1">**</ept> tab.)</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Step 1</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Update the code in the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method, after the code that updates the ledgerJournalTable buffer.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>gotFocus()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Step 2</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>jumpRef()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Step 3</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The migration steps for the <bpt id="p1">**</bpt>GridOffsetAccount.loadSegments()<ept id="p1">**</ept> method already made most of the changes that are required for this method.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>However, you must still make the following changes.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Update the code in the <bpt id="p1">**</bpt>LedgerJournalTrans<ept id="p1">**</ept> data source’s <bpt id="p2">**</bpt>active<ept id="p2">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Make the same change in the <bpt id="p1">**</bpt>modified()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>LedgerJournalTrans<ept id="p2">**</ept> data source’s <bpt id="p3">**</bpt>OffsetAccountType<ept id="p3">**</ept> field.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Make the same change in the <bpt id="p1">**</bpt>initLedger()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>loadSegments()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Step 4</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>This method implements a custom lookup for the control.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Therefore, leave the method as it is.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Just remove the TODO.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>To hook up custom lookups, you must override the SEC’s <bpt id="p1">**</bpt>checkUseCustomLookup<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Additionally, make sure that the <bpt id="p1">**</bpt>closeSelectRecord<ept id="p1">**</ept> method on the custom lookup form is overridden.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">**</bpt>CustTableLookup<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Step 5</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">**</bpt>onSegmentChanged()<ept id="p1">**</ept> method on the control, and add the following code to it.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Delete the <bpt id="p1">**</bpt>segmentValueChanged()<ept id="p1">**</ept> method.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The preceding code for the <bpt id="p2">**</bpt>onSegmentChanged()<ept id="p2">**</ept> method will not compile, because the <bpt id="p3">**</bpt>onOffsetAccountSegmentChanged()<ept id="p3">**</ept> method expects a controller object, but this code passes an instance of the SEC.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To call methods on the control instance, you must change the method’s signature and its implementation accordingly.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>This method is used by more than 50 callers.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Therefore, you would also have to update all those calls.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new method that follows this guidance.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Step 6</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Dynamics AX 2012</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Dynamics AX for Operations</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Because this method only calls the <bpt id="p1">**</bpt>validate()<ept id="p1">**</ept> method on the control and doesn't perform any additional processing, you can delete it.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Segmented Entry control dialog support<ept id="p1">](segmented-entry-control-dialog-support.md)</ept></source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Segmented Entry control Metadata Specification<ept id="p1">](segmented-entry-control-metadata-specification.md)</ept></source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Segmented Entry control Parm method Specification<ept id="p1">](segmented-entry-control-parm-method-specification.md)</ept></source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Segmented Entry control - Migration guidance<ept id="p1">](segmented-entry-control-migration-guidance.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>