<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="is-is">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d32ef5d5fdf49e4fea9177c1d9737ad0fa5ddb8f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scm\warehousing\material-replenishment-withdrawal-kanban.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">basic</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f64e511bc9bffdae62030835671d0d13b376e26</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd93da2f3fceb8664571acb64ebe233cc99254d7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Replenishment with withdrawal kanbans</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This topic describes how the withdrawal kanban is used for material replenishment for manufacturing activities.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>KanbanBoardTransferJob, KanbanFlow, KanbanRules</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Replenishment with withdrawal kanbans</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic describes how the withdrawal kanban is used for material replenishment for manufacturing activities.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Workflow for material replenishment that uses the withdrawal kanban</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The withdrawal kanban can be used to move a kanban of a single item between warehouses and production locations where the material is consumed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The withdrawal kanban supports a pull-based solution for material replenishment, where a pull signal is required in order to trigger supply for a specific demand.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following scenario shows a pull-based replenishment system where a pull signal triggers the creation of a kanban to replenish material for a production process.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Pull signal triggers the creation of a kanban to replenish material for a production process<ept id="p1">](./media/material-replenishment-with-withdrawal-kanban.png)](./media/material-replenishment-with-withdrawal-kanban.png)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Withdrawal kanban</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Kanban “from” location and put location for warehouse work</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Kanban “to” location and production input location</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Manufacturing process</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Warehouse work for kanban picking</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Warehouse locations for raw material</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Material warehouse</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Manufacturing warehouse</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this scenario, a manufacturing process (4) consumes material from a production input location (3) in the manufacturing warehouse (8).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When a handling unit of the material (kanban) is consumed, it’s registered as empty.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A replenishment signal is created for the item origin, and a new kanban (1) is created.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this case, the item origin consists of locations in the material warehouse (7).</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The material for the kanban is picked and put to a location (2) in the same warehouse.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When the material is picked, it’s ready to be transferred from location 2 to the production input location (3) in the manufacturing warehouse (8).</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Configure warehouse work for kanban picking for the withdrawal kanban</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To enable raw material picking for the withdrawal kanban, configure wave templates, work templates, and location directives for the <bpt id="p1">**</bpt>Kanban picking<ept id="p1">**</ept> work order type.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This work order type doesn’t just support the picking process for the withdrawal kanban.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It also supports the picking process for the manufacturing kanban.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, you can configure a separate picking process for each type of kanban by separating the wave templates, work templates, and location directives.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To separate the wave templates, work templates, and location directives, set criteria on the activity type (<bpt id="p1">**</bpt>Process<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Transfer<ept id="p2">**</ept>) in the queries for those entities.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Configure the withdrawal kanban</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The transfer activity that is used for the withdrawal kanban is configured as part of an activated activity plan in a Lean production flow.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As part of the configuration of the transfer activity, you specify the “from” and “to” locations for the transfer.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>After you configure the transfer activity, you can assign it to a kanban rule of the <bpt id="p1">**</bpt>Withdrawal<ept id="p1">**</ept> type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The kanban rule sets the policies and configurations for the withdrawal kanban.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The quantity of the kanban defines how many units of the handling unit the kanban carries during the transfer process.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The fixed kanban quantity is used when the Fixed replenishment strategy is selected.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This quantity defines how many kanbans that are required in order to prevent stock or build inventory from running out at the source of demand.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The fixed quantity can be calculated based on actual demand, historical demand, and service levels.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following two scenarios describe how you can manage material replenishment that uses the withdrawal kanban.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Scenario 1: Replenish a production input location by using a fixed withdrawal kanban</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A manufacturing process consumes a purchased raw material from a production input location that is in the production warehouse.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When the raw material is received from the vendor, it’s stored in locations in the material warehouse.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Because the demand for the material is considered stable over a period, it’s set up to supply the production in a fixed quantity kanban flow.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When a kanban is consumed at the production input location, an empty signal is registered, and a new kanban of the same type is added to the flow.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The empty signal can be configured to occur automatically when a kanban is completed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Alternatively, the empty signal can be set up as a manual interaction that is given either from the Kanban transfer board or from a menu on the hand-held device.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The Kanban transfer board is the workspace where all activities in the kanban life cycle are managed.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When the kanban is created, a wave line for the raw material is added to a kanban wave for the material warehouse.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the picking list section of the Kanban transfer board, the status of the material and related warehouse processes can be monitored from wave creation to work creation, until the material is on-hand in the “transfer from” location and is ready to be transferred to the production input locations.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The kanban can be completed either from the Kanban transfer board or from a menu on the hand-held device.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In this scenario, the picking work in the material warehouse is processed as one activity.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The transfer activity between the material warehouse and the production warehouse is processed as a separate activity.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This approach can be useful if, for example, there is a large physical distance between the two warehouses.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In this case, the kanban transfer activity can represent a truck load.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the distance between the warehouse locations and the production input location is small, it might be more efficient to include the transfer activity in the picking process.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Then, after the material is picked, it can be put directly to the production input location.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To support this process, you configure the transfer activity so that it’s automatically completed when the pick work of the withdrawal kanban is processed.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Scenario 2: Automatically complete the transfer activity when kanban picking work is processed</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the following scenario, the transfer activity of the withdrawal kanban is configured to transfer between two locations in the same warehouse.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The transfer activity of the withdrawal kanban is set up so that it’s completed automatically.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Transfer activity is automatically completed when kanban picking work is processed<ept id="p1">](./media/transfer-activities-when-processing-kanban-picking.png)](./media/transfer-activities-when-processing-kanban-picking.png)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Shared warehouse for raw materials and production</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Warehouse locations for raw materials</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Kanban “from” location and put location for warehouse work</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Withdrawal kanban</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Production input location</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Manufacturing process</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>After a kanban is consumed at the production input location, the kanban is reported as empty, and a new kanban is added to the flow.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When the kanban is created, a wave line is added to a kanban wave.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the kanban wave is processed, warehouse work for kanban picking is created.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The warehouse worker processes the work for kanban picking and is directed by the work to pick the material for the kanban in a warehouse location.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>As this warehouse worker confirms the pick, the kanban is automatically completed, and the warehouse worker is guided to the put the material to the production input location.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>