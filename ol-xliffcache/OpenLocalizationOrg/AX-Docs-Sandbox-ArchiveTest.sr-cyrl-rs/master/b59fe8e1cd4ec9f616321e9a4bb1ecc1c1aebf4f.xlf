<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b59fe8e1cd4ec9f616321e9a4bb1ecc1c1aebf4f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\data-entities\support-super-type-sub-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69ab35253e50a1ca87a00b05345f729df1c16aec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b999963a7a58051a40172a5d7bb0c08fa9dba49e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Super types and sub types</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Describes support for inheritance patterns in data entities.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Super types and sub types</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Describes support for inheritance patterns in data entities.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Patterns</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are several ways to create entities for tables that involve inheritance:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Leaf/concrete type as data source:<ept id="p1">**</ept> If a concrete type is used as a data source, fields are displayed for both the base type and the current type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, in the following screen shots, if DirPerson is the data source, data source fields from both DirPerson and DirPartytable appear.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub1<ept id="p1">](./media/sub1.png)](./media/sub1.png)</ept> <bpt id="p2">[</bpt><ph id="ph2">![</ph>sub2<ept id="p2">](./media/sub2-419x1024.png)](./media/sub2.png)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Abstract type/non-leaf as data source:<ept id="p1">**</ept> If a non-leaf type is used as a data source, fields are displayed for both the base type and the current type, but fields from any derived types aren't displayed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Fields from derived types must be added from derived data sources, as shown in the following screen shot.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub3<ept id="p1">](./media/sub3.png)](./media/sub3.png)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Data Entity View wizard</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Data Entity View<ept id="p1">**</ept> wizard to create data entities where the primary data source (and additional data sources) can be tables that are involved in inheritance.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Currently, the wizard doesn't support derived data sources.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It shows only fields from the current type or the base type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After you create an entity, you can manually modify it to display derived data sources.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following screen shots show a data entity that was created by using the wizard, where DirPartyTable is the primary data source.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub4<ept id="p1">](./media/sub4.png)](./media/sub4.png)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Update the data source table to <bpt id="p1">**</bpt>DirPartyTabl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub5<ept id="p1">](./media/sub5.png)](./media/sub5.png)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Update the data source table to <bpt id="p1">**</bpt>DirPartyTable<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub6<ept id="p1">](./media/sub6.png)](./media/sub6.png)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Run time</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There is run-time behavior for entities that related to inheritance.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creating entities for specified types</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this example, we create separate <bpt id="p1">**</bpt>Person<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Organization<ept id="p2">**</ept> entities.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The primary data source for the <bpt id="p1">**</bpt>Person<ept id="p1">**</ept> entity is DirPerson, and the primary data source for the <bpt id="p2">**</bpt>Organization<ept id="p2">**</ept> entity is DirOrganization.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This approach, which is reflected in the following screen shots, doesn't require that you write any special run-time code.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub7<ept id="p1">](./media/sub7.png)](./media/sub7.png)</ept> <bpt id="p2">[</bpt><ph id="ph2">![</ph>sub8<ept id="p2">](./media/sub8-419x1024.png)](./media/sub8.png)</ept></source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating entities for generalized types</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, we create a single entity, <bpt id="p1">**</bpt>Party<ept id="p1">**</ept>, that can be used for both <bpt id="p2">**</bpt>Person<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Organization<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The primary data source is DirPartyTable, and derived data sources are DirPerson and DirOrganization.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The new entity contains the following kinds of fields:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Common attributes<ept id="p1">**</ept> – Attributes that aren't specific to <bpt id="p2">**</bpt>Person<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Organization<ept id="p3">**</ept>, such as <bpt id="p4">**</bpt>Name<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>These fields are mapped to DirPartyTable.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Person-specific attributes<ept id="p1">**</ept> – <bpt id="p2">**</bpt>Gender<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Marital Status<ept id="p3">**</ept>, and so on.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>These fields are mapped to derived data source DirPartyTable<ph id="ph1">\_</ph>DirPerson.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Organization-specific attributes<ept id="p1">**</ept> – <bpt id="p2">**</bpt>OrgNumber<ept id="p2">**</ept>, <bpt id="p3">**</bpt>ABC<ept id="p3">**</ept>, and so on.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>These fields are mapped to derived data source DirPartyTable<ph id="ph1">\_</ph>DirOrganization.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub9<ept id="p1">](./media/sub9.png)](./media/sub9.png)</ept> Mapping fields from base and multiple derived types in a single data entity is a design-time task.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, at run time, we must specify when each derived type should be created.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This can be based on fields such as <bpt id="p1">**</bpt>InstanceRelationType<ept id="p1">**</ept>, or a computed column can be created to use <bpt id="p2">**</bpt>String<ept id="p2">**</ept> to represent different types.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Party<ept id="p1">**</ept> entity example, a <bpt id="p2">**</bpt>PartyType<ept id="p2">**</ept> computed column can be created to represent the <bpt id="p3">**</bpt>Person<ept id="p3">**</ept> and <bpt id="p4">**</bpt>Organization<ept id="p4">**</ept> derived types.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates this approach.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub10<ept id="p1">](./media/sub10.png)](./media/sub10.png)</ept> In this example, the <bpt id="p2">**</bpt>Party<ept id="p2">**</ept> type is computed by using the <bpt id="p3">**</bpt>InstanceRelationType<ept id="p3">**</ept> column on DirPartyTable.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This approach works for reading data.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, to do <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Update<ept id="p2">**</ept> operations, you must write code where you override the <bpt id="p3">**</bpt>initializeEntityDataSource<ept id="p3">**</ept> method on the data entity, based on type, and set a correct instance of the derived type for the data source run-time context buffer.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>sub11<ept id="p1">](./media/sub11.png)](./media/sub11.png)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>