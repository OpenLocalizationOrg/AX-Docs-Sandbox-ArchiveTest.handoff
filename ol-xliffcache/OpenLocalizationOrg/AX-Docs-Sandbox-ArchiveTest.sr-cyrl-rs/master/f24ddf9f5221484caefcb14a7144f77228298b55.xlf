<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f24ddf9f5221484caefcb14a7144f77228298b55</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\analytics\expand-app-suite-report-data-sets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71f4add0b38c072b3c82b61bacabc5bbc82f5a88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e220dfd1f00434d2f3a578460b5198a23e16e115</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Expand Application Suite report data sets</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This topic shows how to expand an existing report data set that is produced by using X++ business logic in a report data provider (RDP) class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Expand Application Suite report data sets</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic shows how to expand an existing report data set that is produced by using X++ business logic in a report data provider (RDP) class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Microsoft Dynamics 365 for Finance and Operations offers an expanded set of tools to support custom solutions.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic focuses on the expansion of an existing report data set that is produced by using X++ business logic in a report data provider (RDP) class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You use custom delegate handlers and table extensions to include additional field data and/or calculations.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You don't have to over-layer the Application Suite.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You then create custom designs that replace the standard application solutions and present the data to users.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following illustration shows a typical application customization, as described in this topic.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>extendingdatasets<ept id="p1">](./media/extendingdatasets.png)](./media/extendingdatasets.png)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>What's important to know?</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There are a few basic assumptions that you should be aware of before you apply this solution.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>You can't directly extend RDP classes.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, the platform provides extension points that enable data set expansion without duplicating business logic in the standard application.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>There are two methods that can be used to expand report data sets.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the strategy that is appropriate for your solution:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Data processing post-handler<ept id="p1">**</ept> – This method is called only one time, after the <bpt id="p2">**</bpt>ProcessReport<ept id="p2">**</ept> method is completed and before the data set is returned to the report server.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Register for this post-handler to perform bulk updates on the temporary data set that is produced by the standard application solution.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Temp table inserting event<ept id="p1">**</ept> – This method is called for each row that is added to the temporary table.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's more suitable for calculations and inline evaluations.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Try to avoid expensive queries that have many joins and look-up operations.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Use event handlers to redirect menu items to your new report design.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can customize all aspects of an application reporting solution by using event handlers.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">**</bpt>PostHandler<ept id="p1">**</ept> event for the controller class to reroute user navigations to a custom report design.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Expand a report data set</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following walkthrough shows the process of expanding an existing application data set by using a "pure" extension-based solution.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The solution includes a custom <bpt id="p1">**</bpt>Rentals list<ept id="p1">**</ept> report for the Fleet Management application.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The new report includes additional rental charge data in the rental details.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The application customizations are defined in an extension model.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following illustrations show the standard design and the custom solution.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Before (standard design)</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Standard design (before customization)<ept id="p1">](./media/fleet-extension-rentals-list-before-1024x673.png)](./media/fleet-extension-rentals-list-before.png)</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>After (custom solution)</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Custom solution (after customization)<ept id="p1">](./media/fleet-extension-rentals-list-after-1024x672.png)](./media/fleet-extension-rentals-list-after.png)</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Create a new model for your application customizations.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information about extension models, see <bpt id="p1">[</bpt>Customization: Overlayering and extensions<ept id="p1">](..\extensibility\customization-overlayering-extensions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For this example, add a custom report to the <bpt id="p1">**</bpt>Fleet Management Extensions<ept id="p1">**</ept> model.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Create a new project in Microsoft Visual Studio.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Make sure that the project is associated with your extension model.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following illustration shows the project settings.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Project settings in Visual Studio<ept id="p1">](./media/fleet-extension-vs-project-settings.png)](./media/fleet-extension-vs-project-settings.png)</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add a table extension to store the custom report data.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Find the temporary cache for the <bpt id="p1">**</bpt>TmpFMRentalsByCust<ept id="p1">**</ept> data set that is populated by the RDP class, and create an extension in your model.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Define the fields that will be used to store the data for the report server, and then click <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> to save your changes.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following illustration shows the table extension that is required for this example.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Table extension for this example<ept id="p1">](./media/fleet-extension-table-extension.png)](./media/fleet-extension-table-extension.png)</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add your custom report to the project.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The custom design closely resembles the standard solution.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Therefore, you can just duplicate the existing application report in the <bpt id="p1">**</bpt>Fleet Management Extension<ept id="p1">**</ept> model, and then update the report design so that it includes the custom title and additional text box in the Rental Charges container.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Rename the report so that it has a meaningful name.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For this example, rename the custom report <bpt id="p1">**</bpt>FERentalsByCustomer<ept id="p1">**</ept> to distinguish it from the standard solution.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Restore the report data set references.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Open the report designer, expand the <bpt id="p1">**</bpt>Datasets<ept id="p1">**</ept> collection, right-click the data set that is named <bpt id="p2">**</bpt>FMRentalsByCustDS<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Restore<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The data set is expanded so that it includes the newly introduced columns.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Therefore, these columns are now available in the report designer.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Customize the report design.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The designer offers a free-form design surface that you can use to create the custom solution.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following illustration shows the custom design that is used for this example.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Custom design for this example<ept id="p1">](./media/fleet-extension-custom-design.png)](./media/fleet-extension-custom-design.png)</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add a new report handler (X++) class to the project.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Give the class a name that appropriately describes that it's a handler for an existing application report.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For this example, rename the class <bpt id="p1">**</bpt>FERentalsByCustomerHandler<ept id="p1">**</ept> to distinguish it from other report handlers.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add a PostHandler method to begin to use your custom report.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In this example, extend the controller class in the standard solution, <bpt id="p1">**</bpt>FMRentalsByCustController<ept id="p1">**</ept>, by using the following code.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>User navigations in the application will now be rerouted to the custom reporting solution.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Take some time to deploy the custom report to the report server and verify that the application is using it.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>At this point, you just have to add the business logic that is used to populate the custom fields that you introduced in step 3.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In the next step, you must select the method of data set expansion that is appropriate for your solution.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add X++ business logic to populate the custom field data.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Select the data processing technique that makes sense for the type of transformation that you require for the solution.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Option 1: Add a data processing post-handler.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Apply this technique for bulk insert operations that use a single pass over the result set of the standard solution.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Here is the code that expands the data set by using a table lookup.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Option 2: Add a temp table Inserting event.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Apply this technique for row-by-row calculations.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Here is the code that expands the data set by using a table lookup.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You’ve now finished expanding the report data set.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>After the application is compiled, it will begin to reroute user navigations to the new report design by using the custom X++ business logic that you defined in the report class handler that is defined in the extension model.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>