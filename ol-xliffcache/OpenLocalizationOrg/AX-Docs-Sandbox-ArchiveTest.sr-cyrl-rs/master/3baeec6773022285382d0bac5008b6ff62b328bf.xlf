<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3baeec6773022285382d0bac5008b6ff62b328bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\dev-ref\xpp-operator-precedence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b79fcfbb617cab75fea53c1246d7cf01da107a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b908cd7b79c9217bcfef2b9a2f33e8845cfba94f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Operator precedence</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This article describes operator precedence in Microsoft Dynamics 365 for Finance and Operations.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Operator precedence</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article describes operator precedence in Microsoft Dynamics 365 for Finance and Operations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The order in which a compound expression is evaluated is important.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, (x + y / 100) gives a different result depending on whether the addition or the division is performed first.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use parentheses ( ) to explicitly tell the X++ compiler how you want an expression to be evaluated.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, (x + y)/ 100.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you do not explicitly tell the compiler the order that you want operations to be performed in, the order is based on the precedence assigned to the operators.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, the division operator has a higher precedence than the addition operator.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For x + y / 100, the compiler would evaluate y/100 first.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>So, x + y / 100 is equivalent to x + (y / 100).</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To make your code easy to read and maintain, be explicit.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Indicate with parentheses which operators should be evaluated first.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Order of Operator Precedence</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The operators in the following table are listed in precedence order.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The higher in the table an operator appears, the higher precedence it has.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Operators with higher precedence are evaluated before operators with a lower precedence.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Note that the operator precedence of X++ is not the same as other languages, for example C<ph id="ph1">\#</ph> and Java.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Operators in precedence order</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Syntax</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>unary operators</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>- ~ !</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>multiplicative, shift, bitwise AND, bitwise exclusive OR</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph> / % DIV <ph id="ph2">&amp;lt;</ph><ph id="ph3">&amp;lt;</ph> <ph id="ph4">&amp;gt;</ph><ph id="ph5">&amp;gt;</ph> &amp; ^</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>additive, bitwise inclusive OR</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>+ -</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>relational, equality</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph> <ph id="ph2">&amp;lt;</ph>= == != <ph id="ph3">&amp;gt;</ph> <ph id="ph4">&amp;gt;</ph>= like as is</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>logical operators (AND, OR)</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>conditional</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>?</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Operators on the same line have equal precedence.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If there is more than one of these operators in an expression, the expression is evaluated from left to right unless assignment operators are used (these are evaluated from right to left).For example, &amp;&amp; (logical AND) and || (logical OR) have the same precedence and are evaluated from left to right.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This means that:0&amp;&amp;0||1 == 1, and 1||0&amp;&amp;0 == 0</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Assignment Operators<ept id="p1">](http://msdn.microsoft.com/library/d4e86b9c-be82-4f19-ad86-7722344a05f3(AX.60).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](http://msdn.microsoft.com/library/cffbc613-3875-4520-9dea-046dc99aab99(AX.60).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Relational Operators<ept id="p1">](http://msdn.microsoft.com/library/702af366-4d46-445e-bd4b-722c9845199f(AX.60).aspx)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>