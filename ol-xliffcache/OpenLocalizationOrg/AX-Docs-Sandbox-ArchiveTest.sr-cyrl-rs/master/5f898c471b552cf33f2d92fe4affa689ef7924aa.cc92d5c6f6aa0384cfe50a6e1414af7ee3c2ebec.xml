{"content":"---\n# required metadata\n\ntitle: X++ business run-time functions\ndescription: This topic describes the business run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31281\nms.assetid: 7107cd00-ecb0-46d2-91d6-c342e4314345\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ business run-time functions\n\n[!include[banner](../includes/banner.md)]\n\n\nThis topic describes the business run-time functions.\n\nThese functions enter financial data and calculate formulas.\n\n## cTerm\nCalculates the number of periods that are required for the current investment value to yield a target value.\n\n### Syntax\n\n    real cTerm(real interest, real future_value, real current_value)\n\n### Parameters\n\n| Parameter      | Description                   |\n|----------------|-------------------------------|\n| interest       | The interest rate.            |\n| future\\_value  | The target value.             |\n| current\\_value | The current investment value. |\n\n### Return value\n\nThe number of periods that are required in order to reach *future\\_value*.\n\n### Remarks\n\nThe *current\\_value* and *future\\_value* parameters must have the same prefixed sign (plus or minus).\n\n### Example\n\n    static void cTermExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cTerm(10.0, 500.00, 100.00);\n        print \"The cTerm is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\nddb\n---\n\nCalculates the accelerated depreciation of an asset.\n\n### Syntax\n\n    real ddb(real price, real scrap, real life, int period)\n\n### Parameters\n\n| Parameter | Description                                                |\n|-----------|------------------------------------------------------------|\n| price     | The purchase price of the asset.                           |\n| scrap     | The residual value of the asset that has been written off. |\n| life      | The expected lifetime of the asset.                        |\n| period    | The period to calculate depreciation over.                 |\n\n### Return value\n\nThe depreciation of the asset.\n\n### Remarks\n\nThe book value for a specific period is equal to the purchase price minus the accumulated depreciation for previous periods:\n\n-   Book value for Period 1 = Price\n-   Book value for Period 2 = Book value for Period 1 – Depreciation for Period 1\n-   Book value for Period n = Book value for Period (n–1) – Depreciation for Period (n–1)\n\nThere are three variations for the calculation of depreciation: If Period &gt; Life:\n\n-   Depreciation = 0\n\nIf (Book value for Period n) – ((Book value for Period n) × 2 ÷ Life) &lt; Residual value:\n\n-   Depreciation = (Book value for Period n) – Residual value\n\nIn all other cases: Depreciation = (Book value for Period n) × 2 ÷ Life The **syd** and **sln** functions also calculate the depreciation of an asset. The **syd** and **ddb** functions enables higher depreciation for the earlier years, whereas **sln** calculates a linear depreciation.\n\n    ddb(12000,2000,10,1); //Returns the value 2400.\n    ddb(12000,2000,10,3); //Returns the value 1536.\n\ndg\n--\n\nCalculates the contribution ratio, which is based on the sales price and the purchase price. If the value of the *sale* parameter is **0.0**, the calculation can't be done.\n\n### Syntax\n\n    real dg(real sale, real purchase)\n\n### Parameters\n\n| Parameter | Description         |\n|-----------|---------------------|\n| sale      | The sale price.     |\n| purchase  | The purchase price. |\n\n### Return value\n\nThe contribution ratio.\n\n### Remarks\n\n    dg(1000,300); //Returns the value 0.7.\n    dg(100,30); //Returns the value 0.7.\n    dg(20000, 11000); //Returns the value 0.45.\n\nfV\n--\n\nCalculates the future value of an investment.\n\n### Syntax\n\n    real fV(real amount, real interest, real life)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| amount    | The amount that was paid in during each period. |\n| interest  | The interest rate.                              |\n| life      | The number of investment periods.               |\n\n### Return value\n\nThe future value of the investment.\n\n### Remarks\n\n    fV(100,0.14,10); //Returns the value 1933.73.\n    fV(400,0.10,5); //Returns the value 2442.04.\n\nidg\n---\n\nCalculates the sale price, based on the purchase price and the contribution ratio.\n\n    real idg(real purchase, real contribution_ratio)\n\n### Parameters\n\n| Parameter           | Description             |\n|---------------------|-------------------------|\n| purchase            | The purchase price.     |\n| contribution\\_ratio | The contribution ratio. |\n\n### Return value\n\nThe sale price.\n\n### Remarks\n\nIf the contribution ratio is equal to **1.0**, the calculation can't be done. The **idg** function is the inverse of the **dg** function.\n\n    idg(300,0.7); //Returns the value 1000.\n    idg(11000,0.45); //Returns the value 20000.\n\n## intvMax\nRetrieves the number of intervals for the specified period when the period is divided into parts as specified by the *func* parameter.\n\n    int intvMax(date input_date, date ref_date, int func)\n\n### Parameters\n\n| Parameter   | Description                                                                |\n|-------------|----------------------------------------------------------------------------|\n| input\\_date | The end of the period, which must be later than the *ref\\_date* parameter. |\n| ref\\_date   | The start of the period.                                                   |\n| func        | A **IntvScale** system enumeration value that indicates the division unit. |\n\n### Remarks\n\nHere are the possible values for the *func* parameter:\n\n-   None\n-   YearMonthDay\n-   YearMonth\n-   Year\n-   MonthDay\n-   Month\n-   Day\n-   YearQuarter\n-   Quarter\n-   YearWeek\n-   Week\n-   WeekDay\n\n### Example\n\n    static void intvMaxExample()\n    {\n        date refDate = str2Date(\"4/9/2007\", 213);\n        date inputDate = str2Date(\"10/5/2007\", 213);\n        int numberOfIntervals;\n        ;\n        numberOfIntervals = intvMax(inputDate, refDate, intvScale::YearMonth);\n        print numberOfIntervals;\n        pause;\n    }\n\n## intvName\nReturns the name of the interval that is the specified number of intervals ahead of the specified date.\n\n    str intvName(date input_date, int col, enum func)\n\n### Parameters\n\n| Parameter   | Description                                                                                 |\n|-------------|---------------------------------------------------------------------------------------------|\n| input\\_date | A date in the first interval.                                                               |\n| col         | The number of intervals ahead of the date that is specified by the *input\\_date* parameter. |\n| func        | An **intvScale** enumeration value.                                                         |\n\n### Return value\n\nThe name of the interval.\n\n### Remarks\n\nFor example, if the *func* parameter is the **IntvScale::WeekDay** enumeration value, this method returns the name of the weekday. If the *func* parameter is the **IntvScale::Week** enumeration value, this method returns a string that contains the number of the week.\n\n### Example\n\n    static void intvNameExample(Args _args)\n    {\n        date refDate = 2672010;\n        str name;\n        ;\n        name = intvName(refDate, 3,  intvScale::WeekDay);\n        Global::info(strfmt(\"%1 is the output, which indicates the day of the week 3 days after 26\\7\\2010.\", name));\n    }\n    /**** Infolog display.\n    Message (09:56:55 am)\n    Thu is the output, which indicates the day of the week 3 days after 2672010.\n    ****/\n\n## intvNo\nCalculates the number of intervals between two dates when you divide the time into the specified intervals.\n\n### Syntax\n\n    int intvNo(date input_date, date ref_date, int func)\n\n### Parameters\n\n| Parameter   | Description                                    |\n|-------------|------------------------------------------------|\n| input\\_date | A date that indicates the end of the period    |\n| ref\\_date   | A date that indicates the start of the period. |\n| func        | An **intvScale** enumeration value.            |\n\n### Return value\n\nThe number of intervals between the dates that are specified by the *ref\\_date* and *input\\_date* parameters.\n\n### Example\n\n    static void intvNoExample(Args _args)\n    {\n        date inputDate = str2Date(\"1/1/2007\", 213);\n        date refDate = str2Date(\"3/1/2007\", 213);\n        int noOfIntervals;\n        ;\n        noOfIntervals = intvNo(refDate, inputDate, intvScale::Month);\n        print noOfIntervals;\n        pause;\n        //noOfIntervals now holds the difference in months between March and January (2).\n    }\n\n## intvNorm\nReturns the normalized date for the period.\n\n### Syntax\n\n    date intvNorm(date input_date, date ref_date, int func)\n\n### Parameters\n\n| Parameter   | Description                                                                                              |\n|-------------|----------------------------------------------------------------------------------------------------------|\n| input\\_date | The end of the period, which must be later than the date that is specified by the *ref\\_date* parameter. |\n| ref\\_date   | The start of the period.                                                                                 |\n| func        | An **intvScale** enumeration value that indicates the interval division unit.                            |\n\n### Return value\n\nThe normalized date for the period.\n\n### Remarks\n\nThe returned date will equal the date of the first day in the interval in which the date that is specified by the *ref\\_date* parameter exists.\n\n### Example\n\n    static void example()\n    {\n        print intvNorm(today(), today()-1, IntVScale::WeekDay);\n        pause;\n    }\n\npmt\n---\n\nCalculates the amount that must be paid every period to repay a loan.\n\n### Syntax\n\n    real pmt(real principal, real interest, real life)\n\n### Parameters\n\n| Parameter | Description                                                               |\n|-----------|---------------------------------------------------------------------------|\n| principal | The amount that was originally borrowed.                                  |\n| interest  | The interest that is applied each period to the amount that was borrowed. |\n| life      | The number of periods that the loan is repaid over.                       |\n\n### Return value\n\nThe amount that must be paid every period.\n\n### Remarks\n\nThe *life* and *interest* parameters must be expressed in the same time units. The value of the *life* parameter must be more than **0.0**.\n\n### Example\n\n    pmt(4000,0.14,4); //Returns the value 1372.82.\n    pmt(10000,0.10,20); //Returns the value 1174.60.\n\npt\n--\n\nRetrieves the sum of a number plus a specified percentage of that number.\n\n### Syntax\n\n    real pt(real amount, real percentage)\n\n### Parameters\n\n| Parameter  | Description                |\n|------------|----------------------------|\n| amount     | The original number.       |\n| percentage | The percentage supplement. |\n\n### Return value\n\nThe number that is equal to ((*amount *× *percentage*) + *amount*).\n\n### Remarks\n\n    pt(2000.0,0.10); //Returns the value 2200.0.\n    pt(20.0,0.10); //Returns the value 22.0.\n\npv\n--\n\nCalculates the present value of an annuity, where an amount is received over multiple periods and the interest rate is deducted for each period.\n\n### Syntax\n\n    real pv(real amount, real interest, real life)\n\n### Parameters\n\n| Parameter | Description                                                                             |\n|-----------|-----------------------------------------------------------------------------------------|\n| amount    | The amount that is paid during each period.                                             |\n| interest  | The interest rate.                                                                      |\n| life      | The number of times that the value that is specified by the *amount* parameter is paid. |\n\n### Return value\n\nThe current value of an annuity.\n\n### Remarks\n\n    pv(300,0.14,4); //Returns the value 874.11.\n\n## rate\nCalculates the interest that is required for the current investment value to attain the future value over the specified number of periods.\n\n### Syntax\n\n    real rate(real _future_value, real _current_value, real _terms)\n\n### Parameters\n\n| Parameter        | Description                                      |\n|------------------|--------------------------------------------------|\n| \\_future\\_value  | The future value of the investment.              |\n| \\_current\\_value | The current value of the investment.             |\n| \\_terms          | The number of periods that the investment spans. |\n\n### Return value\n\nThe calculated interest rate.\n\n### Remarks\n\n    rate(10000,1000,20); //Returns the value 0.12.\n\nsln\n---\n\nRetrieves the constant depreciation amount for the specified asset for each depreciation period.\n\n### Syntax\n\n    real sln(real price, real scrap, real life)\n\n### Parameters\n\n| Parameter | Description                                              |\n|-----------|----------------------------------------------------------|\n| price     | The purchase price of the asset.                         |\n| scrap     | The scrap value of the asset.                            |\n| life      | The number of periods in the expected life of the asset. |\n\n### Return value\n\nThe depreciation amount.\n\n### Example\n\n    static void slnExample(Args _arg)\n    {\n        real r;\n        ;\n        r = sln(100.00, 50.00, 50.00);\n        print r;\n        pause;\n    }\n\nsyd\n---\n\nCalculates the depreciation of an asset over a specified period.\n\n### Syntax\n\n    real syd(real _price, real _scrap, real _life, int _period)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| \\_price   | The purchase price of the asset.                        |\n| \\_scrap   | The scrap value of the asset.                           |\n| \\_life    | The expected life of the asset (the number of periods). |\n| \\_period  | The period to calculate depreciation for.               |\n\n### Return value\n\nThe amount of depreciation over the specified period.\n\n### Remarks\n\nIn contrast to the **sln** function, the **syd** function can allow for an accelerated depreciation of the asset. As with the **ddb** function, this enables higher depreciation during the early periods of the life of an asset.\n\n### Example\n\nIn the following examples, the periodic depreciation is calculated for an asset that has a purchase price of 10,000, a scrap value of 2,000, and a life of 5. In comparison, **sln(10000,2000,5)** would calculate 1600.00 for each period.\n\n    // Returns the value 2666.67 (for the 1st period).\n    syd(10000,2000,5,1);\n    // Returns the value 2133.33 (for the 2nd period).\n    syd(10000,2000,5,2);\n    // Returns the value 1600.00 (for the 3rd period).\n    syd(10000,2000,5,3);\n    // Returns the value 1066.67 (for the 4th period).\n    syd(10000,2000,5,4);\n    // Returns the value 533.33 (for 5th - and final- period).\n    syd(10000,2000,5,5);\n\n## term\nCalculates the number of periods that an investment must run for.\n\n### Syntax\n\n    real term(real amount, real interest, real future_value)\n\n### Parameters\n\n| Parameter     | Description                                             |\n|---------------|---------------------------------------------------------|\n| amount        | The amount of the periodic investment.                  |\n| interest      | The interest rate for each period.                      |\n| future\\_value | The future value that is anticipated for the investment |\n\n### Return value\n\nThe number of periods that the investment must run for.\n\n### Example\n\n    static void termExample(Args _args)\n    {\n        print term(400,0.08,5000);  //returns the value '9.01'.\n        print term(100,0.14,3000);  //returns the value '12.58'.\n        pause;\n    }\n\n\n\n","nodes":[{"pos":[4,638],"embed":true,"restype":"x-metadata","content":"# required metadata\n\ntitle: X++ business run-time functions\ndescription: This topic describes the business run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31281\nms.assetid: 7107cd00-ecb0-46d2-91d6-c342e4314345\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"X++ business run-time functions","nodes":[{"pos":[0,31],"content":"X++ business run-time functions","nodes":[{"content":"X++ business run-time functions","pos":[0,31]}]}],"path":["title"],"extradata":"MT"},{"content":"This topic describes the business run-time functions.","nodes":[{"pos":[0,53],"content":"This topic describes the business run-time functions.","nodes":[{"content":"This topic describes the business run-time functions.","pos":[0,53]}]}],"path":["description"],"extradata":"MT"}],"header":"# required metadata\n","yml":true},{"pos":[646,677],"content":"X++ business run-time functions","linkify":"X++ business run-time functions","nodes":[{"content":"X++ business run-time functions","pos":[0,31]}]},{"content":"This topic describes the business run-time functions.","pos":[723,776]},{"content":"These functions enter financial data and calculate formulas.","pos":[778,838]},{"pos":[843,848],"content":"cTerm","linkify":"cTerm","nodes":[{"content":"cTerm","pos":[0,5]}]},{"content":"Calculates the number of periods that are required for the current investment value to yield a target value.","pos":[849,957]},{"pos":[963,969],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1045,1055],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1059,1068]},{"content":"Description","pos":[1076,1087]},{"content":"interest","pos":[1161,1169]},{"content":"The interest rate.","pos":[1178,1196]},{"content":"future<ph id=\"ph1\">\\_</ph>value","pos":[1212,1225],"source":"future\\_value"},{"content":"The target value.","pos":[1229,1246]},{"content":"current<ph id=\"ph1\">\\_</ph>value","pos":[1263,1277],"source":"current\\_value"},{"content":"The current investment value.","pos":[1280,1309]},{"pos":[1317,1329],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1331,1405],"content":"The number of periods that are required in order to reach <bpt id=\"p1\">*</bpt>future<ph id=\"ph1\">\\_</ph>value<ept id=\"p1\">*</ept>.","source":"The number of periods that are required in order to reach *future\\_value*."},{"pos":[1411,1418],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1420,1521],"content":"The <bpt id=\"p1\">*</bpt>current<ph id=\"ph1\">\\_</ph>value<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>future<ph id=\"ph2\">\\_</ph>value<ept id=\"p2\">*</ept> parameters must have the same prefixed sign (plus or minus).","source":"The *current\\_value* and *future\\_value* parameters must have the same prefixed sign (plus or minus)."},{"pos":[1527,1534],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1727,1730],"content":"ddb","linkify":"ddb","nodes":[{"content":"ddb","pos":[0,3]}]},{"content":"Calculates the accelerated depreciation of an asset.","pos":[1736,1788]},{"pos":[1794,1800],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1867,1877],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1881,1890]},{"content":"Description","pos":[1893,1904]},{"content":"price","pos":[2031,2036]},{"content":"The purchase price of the asset.","pos":[2043,2075]},{"content":"scrap","pos":[2106,2111]},{"content":"The residual value of the asset that has been written off.","pos":[2118,2176]},{"content":"life","pos":[2181,2185]},{"content":"The expected lifetime of the asset.","pos":[2193,2228]},{"content":"period","pos":[2256,2262]},{"content":"The period to calculate depreciation over.","pos":[2268,2310]},{"pos":[2334,2346],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The depreciation of the asset.","pos":[2348,2378]},{"pos":[2384,2391],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The book value for a specific period is equal to the purchase price minus the accumulated depreciation for previous periods:","pos":[2393,2517]},{"content":"Book value for Period 1 = Price","pos":[2523,2554]},{"content":"Book value for Period 2 = Book value for Period 1 – Depreciation for Period 1","pos":[2559,2636]},{"content":"Book value for Period n = Book value for Period (n–1) – Depreciation for Period (n–1)","pos":[2641,2726]},{"content":"There are three variations for the calculation of depreciation: If Period <ph id=\"ph1\">&amp;gt;</ph> Life:","pos":[2728,2812],"source":"There are three variations for the calculation of depreciation: If Period &gt; Life:"},{"content":"Depreciation = 0","pos":[2818,2834]},{"content":"If (Book value for Period n) – ((Book value for Period n) × 2 ÷ Life) <ph id=\"ph1\">&amp;lt;</ph> Residual value:","pos":[2836,2926],"source":"If (Book value for Period n) – ((Book value for Period n) × 2 ÷ Life) &lt; Residual value:"},{"content":"Depreciation = (Book value for Period n) – Residual value","pos":[2932,2989]},{"content":"In all other cases: Depreciation = (Book value for Period n) × 2 ÷ Life The <bpt id=\"p1\">**</bpt>syd<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>sln<ept id=\"p2\">**</ept> functions also calculate the depreciation of an asset.","pos":[2991,3141],"source":"In all other cases: Depreciation = (Book value for Period n) × 2 ÷ Life The **syd** and **sln** functions also calculate the depreciation of an asset."},{"content":"The <bpt id=\"p1\">**</bpt>syd<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ddb<ept id=\"p2\">**</ept> functions enables higher depreciation for the earlier years, whereas <bpt id=\"p3\">**</bpt>sln<ept id=\"p3\">**</ept> calculates a linear depreciation.","pos":[3142,3276],"source":" The **syd** and **ddb** functions enables higher depreciation for the earlier years, whereas **sln** calculates a linear depreciation."},{"pos":[3383,3385],"content":"dg","linkify":"dg","nodes":[{"content":"dg","pos":[0,2]}]},{"content":"Calculates the contribution ratio, which is based on the sales price and the purchase price.","pos":[3390,3482]},{"content":"If the value of the <bpt id=\"p1\">*</bpt>sale<ept id=\"p1\">*</ept> parameter is <bpt id=\"p2\">**</bpt>0.0<ept id=\"p2\">**</ept>, the calculation can't be done.","pos":[3483,3562],"source":" If the value of the *sale* parameter is **0.0**, the calculation can't be done."},{"pos":[3568,3574],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3619,3629],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3633,3642]},{"content":"Description","pos":[3645,3656]},{"content":"sale","pos":[3705,3709]},{"content":"The sale price.","pos":[3717,3732]},{"content":"purchase","pos":[3741,3749]},{"content":"The purchase price.","pos":[3753,3772]},{"pos":[3780,3792],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The contribution ratio.","pos":[3794,3817]},{"pos":[3823,3830],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3965,3967],"content":"fV","linkify":"fV","nodes":[{"content":"fV","pos":[0,2]}]},{"content":"Calculates the future value of an investment.","pos":[3972,4017]},{"pos":[4023,4029],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4087,4097],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4101,4110]},{"content":"Description","pos":[4113,4124]},{"content":"amount","pos":[4229,4235]},{"content":"The amount that was paid in during each period.","pos":[4241,4288]},{"content":"interest","pos":[4293,4301]},{"content":"The interest rate.","pos":[4305,4323]},{"content":"life","pos":[4357,4361]},{"content":"The number of investment periods.","pos":[4369,4402]},{"pos":[4424,4436],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The future value of the investment.","pos":[4438,4473]},{"pos":[4479,4486],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4588,4591],"content":"idg","linkify":"idg","nodes":[{"content":"idg","pos":[0,3]}]},{"content":"Calculates the sale price, based on the purchase price and the contribution ratio.","pos":[4597,4679]},{"pos":[4739,4749],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4753,4762]},{"content":"Description","pos":[4775,4786]},{"content":"purchase","pos":[4853,4861]},{"content":"The purchase price.","pos":[4875,4894]},{"content":"contribution<ph id=\"ph1\">\\_</ph>ratio","pos":[4903,4922],"source":"contribution\\_ratio"},{"content":"The contribution ratio.","pos":[4925,4948]},{"pos":[4956,4968],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sale price.","pos":[4970,4985]},{"pos":[4991,4998],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the contribution ratio is equal to <bpt id=\"p1\">**</bpt>1.0<ept id=\"p1\">**</ept>, the calculation can't be done.","pos":[5000,5077],"source":"If the contribution ratio is equal to **1.0**, the calculation can't be done."},{"content":"The <bpt id=\"p1\">**</bpt>idg<ept id=\"p1\">**</ept> function is the inverse of the <bpt id=\"p2\">**</bpt>dg<ept id=\"p2\">**</ept> function.","pos":[5078,5137],"source":" The **idg** function is the inverse of the **dg** function."},{"pos":[5235,5242],"content":"intvMax","linkify":"intvMax","nodes":[{"content":"intvMax","pos":[0,7]}]},{"pos":[5243,5377],"content":"Retrieves the number of intervals for the specified period when the period is divided into parts as specified by the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter.","source":"Retrieves the number of intervals for the specified period when the period is divided into parts as specified by the *func* parameter."},{"pos":[5442,5452],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5456,5465]},{"content":"Description","pos":[5470,5481]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[5642,5653],"source":"input\\_date"},{"pos":[5656,5730],"content":"The end of the period, which must be later than the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter.","source":"The end of the period, which must be later than the *ref\\_date* parameter."},{"content":"ref<ph id=\"ph1\">\\_</ph>date","pos":[5735,5744],"source":"ref\\_date"},{"content":"The start of the period.","pos":[5749,5773]},{"content":"func","pos":[5828,5832]},{"pos":[5842,5916],"content":"A <bpt id=\"p1\">**</bpt>IntvScale<ept id=\"p1\">**</ept> system enumeration value that indicates the division unit.","source":"A **IntvScale** system enumeration value that indicates the division unit."},{"pos":[5924,5931],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5933,5987],"content":"Here are the possible values for the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter:","source":"Here are the possible values for the *func* parameter:"},{"content":"None","pos":[5993,5997]},{"content":"YearMonthDay","pos":[6002,6014]},{"content":"YearMonth","pos":[6019,6028]},{"content":"Year","pos":[6033,6037]},{"content":"MonthDay","pos":[6042,6050]},{"content":"Month","pos":[6055,6060]},{"content":"Day","pos":[6065,6068]},{"content":"YearQuarter","pos":[6073,6084]},{"content":"Quarter","pos":[6089,6096]},{"content":"YearWeek","pos":[6101,6109]},{"content":"Week","pos":[6114,6118]},{"content":"WeekDay","pos":[6123,6130]},{"pos":[6136,6143],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6465,6473],"content":"intvName","linkify":"intvName","nodes":[{"content":"intvName","pos":[0,8]}]},{"content":"Returns the name of the interval that is the specified number of intervals ahead of the specified date.","pos":[6474,6577]},{"pos":[6638,6648],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6652,6661]},{"content":"Description","pos":[6666,6677]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[6872,6883],"source":"input\\_date"},{"content":"A date in the first interval.","pos":[6886,6915]},{"content":"col","pos":[6982,6985]},{"pos":[6996,7087],"content":"The number of intervals ahead of the date that is specified by the <bpt id=\"p1\">*</bpt>input<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter.","source":"The number of intervals ahead of the date that is specified by the *input\\_date* parameter."},{"content":"func","pos":[7092,7096]},{"pos":[7106,7141],"content":"An <bpt id=\"p1\">**</bpt>intvScale<ept id=\"p1\">**</ept> enumeration value.","source":"An **intvScale** enumeration value."},{"pos":[7205,7217],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The name of the interval.","pos":[7219,7244]},{"pos":[7250,7257],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"For example, if the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter is the <bpt id=\"p2\">**</bpt>IntvScale::WeekDay<ept id=\"p2\">**</ept> enumeration value, this method returns the name of the weekday.","pos":[7259,7389],"source":"For example, if the *func* parameter is the **IntvScale::WeekDay** enumeration value, this method returns the name of the weekday."},{"content":"If the <bpt id=\"p1\">*</bpt>func<ept id=\"p1\">*</ept> parameter is the <bpt id=\"p2\">**</bpt>IntvScale::Week<ept id=\"p2\">**</ept> enumeration value, this method returns a string that contains the number of the week.","pos":[7390,7526],"source":" If the *func* parameter is the **IntvScale::Week** enumeration value, this method returns a string that contains the number of the week."},{"pos":[7532,7539],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7980,7986],"content":"intvNo","linkify":"intvNo","nodes":[{"content":"intvNo","pos":[0,6]}]},{"content":"Calculates the number of intervals between two dates when you divide the time into the specified intervals.","pos":[7987,8094]},{"pos":[8100,8106],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8170,8180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8184,8193]},{"content":"Description","pos":[8198,8209]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[8314,8325],"source":"input\\_date"},{"content":"A date that indicates the end of the period","pos":[8328,8371]},{"content":"ref<ph id=\"ph1\">\\_</ph>date","pos":[8379,8388],"source":"ref\\_date"},{"content":"A date that indicates the start of the period.","pos":[8393,8439]},{"content":"func","pos":[8444,8448]},{"pos":[8458,8493],"content":"An <bpt id=\"p1\">**</bpt>intvScale<ept id=\"p1\">**</ept> enumeration value.","source":"An **intvScale** enumeration value."},{"pos":[8512,8524],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[8526,8635],"content":"The number of intervals between the dates that are specified by the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>input<ph id=\"ph2\">\\_</ph>date<ept id=\"p2\">*</ept> parameters.","source":"The number of intervals between the dates that are specified by the *ref\\_date* and *input\\_date* parameters."},{"pos":[8641,8648],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9051,9059],"content":"intvNorm","linkify":"intvNorm","nodes":[{"content":"intvNorm","pos":[0,8]}]},{"content":"Returns the normalized date for the period.","pos":[9060,9103]},{"pos":[9109,9115],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9182,9192],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9196,9205]},{"content":"Description","pos":[9210,9221]},{"content":"input<ph id=\"ph1\">\\_</ph>date","pos":[9442,9453],"source":"input\\_date"},{"pos":[9456,9560],"content":"The end of the period, which must be later than the date that is specified by the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter.","source":"The end of the period, which must be later than the date that is specified by the *ref\\_date* parameter."},{"content":"ref<ph id=\"ph1\">\\_</ph>date","pos":[9565,9574],"source":"ref\\_date"},{"content":"The start of the period.","pos":[9579,9603]},{"content":"func","pos":[9688,9692]},{"pos":[9702,9779],"content":"An <bpt id=\"p1\">**</bpt>intvScale<ept id=\"p1\">**</ept> enumeration value that indicates the interval division unit.","source":"An **intvScale** enumeration value that indicates the interval division unit."},{"pos":[9814,9826],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The normalized date for the period.","pos":[9828,9863]},{"pos":[9869,9876],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9878,10021],"content":"The returned date will equal the date of the first day in the interval in which the date that is specified by the <bpt id=\"p1\">*</bpt>ref<ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter exists.","source":"The returned date will equal the date of the first day in the interval in which the date that is specified by the *ref\\_date* parameter exists."},{"pos":[10027,10034],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10154,10157],"content":"pmt","linkify":"pmt","nodes":[{"content":"pmt","pos":[0,3]}]},{"content":"Calculates the amount that must be paid every period to repay a loan.","pos":[10163,10232]},{"pos":[10238,10244],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10306,10316],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10320,10329]},{"content":"Description","pos":[10332,10343]},{"content":"principal","pos":[10500,10509]},{"content":"The amount that was originally borrowed.","pos":[10512,10552]},{"content":"interest","pos":[10590,10598]},{"content":"The interest that is applied each period to the amount that was borrowed.","pos":[10602,10675]},{"content":"life","pos":[10680,10684]},{"content":"The number of periods that the loan is repaid over.","pos":[10692,10743]},{"pos":[10773,10785],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The amount that must be paid every period.","pos":[10787,10829]},{"pos":[10835,10842],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The <bpt id=\"p1\">*</bpt>life<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>interest<ept id=\"p2\">*</ept> parameters must be expressed in the same time units.","pos":[10844,10922],"source":"The *life* and *interest* parameters must be expressed in the same time units."},{"content":"The value of the <bpt id=\"p1\">*</bpt>life<ept id=\"p1\">*</ept> parameter must be more than <bpt id=\"p2\">**</bpt>0.0<ept id=\"p2\">**</ept>.","pos":[10923,10983],"source":" The value of the *life* parameter must be more than **0.0**."},{"pos":[10989,10996],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[11103,11105],"content":"pt","linkify":"pt","nodes":[{"content":"pt","pos":[0,2]}]},{"content":"Retrieves the sum of a number plus a specified percentage of that number.","pos":[11110,11183]},{"pos":[11189,11195],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11244,11254],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11258,11267]},{"content":"Description","pos":[11271,11282]},{"content":"amount","pos":[11346,11352]},{"content":"The original number.","pos":[11359,11379]},{"content":"percentage","pos":[11390,11400]},{"content":"The percentage supplement.","pos":[11403,11429]},{"pos":[11437,11449],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11451,11518],"content":"The number that is equal to ((*amount *× <bpt id=\"p1\">*</bpt>percentage<ept id=\"p1\">*</ept>) + <bpt id=\"p2\">*</bpt>amount<ept id=\"p2\">*</ept>).","source":"The number that is equal to ((*amount *× *percentage*) + *amount*)."},{"pos":[11524,11531],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11628,11630],"content":"pv","linkify":"pv","nodes":[{"content":"pv","pos":[0,2]}]},{"content":"Calculates the present value of an annuity, where an amount is received over multiple periods and the interest rate is deducted for each period.","pos":[11635,11779]},{"pos":[11785,11791],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11849,11859],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11863,11872]},{"content":"Description","pos":[11875,11886]},{"content":"amount","pos":[12071,12077]},{"content":"The amount that is paid during each period.","pos":[12083,12126]},{"content":"interest","pos":[12175,12183]},{"content":"The interest rate.","pos":[12187,12205]},{"content":"life","pos":[12279,12283]},{"pos":[12291,12378],"content":"The number of times that the value that is specified by the <bpt id=\"p1\">*</bpt>amount<ept id=\"p1\">*</ept> parameter is paid.","source":"The number of times that the value that is specified by the *amount* parameter is paid."},{"pos":[12386,12398],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The current value of an annuity.","pos":[12400,12432]},{"pos":[12438,12445],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12499,12503],"content":"rate","linkify":"rate","nodes":[{"content":"rate","pos":[0,4]}]},{"content":"Calculates the interest that is required for the current investment value to attain the future value over the specified number of periods.","pos":[12504,12642]},{"pos":[12648,12654],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12729,12739],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12743,12752]},{"content":"Description","pos":[12762,12773]},{"content":"<ph id=\"ph1\">\\_</ph>future<ph id=\"ph2\">\\_</ph>value","pos":[12887,12902],"source":"\\_future\\_value"},{"content":"The future value of the investment.","pos":[12906,12941]},{"content":"<ph id=\"ph1\">\\_</ph>current<ph id=\"ph2\">\\_</ph>value","pos":[12959,12975],"source":"\\_current\\_value"},{"content":"The current value of the investment.","pos":[12978,13014]},{"content":"<ph id=\"ph1\">\\_</ph>terms","pos":[13031,13038],"source":"\\_terms"},{"content":"The number of periods that the investment spans.","pos":[13050,13098]},{"pos":[13106,13118],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The calculated interest rate.","pos":[13120,13149]},{"pos":[13155,13162],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13216,13219],"content":"sln","linkify":"sln","nodes":[{"content":"sln","pos":[0,3]}]},{"content":"Retrieves the constant depreciation amount for the specified asset for each depreciation period.","pos":[13225,13321]},{"pos":[13327,13333],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13388,13398],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13402,13411]},{"content":"Description","pos":[13414,13425]},{"content":"price","pos":[13548,13553]},{"content":"The purchase price of the asset.","pos":[13560,13592]},{"content":"scrap","pos":[13621,13626]},{"content":"The scrap value of the asset.","pos":[13633,13662]},{"content":"life","pos":[13694,13698]},{"content":"The number of periods in the expected life of the asset.","pos":[13706,13762]},{"pos":[13770,13782],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The depreciation amount.","pos":[13784,13808]},{"pos":[13814,13821],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13971,13974],"content":"syd","linkify":"syd","nodes":[{"content":"syd","pos":[0,3]}]},{"content":"Calculates the depreciation of an asset over a specified period.","pos":[13980,14044]},{"pos":[14050,14056],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14127,14137],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14141,14150]},{"content":"Description","pos":[14153,14164]},{"content":"<ph id=\"ph1\">\\_</ph>price","pos":[14285,14292],"source":"\\_price"},{"content":"The purchase price of the asset.","pos":[14297,14329]},{"content":"<ph id=\"ph1\">\\_</ph>scrap","pos":[14357,14364],"source":"\\_scrap"},{"content":"The scrap value of the asset.","pos":[14369,14398]},{"content":"<ph id=\"ph1\">\\_</ph>life","pos":[14429,14435],"source":"\\_life"},{"content":"The expected life of the asset (the number of periods).","pos":[14441,14496]},{"content":"<ph id=\"ph1\">\\_</ph>period","pos":[14501,14509],"source":"\\_period"},{"content":"The period to calculate depreciation for.","pos":[14513,14554]},{"pos":[14576,14588],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The amount of depreciation over the specified period.","pos":[14590,14643]},{"pos":[14649,14656],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"In contrast to the <bpt id=\"p1\">**</bpt>sln<ept id=\"p1\">**</ept> function, the <bpt id=\"p2\">**</bpt>syd<ept id=\"p2\">**</ept> function can allow for an accelerated depreciation of the asset.","pos":[14658,14771],"source":"In contrast to the **sln** function, the **syd** function can allow for an accelerated depreciation of the asset."},{"content":"As with the <bpt id=\"p1\">**</bpt>ddb<ept id=\"p1\">**</ept> function, this enables higher depreciation during the early periods of the life of an asset.","pos":[14772,14884],"source":" As with the **ddb** function, this enables higher depreciation during the early periods of the life of an asset."},{"pos":[14890,14897],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"In the following examples, the periodic depreciation is calculated for an asset that has a purchase price of 10,000, a scrap value of 2,000, and a life of 5.","pos":[14899,15056]},{"content":"In comparison, <bpt id=\"p1\">**</bpt>sln(10000,2000,5)<ept id=\"p1\">**</ept> would calculate 1600.00 for each period.","pos":[15057,15134],"source":" In comparison, **sln(10000,2000,5)** would calculate 1600.00 for each period."},{"pos":[15548,15552],"content":"term","linkify":"term","nodes":[{"content":"term","pos":[0,4]}]},{"content":"Calculates the number of periods that an investment must run for.","pos":[15553,15618]},{"pos":[15624,15630],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15698,15708],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15712,15721]},{"content":"Description","pos":[15728,15739]},{"content":"amount","pos":[15864,15870]},{"content":"The amount of the periodic investment.","pos":[15880,15918]},{"content":"interest","pos":[15940,15948]},{"content":"The interest rate for each period.","pos":[15956,15990]},{"content":"future<ph id=\"ph1\">\\_</ph>value","pos":[16016,16029],"source":"future\\_value"},{"content":"The future value that is anticipated for the investment","pos":[16032,16087]},{"pos":[16095,16107],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of periods that the investment must run for.","pos":[16109,16164]},{"pos":[16170,16177],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]}]}