{"content":"---\n# required metadata\n\ntitle: Extend Commerce Data Exchange - Real-time Service\ndescription: This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class. Real-time Service enables retail clients to interact with retail functionality in real time.\nauthor: josaw1\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-365-retail\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, Retail, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 68673\nms.assetid: 72a63836-2908-45fa-b1a6-3b1c499a19a2\nms.search.region: Global\n# ms.search.industry: \nms.author: mumani\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0, Retail July 2017 update\n\n---\n\n# Extend Commerce Data Exchange - Real-time Service\n\n[!include[banner](../includes/banner.md)]\n\n\nThis article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class. Real-time Service enables retail clients to interact with retail functionality in real time.\n\nTo extend Commerce Data Exchange: Real-time Service, you create a new method in the **RetailTransactionServiceEx** class. This method must meet the following criteria:\n\n-   The method must be a public static method.\n-   The return value must be a container that has a length of 2 or more. The first two elements must be a Boolean value that indicates whether the method call was successful, and a string value that you can use for a comment or error message. The other items in the container can be of any type, and they can even be nested containers.\n-   The method parameters must be one of the following primitive types:\n    -   Boolean\n    -   date\n    -   int\n    -   int64\n    -   str\n    -   guid\n    -   Real\n\n## Create and call a new extension method\n1.  Start Microsoft Visual Studio.\n2.  On the **Dynamics 365 **menu, click **Model management** &gt; **Create model**.\n3.  In the **Create model** dialog box, enter the following details.\n    -   **Model name**: Contoso\n    -   **Model publisher**: Contoso\n    -   **Layer**: USR (Select the relevant layer)\n    -   **Version**: 1.0.0.0\n    -   **Model display name**: Contoso\n\n4.  Click **Next**.\n5.  In the dialog, select **Select existing package**, and then select **Application Suite** in the list.\n6.  Click **Next**.\n7.  Click **Finish**.\n8.  In the **New project** dialog box, enter **ContosoRetailTransactionServiceEx** as the project name.\n9.  Click **OK**.\n10. In Application Explorer, expand the **Code** node, and select **Classes**.\n11. Right-click the **RetailTransactionServiceEx** class, and then click **Customize**.\n12. In the code editor, add the following code.\n\n        public static container SerialCheck(str _serialNum)\n            {\n                boolean             success = true;\n                str                 errorMessage;\n                container           serialNumResult;\n                if (_serialNum)\n                {\n                // check whether the serial number exists\n                    errorMessage = \"Serial number found\";\n                }\n                else\n                {\n                    success = false;\n                    errorMessage = \"Serial number not found\";\n                }\n\n                return [success, errorMessage, \"Serial number found\"];\n        }\n\n13. In Solution Explorer, right-click the project, and then click **Build**.\n\nAfter you've finished building your new extension methods, the project will be deployed.\n\n## Call the new method from the CRT\n1.  In your commerce runtime (CRT), add a reference to the Microsoft.Dynamics.Commerce.Runtime.TransactionService.dll, if it hasn't already been added.\n2.  Use the following sample code to call the new method.\n\n        TransactionServiceClient transactionService = new TransactionServiceClient(request.RequestContext);\n        ReadOnlyCollection serviceResponse = transactionService.InvokeExtensionMethod(\"SerialCheck\", \"123\");\n\n3.  From the serviceResponse object, you can read the response values from Real-time Service.\n\n**Note:** The **InvokeExtensionMethod** method takes two parameters. One parameter is the Real-time Service method name, and the other is the list of parameters that should be used. The method name that is passed should be the same as the method name that you created in the **RetailTransactionServiceEx** class.\n\n\n\n","nodes":[{"pos":[4,879],"embed":true,"restype":"x-metadata","content":"# required metadata\n\ntitle: Extend Commerce Data Exchange - Real-time Service\ndescription: This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class. Real-time Service enables retail clients to interact with retail functionality in real time.\nauthor: josaw1\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-365-retail\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, Retail, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 68673\nms.assetid: 72a63836-2908-45fa-b1a6-3b1c499a19a2\nms.search.region: Global\n# ms.search.industry: \nms.author: mumani\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0, Retail July 2017 update\n","nodes":[{"content":"Extend Commerce Data Exchange - Real-time Service","nodes":[{"pos":[0,49],"content":"Extend Commerce Data Exchange - Real-time Service","nodes":[{"content":"Extend Commerce Data Exchange - Real-time Service","pos":[0,49]}]}],"path":["title"],"extradata":"MT"},{"content":"This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class. Real-time Service enables retail clients to interact with retail functionality in real time.","nodes":[{"pos":[0,246],"content":"This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class. Real-time Service enables retail clients to interact with retail functionality in real time.","nodes":[{"content":"This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class. Real-time Service enables retail clients to interact with retail functionality in real time.","pos":[0,246],"nodes":[{"content":"This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class.","pos":[0,153]},{"content":"Real-time Service enables retail clients to interact with retail functionality in real time.","pos":[154,246]}]}]}],"path":["description"],"extradata":"MT"}],"header":"# required metadata\n","yml":true},{"pos":[887,936],"content":"Extend Commerce Data Exchange - Real-time Service","linkify":"Extend Commerce Data Exchange - Real-time Service","nodes":[{"content":"Extend Commerce Data Exchange - Real-time Service","pos":[0,49]}]},{"content":"This article explains how you can extend Commerce Data Exchange -  Real-time service by adding extension methods to the RetailTransactionServiceEx class.","pos":[982,1135]},{"content":"Real-time Service enables retail clients to interact with retail functionality in real time.","pos":[1136,1228]},{"content":"To extend Commerce Data Exchange: Real-time Service, you create a new method in the <bpt id=\"p1\">**</bpt>RetailTransactionServiceEx<ept id=\"p1\">**</ept> class.","pos":[1230,1351],"source":"To extend Commerce Data Exchange: Real-time Service, you create a new method in the **RetailTransactionServiceEx** class."},{"content":"This method must meet the following criteria:","pos":[1352,1397]},{"content":"The method must be a public static method.","pos":[1403,1445]},{"content":"The return value must be a container that has a length of 2 or more.","pos":[1450,1518]},{"content":"The first two elements must be a Boolean value that indicates whether the method call was successful, and a string value that you can use for a comment or error message.","pos":[1519,1688]},{"content":"The other items in the container can be of any type, and they can even be nested containers.","pos":[1689,1781]},{"content":"The method parameters must be one of the following primitive types:","pos":[1786,1853]},{"content":"Boolean","pos":[1862,1869]},{"content":"date","pos":[1878,1882]},{"content":"int","pos":[1891,1894]},{"content":"int64","pos":[1903,1908]},{"content":"str","pos":[1917,1920]},{"content":"guid","pos":[1929,1933]},{"content":"Real","pos":[1942,1946]},{"pos":[1951,1989],"content":"Create and call a new extension method","linkify":"Create and call a new extension method","nodes":[{"content":"Create and call a new extension method","pos":[0,38]}]},{"content":"Start Microsoft Visual Studio.","pos":[1994,2024]},{"pos":[2029,2108],"content":"On the **Dynamics 365 **menu, click <bpt id=\"p1\">**</bpt>Model management<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Create model<ept id=\"p2\">**</ept>.","source":"On the **Dynamics 365 **menu, click **Model management** &gt; **Create model**."},{"pos":[2113,2177],"content":"In the <bpt id=\"p1\">**</bpt>Create model<ept id=\"p1\">**</ept> dialog box, enter the following details.","source":"In the **Create model** dialog box, enter the following details."},{"pos":[2186,2209],"content":"<bpt id=\"p1\">**</bpt>Model name<ept id=\"p1\">**</ept>: Contoso","source":"**Model name**: Contoso"},{"pos":[2218,2246],"content":"<bpt id=\"p1\">**</bpt>Model publisher<ept id=\"p1\">**</ept>: Contoso","source":"**Model publisher**: Contoso"},{"pos":[2255,2297],"content":"<bpt id=\"p1\">**</bpt>Layer<ept id=\"p1\">**</ept>: USR (Select the relevant layer)","source":"**Layer**: USR (Select the relevant layer)"},{"pos":[2306,2326],"content":"<bpt id=\"p1\">**</bpt>Version<ept id=\"p1\">**</ept>: 1.0.0.0","source":"**Version**: 1.0.0.0"},{"pos":[2335,2366],"content":"<bpt id=\"p1\">**</bpt>Model display name<ept id=\"p1\">**</ept>: Contoso","source":"**Model display name**: Contoso"},{"pos":[2372,2387],"content":"Click <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept>.","source":"Click **Next**."},{"pos":[2392,2493],"content":"In the dialog, select <bpt id=\"p1\">**</bpt>Select existing package<ept id=\"p1\">**</ept>, and then select <bpt id=\"p2\">**</bpt>Application Suite<ept id=\"p2\">**</ept> in the list.","source":"In the dialog, select **Select existing package**, and then select **Application Suite** in the list."},{"pos":[2498,2513],"content":"Click <bpt id=\"p1\">**</bpt>Next<ept id=\"p1\">**</ept>.","source":"Click **Next**."},{"pos":[2518,2535],"content":"Click <bpt id=\"p1\">**</bpt>Finish<ept id=\"p1\">**</ept>.","source":"Click **Finish**."},{"pos":[2540,2639],"content":"In the <bpt id=\"p1\">**</bpt>New project<ept id=\"p1\">**</ept> dialog box, enter <bpt id=\"p2\">**</bpt>ContosoRetailTransactionServiceEx<ept id=\"p2\">**</ept> as the project name.","source":"In the **New project** dialog box, enter **ContosoRetailTransactionServiceEx** as the project name."},{"pos":[2644,2657],"content":"Click <bpt id=\"p1\">**</bpt>OK<ept id=\"p1\">**</ept>.","source":"Click **OK**."},{"pos":[2662,2736],"content":"In Application Explorer, expand the <bpt id=\"p1\">**</bpt>Code<ept id=\"p1\">**</ept> node, and select <bpt id=\"p2\">**</bpt>Classes<ept id=\"p2\">**</ept>.","source":"In Application Explorer, expand the **Code** node, and select **Classes**."},{"pos":[2741,2824],"content":"Right-click the <bpt id=\"p1\">**</bpt>RetailTransactionServiceEx<ept id=\"p1\">**</ept> class, and then click <bpt id=\"p2\">**</bpt>Customize<ept id=\"p2\">**</ept>.","source":"Right-click the **RetailTransactionServiceEx** class, and then click **Customize**."},{"content":"In the code editor, add the following code.","pos":[2829,2872]},{"pos":[3530,3602],"content":"In Solution Explorer, right-click the project, and then click <bpt id=\"p1\">**</bpt>Build<ept id=\"p1\">**</ept>.","source":"In Solution Explorer, right-click the project, and then click **Build**."},{"content":"After you've finished building your new extension methods, the project will be deployed.","pos":[3604,3692]},{"pos":[3697,3729],"content":"Call the new method from the CRT","linkify":"Call the new method from the CRT","nodes":[{"content":"Call the new method from the CRT","pos":[0,32]}]},{"content":"In your commerce runtime (CRT), add a reference to the Microsoft.Dynamics.Commerce.Runtime.TransactionService.dll, if it hasn't already been added.","pos":[3734,3881]},{"content":"Use the following sample code to call the new method.","pos":[3886,3939]},{"content":"From the serviceResponse object, you can read the response values from Real-time Service.","pos":[4163,4252]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The <bpt id=\"p2\">**</bpt>InvokeExtensionMethod<ept id=\"p2\">**</ept> method takes two parameters.","pos":[4254,4322],"source":"**Note:** The **InvokeExtensionMethod** method takes two parameters."},{"content":"One parameter is the Real-time Service method name, and the other is the list of parameters that should be used.","pos":[4323,4435]},{"content":"The method name that is passed should be the same as the method name that you created in the <bpt id=\"p1\">**</bpt>RetailTransactionServiceEx<ept id=\"p1\">**</ept> class.","pos":[4436,4566],"source":" The method name that is passed should be the same as the method name that you created in the **RetailTransactionServiceEx** class."}]}