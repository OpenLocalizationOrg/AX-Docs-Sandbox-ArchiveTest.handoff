<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">145ab7db5bdf7f1704da159263c1d02c0607bde3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\migration-upgrade\prepare-migration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a491d9a0d52b0fab820fbfad11560671ec353037</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3510f61b696ae25dd2c656ac018b29e4ed4cb07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Prepare to migrate code to Finance and Operations</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>In this topic, we will describe the LCS code upgrade service and Visual Studio tools that help you migrate your code and metadata from Dynamics AX 2012 R3 to Microsoft Dynamics 365 for Finance and Operations.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Most of these steps also apply to code migration between two major versions of Finance and Operations.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Prepare to migrate code from Dynamics AX 2012 R3 to Dynamics 365 for Finance and Operations, Enterprise edition</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this topic, we will describe the Lifecycle Services (LCS) Code upgrade service and Visual Studio tools that help you migrate your code and metadata from Dynamics AX 2012 R3 to Microsoft Dynamics 365 for Finance and Operations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Most of these steps also apply to code migration between two major versions of Finance and Operations.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You will need access to a Finance and Operations development environment using Remote Desktop, and be provisioned as an administrator on the instance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>We recommend you become familiar with some of the Dynamics 365 for Operation development, customization and user interface concepts before you upgrade your code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Here are some references.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Development tools<ept id="p1">](..\dev-tools\developer-home-page.md)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Models and packages<ept id="p1">](..\dev-tools\models.md)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>X++ programming language<ept id="p1">](..\dev-ref\xpp-language-reference.md)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Extensions and Overlayering<ept id="p1">](..\extensibility\extensibility-home-page.md)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>User interface development<ept id="p1">](..\user-interface\user-interface-development-home-page.md)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Overview of the code migration process</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Model split</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Finance and Operations application is split into several packages, or assemblies: Platform Packages</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Application Platform</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Application Foundation</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Test Essentials</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Application Packages</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Application Suite</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Other application packages.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>ISV and customer code that is migrated from Dynamics AX 2012 R3 will be re-baselined into the correct package.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Auto-migration using the LCS Code Upgrade service</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The LCS code upgrade service takes a Dynamics AX 2012 R3 model store as input and completes the following tasks:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Converts metadata into the latest format.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Re-baselines metadata, by moving and merging, into the right model.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Provides an estimation to understand the effort required to upgrade the solution.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Runs migration rules that auto-migrate parts of a solution.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Runs migration rules that inform developers what to manually fix by using TODOs.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Automatically checks-in the upgraded solution into your Visual Studio Team Services (VSTS) project.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To configure and run the code upgrade service, see <bpt id="p1">[</bpt>Configure and execute the code upgrade service in Lifecycle Services<ept id="p1">](..\lifecycle-services\configure-execute-code-upgrade.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Manual migration steps</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After you upgrade your code using the LCS code upgrade service configure your developer VM and VSTS to connect to the upgraded code branch.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configure your developer VM<ept id="p1">](..\dev-tools\configure-developer-vm.md)</ept></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Configure VSTS<ept id="p1">](configure-vso-solution.md)</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The code upgrade service will provide with Visual Studio solutions that you can open to compile your code.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>code merge<ept id="p1">**</ept> solution for all elements that contain conflicts and an <bpt id="p2">**</bpt>upgraded<ept id="p2">**</ept> solutions for all your upgraded elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Typically, you can compile the application by fixing compilation errors in the order shown below.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The order is determined based on the package dependencies graph, start with the lowest package in the graph.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To determine package dependencies, see <bpt id="p1">[</bpt>Models<ept id="p1">](..\dev-tools\models.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A typical order is Application Platform, Application Foundation, Directory, ...etc., Application Suite.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For each of your upgraded models:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Fix merge conflicts.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Fix compilation errors related to a model split (references across packages).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Typical error messages are:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&amp;lt;</ph>Element Type<ph id="ph2">&amp;gt;</ph> X refers to <ph id="ph3">&amp;lt;</ph>Element Type<ph id="ph4">&amp;gt;</ph> Y which does not exist.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name <ph id="ph1">&amp;lt;</ph>Name<ph id="ph2">&amp;gt;</ph> does not denote a class, a table or an extended data type.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, your overlayering customizations may be referencing elements or code that are higher in the package dependency graph:</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A method in the Directory model is referencing a table in the Application Suite package.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A form in the Directory package is referencing a data source in the Application Suite package.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You will have to refactor your code to address these dependencies by moving model elements or business logic to higher level packages.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates for Migration<ept id="p1">](delegates-migration.md)</ept> describes how to use delegates to solve some of these issues.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Fix compilation errors.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After you have resolved all of the compilation errors, all packages will compile.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Next, you must complete the following tasks:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Address guided code upgrade TODOs and code upgrade-specific best practice warnings.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Some examples and details are in the sections below.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Replace deprecated controls, for example, ActiveX or find an alternative.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Apply form patterns and sub patterns to all forms.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Validate that all scenarios work in multiple browsers with different sizes for custom patterns.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Write and run tests.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Resolve Conflicts Using Visual Studio Tools (Office Mix)<ept id="p1">](https://mix.office.com/watch/1rl75ei2cs6d7)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Best practice setup</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the Best Practice framework, there is a subset of Best Practice warnings that need to be resolved to complete migration.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This applies if you are migrating from Dynamics AX 2012 R3 or earlier.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In Visual Studio, click <bpt id="p1">**</bpt>Dynamics 365 <ph id="ph1">&amp;gt;</ph> Options <ph id="ph2">&amp;gt;</ph> Best Practices<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Model<ept id="p1">**</ept> drop-down menu, select <bpt id="p2">**</bpt>Application Suite<ept id="p2">**</ept> (Repeat with all models you are working on)</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These rules should be set to “ON” while migrating your solution.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The setting is driven by an XML file in the AxRuleSet folder.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example, see the Application Suite xml file, BPRules.xml, located under C:<ph id="ph1">\\</ph>Packages<ph id="ph2">\\</ph>ApplicationSuite<ph id="ph3">\\</ph>Foundation<ph id="ph4">\\</ph>AxRuleSet.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>bpupgraderules<ept id="p1">](./media/bpupgraderules.png)](./media/bpupgraderules.png)</ept> To complete the migration, you need to fix all migration-specific Best Practice rules.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The errors will show up in the error list as warnings.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the error list, you will see compiler warnings and best practice errors.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Best Practice errors are prefixed with the text <bpt id="p1">**</bpt>BP<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>BPErrorFormControlPatternUnspecified<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Debugging</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, Finance and Operations optimizes the debugging experience for the files that you are working on.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>As a result, when you step into a file (F11) that is not in your project, the PDBs are not loaded and you can’t debug the code.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To work around this, change the project debugging setting by clicking **Dynamics 365 **<ph id="ph1">&amp;gt;</ph> <bpt id="p1">**</bpt>Options<ept id="p1">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p2">**</bpt>Debugging<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Verify that the <bpt id="p1">**</bpt>Load symbols only for items in the solution<ept id="p1">**</ept> check box is not selected.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This option is selected by default because it improves the debugger speed significantly.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Another debugging setting that you may want to turn off is Intellitrace.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Intellitrace collects the complete execution history of an application.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>It creates a lot of noise in the IDE when debugging.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To turn off Intellitrace, click <bpt id="p1">**</bpt>Options<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>IntelliTrace<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Enable IntelliTrace<ept id="p3">**</ept>, clear the check box, and then click <bpt id="p4">**</bpt>OK<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Note that Intellitrace is only available in the Enterprise version of Visual Studio.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Address code migration tasks</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When metadata is migrated to Finance and Operations, multiple auto-upgrade scripts are run.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In the case where developers need to complete manual migration tasks, TO DOs and Best Practices (BP) have been added.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>TO DOs are prefixed with <bpt id="p1">*</bpt><ph id="ph1">/</ph><ph id="ph2">\*</ph> TODO: (Code Upgrade)<ept id="p1">*</ept>, and need to be fixed as a part of code migration.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>BP migration specific rules also need to be fixed as part of code migration.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This example below uses the <bpt id="p1">**</bpt>PurchCommitment<ph id="ph1">\_</ph>PSN<ept id="p1">**</ept> form to walk you through the migration task of fixing navigation.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifically, you will see examples of duplicate buttons and Action Pane TODOs.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Setup</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open <bpt id="p1">**</bpt>Application Explorer<ept id="p1">**</ept>, and search for the form, PurchCommitment<ph id="ph1">\_</ph>PSN.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Right-click the project and select <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the Model property, select <bpt id="p1">**</bpt>Application Suite<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In the Company property, select FRSI.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Note: The form is located in the French demo data company FRSI.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Ctrl+F5 to<ept id="p1">**</ept> see the form.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>While the form looks complete, there are still code migration tasks necessary to be migration-complete.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>i<ept id="p1">](./media/i1.png)](./media/i1.png)</ept></source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Navigation migration tasks</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In Visual Studio, build the project, and then on the toolbar, click <bpt id="p1">**</bpt>View<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Task List<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Comments<ept id="p1">**</ept> drop-down list to view the TO DO: (Code Upgrade) tasks.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>In the list, find the ActionPane TODOs.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>j<ept id="p1">](./media/j1.png)](./media/j1.png)</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Code upgrade rule - Action Pane</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In Finance and Operations, the following core actions are provided as system-defined buttons:</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>New</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Delete</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Edit</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Export</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>As part of the auto-migration, the Action Pane rule is run to identify redundant buttons.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To complete this part of migration, you need to manually:</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Remove or move the code.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Delete redundant controls in the application code.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: In the section below, we will provide examples of how to migrate and modify the code on modeled buttons that replicate system-defined buttons.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>However, in practice, before making changes similar to those made in this article, the code must first be evaluated with respect to the scenario to determine if it is still needed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>First, fix the TODO for the DeleteCmdButton, which duplicates the system-defined Delete button.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>In Visual Studio, find the TODO shown below, and then double-click the TODO.<bpt id="p1">[</bpt><ph id="ph1">![</ph>k<ept id="p1">](./media/k1.png)](./media/k1.png)</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Replace the TODO and the line of code as shown below.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The state of the system-defined <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button is controlled by the AllowDelete property on the firstmaster datasource.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>By setting AllowDelete to false, the delete task is kept from executing when the keyboard shortcut is used.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>In the editor, find and remove DeleteCmdButton from the form design.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>l<ept id="p1">](./media/l1.png)](./media/l1.png)</ept></source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Ctrl+S to<ept id="p1">**</ept> save the form.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Next, we will focus on the EditCmdButton that duplicates the system Edit button, handing the two TODOs associated with this button as well as removing this button.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In Visual Studio, find the TODO shown below, and then double-clickthe TODO.<bpt id="p1">[</bpt><ph id="ph1">![</ph>m<ept id="p1">](./media/m1.png)](./media/m1.png)</ept></source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Because the visibility of the <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> button is controlled by the View/Edit mode of the form, you will need to modify this code so it sets that property.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Replace the TODO and the line of code as shown in the following graphic.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Double-click the other TODO for this button.<bpt id="p1">[</bpt><ph id="ph1">![</ph><ph id="ph2">n</ph><ept id="p1">](./media/n1.png)](./media/n1.png)</ept></source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Inspect the code on the modeled <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> button.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This logic will need to be moved to the form’s task() method.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>On the left side of the Visual Studio designer, right-click <bpt id="p1">**</bpt>Methods<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Override<ept id="p2">**</ept>, and select <bpt id="p3">**</bpt>Task<ept id="p3">**</ept>, to add an override for the form’s Task method.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Update the task method as shown below so that the code from above is triggered when the system-defined <bpt id="p1">**</bpt>Edit<ept id="p1">**</ept> button is clicked.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In the Editor, find and remove the <bpt id="p1">**</bpt>EditCmdButton<ept id="p1">**</ept> from the form design.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>o<ept id="p1">](./media/o1.png)](./media/o1.png)</ept></source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Ctrl+S<ept id="p1">**</ept> to save the form.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Ctrl+F5<ept id="p1">**</ept> to view the form.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Notice the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Edit<ept id="p2">**</ept> buttons in the <bpt id="p3">**</bpt>Commitment<ept id="p3">**</ept> tab have been removed.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Resolve casting exceptions</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In Finance and Operations, X++ is completely intermediate-language (IL) based and therefore has a stricter runtime type behavior than the interpreted Dynamics AX2 012.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This stricter runtime type behavior can generate exceptions in migrated Dynamics AX 2012 R3 metadata.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>It is likely you will encounter these exceptions during your migration.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The casting exceptions can be raised in different runtime scenarios, such as down-casting, casting runtime to design time objects, and side-casting.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>In the section below, we will walk through an example where a form, CosJournalName, is generating controls at runtime, and has a type mismatch which causes a .NET exception because it is strongly typed.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Example: Side-casting exception</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In Visual Studio, select and right-click <bpt id="p1">**</bpt>Project Properties<ept id="p1">**</ept>, and verify that USMF is the default company.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Add the display menu item CosJournalName to your project, and set the menu item as your Startup object.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Add the CosJournalName form to your project.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Add the cosDimCheckBoxController class to your project.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Rebuild your project.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>Ctrl+F5<ept id="p1">**</ept> to run the form.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Note that you will get an exception, similar to the following, when running the form.<bpt id="p1">[</bpt><ph id="ph1">![</ph>u<ept id="p1">](./media/u1.png)](./media/u1.png)</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Right-click the class, cosDimCheckBoxController, and then select <bpt id="p1">**</bpt>View Code<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Set a breakpoint on the cosDimCheckBoxController::getBuildControl().</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The breakpoint will be hit.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This is where the casting error occurs.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The reason for the casting error is because we are trying to return a control of type: FormBuildCheckboxControl and the object is expecting FormBuildStringControl.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Hover over the buildcontrol to see the type and notice the differences.<bpt id="p1">[</bpt><ph id="ph1">![</ph>v<ept id="p1">](./media/v1.png)](./media/v1.png)</ept></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F10<ept id="p1">**</ept> to hit the exception.<bpt id="p2">[</bpt><ph id="ph1">![</ph>w<ept id="p2">](./media/w2.png)](./media/w2.png)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Stop debugging.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>To fix the exception, change the method declaration from FormBuildStringControl to FormBuildCheckBoxControl.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Rebuild the project, and press <bpt id="p1">**</bpt>Ctrl+F5<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The form should open successfully because the casting error is resolved.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>a<ept id="p1">](./media/a-1024x576.png)](./media/a.png)</ept></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Migrating context menus and mouse doubleclick code</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Refer to these topics to migrate code Dynamics AX 2012 that deals with context menus and mouse double-click actions.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Context menus<ept id="p1">](code-migration-context-menus.md)</ept></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mouse double-click<ept id="p1">](code-migration-double-click.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>