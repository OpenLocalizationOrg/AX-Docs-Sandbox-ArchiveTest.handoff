{"content":"---\n# required metadata\n\ntitle: X++ math run-time functions\ndescription: This topic describes the math run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: 8982f158-f638-46d7-b3f7-ba8cfd356d57\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ math run-time functions\n\n[!include[banner](../includes/banner.md)]\n\n\nThis topic describes the math run-time functions.\n\nThese functions perform mathematical calculations.\n\nabs\n---\n\nRetrieves the absolute value of a real number. Examples:\n\n-   **abs(-100.0)** returns the value **100.0**.\n-   **abs(30.56)** returns the value **30.56**.\n\n### Syntax\n\n    real abs(real arg)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| arg       | The number to get the absolute value of. |\n\n### Return value\n\nThe absolute value of *arg*.\n\n### Example\n\n    static void absExample(Args _args)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = abs(-3.14);\n        r2 = abs(3.14);\n        if (r1 == r2)\n        {\n            print \"abs of values are the same\";\n            pause;\n        }\n    }\n\n## acos\nRetrieves the arc cosine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real acos(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to retrieve the arc cosine of. |\n\n### Return value\n\nThe arc cosine of *arg*.\n\n### Example\n\n    static void acosExample(Args _args)\n    {\n        real r;\n        str  s;\n        ;\n        r = acos(0.0);\n        s = strFmt(\"The arc cosine of 0.0 is %1 \", r);\n        print s;\n        pause;\n    }\n\n## asin\nRetrieves the arc sine of a real number. **Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real asin(real arg)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| arg       | The number to calculate the arc sine for. |\n\n### Return value\n\nThe arc sine of the specified number.\n\n### Remarks\n\n**aSin(0.36)** returns **0.37**.\n\n## atan\nRetrieves the arc tangent of a real number.\n\n### Syntax\n\n    real atan(real arg)\n\n### Parameters\n\n| Parameter | Description                                  |\n|-----------|----------------------------------------------|\n| arg       | The number to calculate the arc tangent for. |\n\n### Return value\n\nThe arc tangent of the specified number.\n\n### Remarks\n\n**aTan(0.36)** returns **0.35**.\n\n### Example\n\n    static void atanExample(Args _args)\n    {\n        real r;\n        ;\n        r = atan(1.0);\n        print strFmt(\"The Arc Tangent of 1.0 is %1\", r);\n        pause;\n    }\n\n## corrFlagGet\nRetrieves the state of the correction flag for a real number.\n\n### Syntax\n\n    int corrFlagGet(real arg)\n\n### Parameters\n\n| Parameter | Description                         |\n|-----------|-------------------------------------|\n| arg       | The flag to retrieve the state for. |\n\n### Return value\n\nA non-zero value if the flag is set; **0** (zero) if the flag is cleared.\n\n### Example\n\nThe following example displays **1**.\n\n    static void corrFlagGetExample(Args _args)\n    {\n        real rr;\n        rr = corrFlagSet(0.36,2);\n        print(corrFlagGet(rr));\n    }\n\n## corrFlagSet\nControls the correction flag for a real number.\n\n### Syntax\n\n    real corrFlagSet(real real, int arg)\n\n### Parameters\n\n| Parameter | Description                                                       |\n|-----------|-------------------------------------------------------------------|\n| real      | The number in which to turn the correction flag on or off.        |\n| arg       | **0** to turn the flag off; a non-zero value to turn the flag on. |\n\n### Return value\n\n**0** if the flag is now off; a non-zero value if the flag is now on.\n\ncos\n---\n\nRetrieves the cosine of a real number.\n\n### Syntax\n\n    real cos(real arg)\n\n### Parameters\n\n| Parameter | Description                        |\n|-----------|------------------------------------|\n| arg       | The number to find the cosine for. |\n\n### Return value\n\nThe cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\nThe following code example displays **0.76**.\n\n    static void cosExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cos(15);\n        print strFmt(\"Cos of 15 is %1\", r);\n        pause;\n    }\n\n## cosh\nRetrieves the hyperbolic cosine of a real number. **Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Syntax\n\n    real cosh(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The hyperbolic number to calculate the cosine for. |\n\n### Return value\n\nThe hyperbolic cosine of the specified number.\n\n### Remarks\n\nThe value of the *arg* parameter must be in radians.\n\n### Example\n\n    static void coshExample(Args _arg)\n    {\n        real r;\n        ;\n        r = cosh(0.1);\n        print \"The hyperbolic cosine of 0.1 is \" + num2Str(r, 2, 2, 1, 1);\n        pause;\n    }\n\n## decRound\nRounds a number to the specified number of decimal places.\n\n### Syntax\n\n    real decRound(real figure, int decimals)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| figure    | The number to round.                      |\n| decimals  | The number of decimal places to round to. |\n\n### Return value\n\nThe value of the specified number, rounded to the specified number of decimal places.\n\n### Remarks\n\nThe value of the *decimals* parameter can be positive, 0 (zero), or negative.\n\n-   **decRound(1234.6574,2)** returns the value **1234.66**.\n-   **decRound(1234.6574,0)** returns the value **1235**.\n-   **decRound(1234.6574,-2)** returns the value **1200**.\n-   **decRound(12345.6789,1)** returns the value **12345.70**.\n-   **decRound(12345.6789,-1)** returns the value **12350.00**.\n\nexp\n---\n\nRetrieves the natural antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp(real arg)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| arg       | The real number to calculate the natural antilogarithm for. |\n\n### Return value\n\nThe natural antilogarithm of the specified real number.\n\n### Remarks\n\nThe calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter.\n\n### Example\n\n    static void expExample(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## exp10\nRetrieves the base-10 antilogarithm of the specified real number.\n\n### Syntax\n\n    real exp10(real decimal)\n\n### Parameters\n\n| Parameter | Description                                                 |\n|-----------|-------------------------------------------------------------|\n| decimal   | The real number to calculate the base-10 antilogarithm for. |\n\n### Return value\n\nThe 10-based antilogarithm of the value of the *decimal* parameter.\n\n### Example\n\n    static void exp10Example(Args _arg)\n    {\n        real r1;\n        real r2;\n        ;\n        r1 = exp(2.302585093);\n        r2 = exp10(2.302585093);\n        print strFmt(\"exp of 2.302585093 is %1\", r1);\n        print strFmt(\"exp10 of 230258 is %1\", r2);\n        pause;\n    }\n\n## frac\nRetrieves the decimal part of a real number.\n\n### Syntax\n\n    real frac(real decimal)\n\n### Parameters\n\n| Parameter | Description                                       |\n|-----------|---------------------------------------------------|\n| decimal   | The real number to retrieve the decimal part for. |\n\n### Return value\n\nThe decimal part of the specified number.\n\n### Remarks\n\n**frac(12.345)** returns the value **0.345**.\n\n## log10\nRetrieves the 10-digit logarithm of a real number.\n\n### Syntax\n\n    real log10(real arg)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| arg       | The number to calculate the logarithm for. |\n\n### Return value\n\nThe base-10 logarithm of the specified number.\n\n### Remarks\n\n**log10(200)** returns the value **2.30**.\n\n## logN\nRetrieves the natural logarithm of the specified real number.\n\n### Syntax\n\n    real logN(real arg)\n\n### Parameters\n\n| Parameter | Description                                        |\n|-----------|----------------------------------------------------|\n| arg       | The number to calculate the natural logarithm for. |\n\n### Return value\n\nThe natural logarithm of the specified number.\n\n### Remarks\n\n**logN(45)** returns the value **3.81**.\n\nmax\n---\n\nRetrieves the larger of two specified values.\n\n    anytype max(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe larger of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n-   **max(12.0,12.1)** returns the value **12.1**.\n-   **max(2,33)** returns the value **33**.\n\nmin\n---\n\nRetrieves the smaller of two specified values.\n\n    anytype min(anytype object1, anytype object2)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| object1   | The first value.  |\n| object2   | The second value. |\n\n### Return value\n\nThe smaller of the two values that are specified by the *object1* and *object2* parameters.\n\n### Remarks\n\n**min(2,33**) returns the value **2**.\n\n### Example\n\n    static void minExample(Args _arg)\n    {\n            anytype a;\n            real r = 3.0;\n            real s = 2.0;\n\n            a = min(r, s);\n            print num2Str(a, 1, 2, 1, 1) + \" is less than the other number.\";\n    }\n\n## power\nRaises a real number to the power of another real number.\n\n### Syntax\n\n    real power(real arg, real exponent)\n\n### Parameters\n\n| Parameter | Description                                                                 |\n|-----------|-----------------------------------------------------------------------------|\n| arg       | The number to calculate the power of.                                       |\n| exponent  | The number to raise the number that is specified by the *arg* parameter to. |\n\n### Return value\n\nThe real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter.\n\n### Remarks\n\n-   **power(5.0,2.0)** returns the value **25.0**.\n-   **power(4.0,0.5)** returns the value **2.0**.\n\n## round\nRounds a real number to the nearest multiple of another real number.\n\n### Syntax\n\n    real round(real _arg, real _decimals)\n\n### Parameters\n\n| Parameter  | Description                                                                          |\n|------------|--------------------------------------------------------------------------------------|\n| \\_arg      | The original number.                                                                 |\n| \\_decimals | The number that the value of the *\\_arg* parameter must be rounded to a multiple of. |\n\n### Return value\n\nThe number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter.\n\n### Remarks\n\nTo round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx).\n\n### Remarks\n\n-   **round(123.45,5.00)** returns the value **125.00**.\n-   **round(7.45,1.05)** returns the value **7.35**.\n-   **round(23.9,5.0)** returns the value **25.00**.\n-   **round(26.1,5.0)** returns the value **25.00**.\n\nsin\n---\n\nRetrieves the sine of a real number.\n\n### Syntax\n\n    real sin(real _arg)\n\n### Parameters\n\n| Parameter | Description                           |\n|-----------|---------------------------------------|\n| \\_arg     | The number to calculate the sine for. |\n\n### Return value\n\nThe sine of the specified real number.\n\n### Remarks\n\nThe value of the *\\_arg* parameter must be in radians.\n\n### Example\n\n    static void sinExample(Args _arg)\n    {\n        real angleDegrees = 15.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sin(angleRadians);\n        print \"sin of a \"\n            + num2Str(angleDegrees, 2, 2, 1, 1)\n            + \" degree angle is \"\n            + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## sinh\nRetrieves the hyperbolic sine of a real number.\n\n### Syntax\n\n    real sinh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                      |\n|-----------|--------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic sine for. |\n\n### Return value\n\nThe hyperbolic sine of the specified real number.\n\n### Remarks\n\nValues for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **sinh** function.\n\n    static void sinhExample(Args _arg)\n    {\n        real angleDegrees = 45.0;\n        real angleRadians;\n        real pi = 3.14;\n        real r;\n        ;\n        angleRadians = pi * angleDegrees / 180;\n        r = sinh(angleRadians);\n        print \"sinh of a \"\n        + num2Str(angleDegrees, 2, 2, 1, 1)\n        + \" degree angle is \"\n        + num2Str(r, 2, 15, 1, 1);\n        pause;\n    }\n\ntan\n---\n\nRetrieves the tangent of a real number.\n\n### Syntax\n\n    real tan(real arg)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| arg       | The real number to calculate the tangent for. |\n\n### Return value\n\nThe tangent of the specified real number.\n\n### Remarks\n\nValues for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"\n\n### Example\n\nThe following example illustrates the **tan** function.\n\n    static void tanExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tan(250);\n        print strFmt(\"Tan of 250 is %1\", r);\n        pause;\n    }\n\n## tanh\nRetrieves the hyperbolic tangent of a real number.\n\n### Syntax\n\n    real tanh(real _arg)\n\n### Parameters\n\n| Parameter | Description                                         |\n|-----------|-----------------------------------------------------|\n| \\_arg     | The number to calculate the hyperbolic tangent for. |\n\n### Return value\n\nThe hyperbolic tangent of the specified real number.\n\n### Example\n\nThe following example illustrates the **tanh** function.\n\n    static void tanhExample(Args _arg)\n    {\n        real r;\n        ;\n        r = tanh(0.1);\n        print \"The hyperbolic tangent of angle 0.1 is \"\n        + num2Str(r, 2, 10, 1, 1);\n        pause;\n    }\n\n## trunc\nTruncates a real number by removing any decimal places.\n\n### Syntax\n\n    real trunc(real _decimal)\n\n### Parameters\n\n| Parameter | Description             |\n|-----------|-------------------------|\n| \\_decimal | The number to truncate. |\n\n### Return value\n\nA number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed.\n\n### Remarks\n\nThis function always rounds numbers down to a complete integer.\n\n### Example\n\nThe following example truncates 2.7147 to 2.00.\n\n    static void truncExample(Args _arg)\n    {\n        real r;\n        ;\n        r = trunc(2.7147);\n        print strFmt(\"r = %1\",  r);\n        pause;\n    }\n\n\n\n","nodes":[{"pos":[4,630],"embed":true,"restype":"x-metadata","content":"# required metadata\n\ntitle: X++ math run-time functions\ndescription: This topic describes the math run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31361\nms.assetid: 8982f158-f638-46d7-b3f7-ba8cfd356d57\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"X++ math run-time functions","nodes":[{"pos":[0,27],"content":"X++ math run-time functions","nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]}],"path":["title"],"extradata":"MT"},{"content":"This topic describes the math run-time functions.","nodes":[{"pos":[0,49],"content":"This topic describes the math run-time functions.","nodes":[{"content":"This topic describes the math run-time functions.","pos":[0,49]}]}],"path":["description"],"extradata":"MT"}],"header":"# required metadata\n","yml":true},{"pos":[638,665],"content":"X++ math run-time functions","linkify":"X++ math run-time functions","nodes":[{"content":"X++ math run-time functions","pos":[0,27]}]},{"content":"This topic describes the math run-time functions.","pos":[711,760]},{"content":"These functions perform mathematical calculations.","pos":[762,812]},{"pos":[814,817],"content":"abs","linkify":"abs","nodes":[{"content":"abs","pos":[0,3]}]},{"content":"Retrieves the absolute value of a real number.","pos":[823,869]},{"content":"Examples:","pos":[870,879]},{"pos":[885,929],"content":"<bpt id=\"p1\">**</bpt>abs(-100.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>100.0<ept id=\"p2\">**</ept>.","source":"**abs(-100.0)** returns the value **100.0**."},{"pos":[934,977],"content":"<bpt id=\"p1\">**</bpt>abs(30.56)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>30.56<ept id=\"p2\">**</ept>.","source":"**abs(30.56)** returns the value **30.56**."},{"pos":[983,989],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1019,1029],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1033,1042]},{"content":"Description","pos":[1045,1056]},{"content":"arg","pos":[1147,1150]},{"content":"The number to get the absolute value of.","pos":[1159,1199]},{"pos":[1207,1219],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1221,1249],"content":"The absolute value of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The absolute value of *arg*."},{"pos":[1255,1262],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1521,1525],"content":"acos","linkify":"acos","nodes":[{"content":"acos","pos":[0,4]}]},{"content":"Retrieves the arc cosine of a real number.","pos":[1526,1568]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[1569,1717],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[1723,1729],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[1760,1770],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1774,1783]},{"content":"Description","pos":[1786,1797]},{"content":"arg","pos":[1890,1893]},{"content":"The number to retrieve the arc cosine of.","pos":[1902,1943]},{"pos":[1951,1963],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[1965,1989],"content":"The arc cosine of <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept>.","source":"The arc cosine of *arg*."},{"pos":[1995,2002],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2212,2216],"content":"asin","linkify":"asin","nodes":[{"content":"asin","pos":[0,4]}]},{"content":"Retrieves the arc sine of a real number.","pos":[2217,2257]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[2258,2406],"source":"**Note:** Argument values that are outside the -1 to 1 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[2412,2418],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2449,2459],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2463,2472]},{"content":"Description","pos":[2475,2486]},{"content":"arg","pos":[2579,2582]},{"content":"The number to calculate the arc sine for.","pos":[2591,2632]},{"pos":[2640,2652],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc sine of the specified number.","pos":[2654,2691]},{"pos":[2697,2704],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2706,2738],"content":"<bpt id=\"p1\">**</bpt>aSin(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.37<ept id=\"p2\">**</ept>.","source":"**aSin(0.36)** returns **0.37**."},{"pos":[2743,2747],"content":"atan","linkify":"atan","nodes":[{"content":"atan","pos":[0,4]}]},{"content":"Retrieves the arc tangent of a real number.","pos":[2748,2791]},{"pos":[2797,2803],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[2834,2844],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2848,2857]},{"content":"Description","pos":[2860,2871]},{"content":"arg","pos":[2970,2973]},{"content":"The number to calculate the arc tangent for.","pos":[2982,3026]},{"pos":[3034,3046],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The arc tangent of the specified number.","pos":[3048,3088]},{"pos":[3094,3101],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3103,3135],"content":"<bpt id=\"p1\">**</bpt>aTan(0.36)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>0.35<ept id=\"p2\">**</ept>.","source":"**aTan(0.36)** returns **0.35**."},{"pos":[3141,3148],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3327,3338],"content":"corrFlagGet","linkify":"corrFlagGet","nodes":[{"content":"corrFlagGet","pos":[0,11]}]},{"content":"Retrieves the state of the correction flag for a real number.","pos":[3339,3400]},{"pos":[3406,3412],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[3449,3459],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3463,3472]},{"content":"Description","pos":[3475,3486]},{"content":"arg","pos":[3567,3570]},{"content":"The flag to retrieve the state for.","pos":[3579,3614]},{"pos":[3622,3634],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3636,3709],"content":"A non-zero value if the flag is set; <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero) if the flag is cleared.","source":"A non-zero value if the flag is set; **0** (zero) if the flag is cleared."},{"pos":[3715,3722],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3724,3761],"content":"The following example displays <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>.","source":"The following example displays **1**."},{"pos":[3909,3920],"content":"corrFlagSet","linkify":"corrFlagSet","nodes":[{"content":"corrFlagSet","pos":[0,11]}]},{"content":"Controls the correction flag for a real number.","pos":[3921,3968]},{"pos":[3974,3980],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4028,4038],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4042,4051]},{"content":"Description","pos":[4054,4065]},{"content":"real","pos":[4206,4210]},{"content":"The number in which to turn the correction flag on or off.","pos":[4218,4276]},{"content":"arg","pos":[4288,4291]},{"pos":[4300,4365],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> to turn the flag off; a non-zero value to turn the flag on.","source":"**0** to turn the flag off; a non-zero value to turn the flag on."},{"pos":[4373,4385],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4387,4456],"content":"<bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> if the flag is now off; a non-zero value if the flag is now on.","source":"**0** if the flag is now off; a non-zero value if the flag is now on."},{"pos":[4458,4461],"content":"cos","linkify":"cos","nodes":[{"content":"cos","pos":[0,3]}]},{"content":"Retrieves the cosine of a real number.","pos":[4467,4505]},{"pos":[4511,4517],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[4547,4557],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4561,4570]},{"content":"Description","pos":[4573,4584]},{"content":"arg","pos":[4663,4666]},{"content":"The number to find the cosine for.","pos":[4675,4709]},{"pos":[4717,4729],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The cosine of the specified number.","pos":[4731,4766]},{"pos":[4772,4779],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4781,4833],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[4839,4846],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[4848,4893],"content":"The following code example displays <bpt id=\"p1\">**</bpt>0.76<ept id=\"p1\">**</ept>.","source":"The following code example displays **0.76**."},{"pos":[5055,5059],"content":"cosh","linkify":"cosh","nodes":[{"content":"cosh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic cosine of a real number.","pos":[5060,5109]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","pos":[5110,5262],"source":"**Note:** Argument values that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[5268,5274],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5305,5315],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5319,5328]},{"content":"Description","pos":[5331,5342]},{"content":"arg","pos":[5453,5456]},{"content":"The hyperbolic number to calculate the cosine for.","pos":[5465,5515]},{"pos":[5523,5535],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic cosine of the specified number.","pos":[5537,5583]},{"pos":[5589,5596],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5598,5650],"content":"The value of the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *arg* parameter must be in radians."},{"pos":[5656,5663],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5859,5867],"content":"decRound","linkify":"decRound","nodes":[{"content":"decRound","pos":[0,8]}]},{"content":"Rounds a number to the specified number of decimal places.","pos":[5868,5926]},{"pos":[5932,5938],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[5990,6000],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6004,6013]},{"content":"Description","pos":[6016,6027]},{"content":"figure","pos":[6120,6126]},{"content":"The number to round.","pos":[6132,6152]},{"content":"decimals","pos":[6178,6186]},{"content":"The number of decimal places to round to.","pos":[6190,6231]},{"pos":[6239,6251],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The value of the specified number, rounded to the specified number of decimal places.","pos":[6253,6338]},{"pos":[6344,6351],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[6353,6430],"content":"The value of the <bpt id=\"p1\">*</bpt>decimals<ept id=\"p1\">*</ept> parameter can be positive, 0 (zero), or negative.","source":"The value of the *decimals* parameter can be positive, 0 (zero), or negative."},{"pos":[6436,6492],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1234.66<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,2)** returns the value **1234.66**."},{"pos":[6497,6550],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1235<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,0)** returns the value **1235**."},{"pos":[6555,6609],"content":"<bpt id=\"p1\">**</bpt>decRound(1234.6574,-2)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>1200<ept id=\"p2\">**</ept>.","source":"**decRound(1234.6574,-2)** returns the value **1200**."},{"pos":[6614,6672],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12345.70<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,1)** returns the value **12345.70**."},{"pos":[6677,6736],"content":"<bpt id=\"p1\">**</bpt>decRound(12345.6789,-1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12350.00<ept id=\"p2\">**</ept>.","source":"**decRound(12345.6789,-1)** returns the value **12350.00**."},{"pos":[6738,6741],"content":"exp","linkify":"exp","nodes":[{"content":"exp","pos":[0,3]}]},{"content":"Retrieves the natural antilogarithm of the specified real number.","pos":[6747,6812]},{"pos":[6818,6824],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[6854,6864],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6868,6877]},{"content":"Description","pos":[6880,6891]},{"content":"arg","pos":[7020,7023]},{"content":"The real number to calculate the natural antilogarithm for.","pos":[7032,7091]},{"pos":[7099,7111],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural antilogarithm of the specified real number.","pos":[7113,7168]},{"pos":[7174,7181],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7183,7308],"content":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter.","source":"The calculated natural antilogarithm is the natural logarithm e raised to the power that is indicated by the *arg* parameter."},{"pos":[7314,7321],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7605,7610],"content":"exp10","linkify":"exp10","nodes":[{"content":"exp10","pos":[0,5]}]},{"content":"Retrieves the base-10 antilogarithm of the specified real number.","pos":[7611,7676]},{"pos":[7682,7688],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[7724,7734],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7738,7747]},{"content":"Description","pos":[7750,7761]},{"content":"decimal","pos":[7890,7897]},{"content":"The real number to calculate the base-10 antilogarithm for.","pos":[7902,7961]},{"pos":[7969,7981],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[7983,8050],"content":"The 10-based antilogarithm of the value of the <bpt id=\"p1\">*</bpt>decimal<ept id=\"p1\">*</ept> parameter.","source":"The 10-based antilogarithm of the value of the *decimal* parameter."},{"pos":[8056,8063],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8349,8353],"content":"frac","linkify":"frac","nodes":[{"content":"frac","pos":[0,4]}]},{"content":"Retrieves the decimal part of a real number.","pos":[8354,8398]},{"pos":[8404,8410],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8445,8455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8459,8468]},{"content":"Description","pos":[8471,8482]},{"content":"decimal","pos":[8591,8598]},{"content":"The real number to retrieve the decimal part for.","pos":[8603,8652]},{"pos":[8660,8672],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The decimal part of the specified number.","pos":[8674,8715]},{"pos":[8721,8728],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8730,8775],"content":"<bpt id=\"p1\">**</bpt>frac(12.345)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>0.345<ept id=\"p2\">**</ept>.","source":"**frac(12.345)** returns the value **0.345**."},{"pos":[8780,8785],"content":"log10","linkify":"log10","nodes":[{"content":"log10","pos":[0,5]}]},{"content":"Retrieves the 10-digit logarithm of a real number.","pos":[8786,8836]},{"pos":[8842,8848],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[8880,8890],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8894,8903]},{"content":"Description","pos":[8906,8917]},{"content":"arg","pos":[9012,9015]},{"content":"The number to calculate the logarithm for.","pos":[9024,9066]},{"pos":[9074,9086],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The base-10 logarithm of the specified number.","pos":[9088,9134]},{"pos":[9140,9147],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9149,9191],"content":"<bpt id=\"p1\">**</bpt>log10(200)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.30<ept id=\"p2\">**</ept>.","source":"**log10(200)** returns the value **2.30**."},{"pos":[9196,9200],"content":"logN","linkify":"logN","nodes":[{"content":"logN","pos":[0,4]}]},{"content":"Retrieves the natural logarithm of the specified real number.","pos":[9201,9262]},{"pos":[9268,9274],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[9305,9315],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9319,9328]},{"content":"Description","pos":[9331,9342]},{"content":"arg","pos":[9453,9456]},{"content":"The number to calculate the natural logarithm for.","pos":[9465,9515]},{"pos":[9523,9535],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The natural logarithm of the specified number.","pos":[9537,9583]},{"pos":[9589,9596],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9598,9638],"content":"<bpt id=\"p1\">**</bpt>logN(45)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>3.81<ept id=\"p2\">**</ept>.","source":"**logN(45)** returns the value **3.81**."},{"pos":[9640,9643],"content":"max","linkify":"max","nodes":[{"content":"max","pos":[0,3]}]},{"content":"Retrieves the larger of two specified values.","pos":[9649,9694]},{"pos":[9751,9761],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9765,9774]},{"content":"Description","pos":[9777,9788]},{"content":"object1","pos":[9833,9840]},{"content":"The first value.","pos":[9845,9861]},{"content":"object2","pos":[9867,9874]},{"content":"The second value.","pos":[9879,9896]},{"pos":[9904,9916],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[9918,10008],"content":"The larger of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The larger of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10014,10021],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10027,10073],"content":"<bpt id=\"p1\">**</bpt>max(12.0,12.1)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>12.1<ept id=\"p2\">**</ept>.","source":"**max(12.0,12.1)** returns the value **12.1**."},{"pos":[10078,10117],"content":"<bpt id=\"p1\">**</bpt>max(2,33)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>33<ept id=\"p2\">**</ept>.","source":"**max(2,33)** returns the value **33**."},{"pos":[10119,10122],"content":"min","linkify":"min","nodes":[{"content":"min","pos":[0,3]}]},{"content":"Retrieves the smaller of two specified values.","pos":[10128,10174]},{"pos":[10231,10241],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10245,10254]},{"content":"Description","pos":[10257,10268]},{"content":"object1","pos":[10313,10320]},{"content":"The first value.","pos":[10325,10341]},{"content":"object2","pos":[10347,10354]},{"content":"The second value.","pos":[10359,10376]},{"pos":[10384,10396],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[10398,10489],"content":"The smaller of the two values that are specified by the <bpt id=\"p1\">*</bpt>object1<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>object2<ept id=\"p2\">*</ept> parameters.","source":"The smaller of the two values that are specified by the *object1* and *object2* parameters."},{"pos":[10495,10502],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10504,10542],"content":"<bpt id=\"p1\">**</bpt>min(2,33<ept id=\"p1\">**</ept>) returns the value <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>.","source":"**min(2,33**) returns the value **2**."},{"pos":[10548,10555],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[10792,10797],"content":"power","linkify":"power","nodes":[{"content":"power","pos":[0,5]}]},{"content":"Raises a real number to the power of another real number.","pos":[10798,10855]},{"pos":[10861,10867],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[10914,10924],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10928,10937]},{"content":"Description","pos":[10940,10951]},{"content":"arg","pos":[11112,11115]},{"content":"The number to calculate the power of.","pos":[11124,11161]},{"content":"exponent","pos":[11204,11212]},{"pos":[11216,11291],"content":"The number to raise the number that is specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to.","source":"The number to raise the number that is specified by the *arg* parameter to."},{"pos":[11299,11311],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[11313,11446],"content":"The real number that is the number specified by the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter to the power of the number specified by the <bpt id=\"p2\">*</bpt>exponent<ept id=\"p2\">*</ept> parameter.","source":"The real number that is the number specified by the *arg* parameter to the power of the number specified by the *exponent* parameter."},{"pos":[11452,11459],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[11465,11511],"content":"<bpt id=\"p1\">**</bpt>power(5.0,2.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.0<ept id=\"p2\">**</ept>.","source":"**power(5.0,2.0)** returns the value **25.0**."},{"pos":[11516,11561],"content":"<bpt id=\"p1\">**</bpt>power(4.0,0.5)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>2.0<ept id=\"p2\">**</ept>.","source":"**power(4.0,0.5)** returns the value **2.0**."},{"pos":[11566,11571],"content":"round","linkify":"round","nodes":[{"content":"round","pos":[0,5]}]},{"content":"Rounds a real number to the nearest multiple of another real number.","pos":[11572,11640]},{"pos":[11646,11652],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[11701,11711],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[11715,11724]},{"content":"Description","pos":[11728,11739]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[11919,11924],"source":"\\_arg"},{"content":"The original number.","pos":[11932,11952]},{"content":"<ph id=\"ph1\">\\_</ph>decimals","pos":[12021,12031],"source":"\\_decimals"},{"pos":[12034,12118],"content":"The number that the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be rounded to a multiple of.","source":"The number that the value of the *\\_arg* parameter must be rounded to a multiple of."},{"pos":[12126,12138],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[12140,12286],"content":"The number that is a multiple of the value specified by the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimals<ept id=\"p1\">*</ept> parameter and is closest to the value specified by the <bpt id=\"p2\">*</bpt><ph id=\"ph2\">\\_</ph>arg<ept id=\"p2\">*</ept> parameter.","source":"The number that is a multiple of the value specified by the *\\_decimals* parameter and is closest to the value specified by the *\\_arg* parameter."},{"pos":[12292,12299],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12301,12477],"content":"To round a real number to a specified number of decimal places, use the <bpt id=\"p1\">[</bpt>decround function<ept id=\"p1\">](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)</ept>.","source":"To round a real number to a specified number of decimal places, use the [decround function](http://msdn.microsoft.com/library/03bd2ea2-414e-43e0-ba05-f5db1a943b91(AX.60).aspx)."},{"pos":[12483,12490],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[12496,12548],"content":"<bpt id=\"p1\">**</bpt>round(123.45,5.00)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>125.00<ept id=\"p2\">**</ept>.","source":"**round(123.45,5.00)** returns the value **125.00**."},{"pos":[12553,12601],"content":"<bpt id=\"p1\">**</bpt>round(7.45,1.05)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>7.35<ept id=\"p2\">**</ept>.","source":"**round(7.45,1.05)** returns the value **7.35**."},{"pos":[12606,12654],"content":"<bpt id=\"p1\">**</bpt>round(23.9,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(23.9,5.0)** returns the value **25.00**."},{"pos":[12659,12707],"content":"<bpt id=\"p1\">**</bpt>round(26.1,5.0)<ept id=\"p1\">**</ept> returns the value <bpt id=\"p2\">**</bpt>25.00<ept id=\"p2\">**</ept>.","source":"**round(26.1,5.0)** returns the value **25.00**."},{"pos":[12709,12712],"content":"sin","linkify":"sin","nodes":[{"content":"sin","pos":[0,3]}]},{"content":"Retrieves the sine of a real number.","pos":[12718,12754]},{"pos":[12760,12766],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[12797,12807],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12811,12820]},{"content":"Description","pos":[12823,12834]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[12919,12924],"source":"\\_arg"},{"content":"The number to calculate the sine for.","pos":[12931,12968]},{"pos":[12976,12988],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The sine of the specified real number.","pos":[12990,13028]},{"pos":[13034,13041],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13043,13097],"content":"The value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter must be in radians.","source":"The value of the *\\_arg* parameter must be in radians."},{"pos":[13103,13110],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13518,13522],"content":"sinh","linkify":"sinh","nodes":[{"content":"sinh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic sine of a real number.","pos":[13523,13570]},{"pos":[13576,13582],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[13614,13624],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13628,13637]},{"content":"Description","pos":[13640,13651]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[13758,13763],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic sine for.","pos":[13770,13818]},{"pos":[13826,13838],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic sine of the specified real number.","pos":[13840,13889]},{"pos":[13895,13902],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[13904,14063],"content":"Values for the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *\\_arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[14069,14076],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[14078,14134],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>sinh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **sinh** function."},{"pos":[14530,14533],"content":"tan","linkify":"tan","nodes":[{"content":"tan","pos":[0,3]}]},{"content":"Retrieves the tangent of a real number.","pos":[14539,14578]},{"pos":[14584,14590],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[14620,14630],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[14634,14643]},{"content":"Description","pos":[14646,14657]},{"content":"arg","pos":[14758,14761]},{"content":"The real number to calculate the tangent for.","pos":[14770,14815]},{"pos":[14823,14835],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The tangent of the specified real number.","pos":[14837,14878]},{"pos":[14884,14891],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[14893,15050],"content":"Values for the <bpt id=\"p1\">*</bpt>arg<ept id=\"p1\">*</ept> parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\"","source":"Values for the *arg* parameter that are outside the -250 to 250 range cause the following run-time error: \"Argument for trigonometric function out of range.\""},{"pos":[15056,15063],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15065,15120],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tan<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tan** function."},{"pos":[15284,15288],"content":"tanh","linkify":"tanh","nodes":[{"content":"tanh","pos":[0,4]}]},{"content":"Retrieves the hyperbolic tangent of a real number.","pos":[15289,15339]},{"pos":[15345,15351],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[15383,15393],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15397,15406]},{"content":"Description","pos":[15409,15420]},{"content":"<ph id=\"ph1\">\\_</ph>arg","pos":[15533,15538],"source":"\\_arg"},{"content":"The number to calculate the hyperbolic tangent for.","pos":[15545,15596]},{"pos":[15604,15616],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The hyperbolic tangent of the specified real number.","pos":[15618,15670]},{"pos":[15676,15683],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[15685,15741],"content":"The following example illustrates the <bpt id=\"p1\">**</bpt>tanh<ept id=\"p1\">**</ept> function.","source":"The following example illustrates the **tanh** function."},{"pos":[15953,15958],"content":"trunc","linkify":"trunc","nodes":[{"content":"trunc","pos":[0,5]}]},{"content":"Truncates a real number by removing any decimal places.","pos":[15959,16014]},{"pos":[16020,16026],"content":"Syntax","linkify":"Syntax","nodes":[{"content":"Syntax","pos":[0,6]}]},{"pos":[16063,16073],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[16077,16086]},{"content":"Description","pos":[16089,16100]},{"content":"<ph id=\"ph1\">\\_</ph>decimal","pos":[16157,16166],"source":"\\_decimal"},{"content":"The number to truncate.","pos":[16169,16192]},{"pos":[16200,16212],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[16214,16327],"content":"A number that is equivalent to the value of the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>decimal<ept id=\"p1\">*</ept> parameter after the decimal places have been removed.","source":"A number that is equivalent to the value of the *\\_decimal* parameter after the decimal places have been removed."},{"pos":[16333,16340],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function always rounds numbers down to a complete integer.","pos":[16342,16405]},{"pos":[16411,16418],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example truncates 2.7147 to 2.00.","pos":[16420,16467]}]}