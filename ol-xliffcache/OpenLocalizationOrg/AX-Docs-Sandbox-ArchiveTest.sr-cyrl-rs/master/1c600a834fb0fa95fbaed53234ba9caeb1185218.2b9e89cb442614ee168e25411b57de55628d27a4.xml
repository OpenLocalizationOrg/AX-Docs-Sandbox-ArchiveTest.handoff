{"content":"---\n# required metadata\n\ntitle: V Classes\ndescription: System API classes that start with the letter V.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 55841\nms.assetid: fd3859a7-c0e5-41b3-9bd3-fc68099e727f\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# V Classes\n\n[!include[banner](../includes/banner.md)]\n\n\nSystem API classes that start with the letter V.\n\nClass ValidateEventArgs\n-----------------------\n\n    class ValidateEventArgs extends DataEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                | Description |\n|-------------------------------------------------------|-------------|\n| public boolean parmValidateResult(\\[boolean result\\]) |             |\n| public void new(boolean result)                       |             |\n\n### Method parmValidateResult\n\n    public boolean parmValidateResult([boolean result])\n\n#### Parameters\n\nresult  \n\n#### Return Value\n\n### Method new\n\n    public void new(boolean result)\n\n#### Parameters\n\nresult  \n\n## Class ValidateFieldEventArgs\n    class ValidateFieldEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                       | Description |\n|----------------------------------------------|-------------|\n| public int parmFieldId()                     |             |\n| public void new(int fieldId, boolean result) |             |\n\n### Method parmFieldId\n\n    public int parmFieldId()\n\n#### Return Value\n\n### Method new\n\n    public void new(int fieldId, boolean result)\n\n#### Parameters\n\nfieldId  \n\n<!-- -->\n\nresult  \n\n## Class ValidateFieldValueEventArgs\n    class ValidateFieldValueEventArgs extends ValidateEventArgs\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                         | Description |\n|----------------------------------------------------------------|-------------|\n| public str parmFieldName()                                     |             |\n| public int parmArrayIndex()                                    |             |\n| public void new(str fieldName, int arrayIndex, boolean result) |             |\n\n### Method parmFieldName\n\n    public str parmFieldName()\n\n#### Return Value\n\n### Method parmArrayIndex\n\n    public int parmArrayIndex()\n\n#### Return Value\n\n### Method new\n\n    public void new(str fieldName, int arrayIndex, boolean result)\n\n#### Parameters\n\nfieldName  \n\n<!-- -->\n\narrayIndex  \n\n<!-- -->\n\nresult  \n\n## Class VirtualChannelManager\n    class VirtualChannelManager extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                         | Description                                                    |\n|------------------------------------------------|----------------------------------------------------------------|\n| public void finalize()                         |                                                                |\n| public void new()                              | Initializes a new instance of the VirtualChannelManager class. |\n| public void sendData(int listenerId, str data) |                                                                |\n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the VirtualChannelManager class.\n\n    public void new()\n\n### Method sendData\n\n    public void sendData(int listenerId, str data)\n\n#### Parameters\n\nlistenerId  \n\n<!-- -->\n\ndata  \n\n## Class VSItemNode\n    class VSItemNode extends TreeNode\n\nThe VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                                          |\n|--------------------------------------------------------------------|------------------------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node.                |\n| public BinData getFileData()                                       |                                                      |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) | Notifies listeners that a file has been deleted.     |\n| ::public static void notifyFileUpdated(TreeNode node)              | Notifies listeners that a file has been updated.     |\n| public void setFileData(BinData data)                              |                                                      |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.                   |\n| public void getFile(str fileName)                                  |                                                      |\n| ::public static void notifyFileCreated(TreeNode node)              | Notifies listeners that a new file has been created. |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) | Notifies listeners that a file has been renamed.     |\n| public void setFile(str fileName)                                  |                                                      |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileDeleted\n\nNotifies listeners that a file has been deleted.\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \nThe AOT path of the file.\n\n<!-- -->\n\naotPath  \nThe AOT path of the file.\n\n### Method notifyFileUpdated\n\nNotifies listeners that a file has been updated.\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been updated.\n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\nNotifies listeners that a new file has been created.\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \nThe node that has been created.\n\n### Method notifyFileRenamed\n\nNotifies listeners that a file has been renamed.\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \nThe old name of the file.\n\n<!-- -->\n\noldName  \nThe old name of the file.\n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectFileNode\n    class VSProjectFileNode extends VSItemNode\n\nThe VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n## Class VSProjectFolderNode\n    class VSProjectFolderNode extends TreeNode\n\nThe VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                       | Description                                                                                              |\n|----------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|\n| public str AOTgetSource()                                                                    | Returns the source code of this node.                                                                    |\n| public VSProjectFileNode createFileNode(str name)                                            | Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.   |\n| public VSProjectFolderNode createFolderNode(str name)                                        | Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance. |\n| public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\]) | Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.   |\n| public BinData getFileData()                                                                 |                                                                                                          |\n| ::public static void notifyFileUpdated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath)                           |                                                                                                          |\n| public void setFileData(BinData data)                                                        |                                                                                                          |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])                                   | Sets the source code of this node.                                                                       |\n| public void getFile(str fileName)                                                            |                                                                                                          |\n| ::public static void notifyFileCreated(TreeNode node)                                        |                                                                                                          |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName)                           |                                                                                                          |\n| public void setFile(str fileName)                                                            |                                                                                                          |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method createFileNode\n\nCreates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFileNode createFileNode(str name)\n\n#### Parameters\n\nname  \nThe name of the file node.\n\n#### Return Value\n\nThe new instance of the VSProjectFileNode class.\n\n### Method createFolderNode\n\nCreates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectFolderNode createFolderNode(str name)\n\n#### Parameters\n\nname  \nThe name of the folder node.\n\n#### Return Value\n\nThe new instance of the VSProjectFolderNode class.\n\n### Method createLinkNode\n\nCreates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.\n\n    public VSProjectLinkNode createLinkNode(str name, str aotPath, [boolean createLinkedNode])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\naotPath  \n\n<!-- -->\n\ncreateLinkedNode  \n\n#### Return Value\n\nThe new instance of the VSProjectLinkNode class.\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n## Class VSProjectLinkNode\n    class VSProjectLinkNode extends VSItemNode\n\nThe VSProjectLinkNode class represents links to other Finance and Operations Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                             | Description                           |\n|--------------------------------------------------------------------|---------------------------------------|\n| public str AOTgetSource()                                          | Returns the source code of this node. |\n| public str getAOTPath()                                            |                                       |\n| public BinData getFileData()                                       |                                       |\n| ::public static void notifyFileCreated(TreeNode node)              |                                       |\n| public void setFile(str fileName)                                  |                                       |\n| public void setFileData(BinData data)                              |                                       |\n| public void getFile(str fileName)                                  |                                       |\n| ::public static void notifyFileUpdated(TreeNode node)              |                                       |\n| public void AOTsetSource(str source, \\[boolean isStatic\\])         | Sets the source code of this node.    |\n| ::public static void notifyFileRenamed(TreeNode node, str oldName) |                                       |\n| ::public static void notifyFileDeleted(TreeNode node, str aotPath) |                                       |\n\n### Method AOTgetSource\n\nReturns the source code of this node.\n\n    public str AOTgetSource()\n\n#### Return Value\n\nThe string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).\n\n#### Remarks\n\nThis function is overridden by nodes that have source code.\n\n### Method getAOTPath\n\n    public str getAOTPath()\n\n#### Return Value\n\n### Method getFileData\n\n    public BinData getFileData()\n\n#### Return Value\n\n### Method notifyFileCreated\n\n    public static void notifyFileCreated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method setFile\n\n    public void setFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method setFileData\n\n    public void setFileData(BinData data)\n\n#### Parameters\n\ndata  \n\n### Method getFile\n\n    public void getFile(str fileName)\n\n#### Parameters\n\nfileName  \n\n### Method notifyFileUpdated\n\n    public static void notifyFileUpdated(TreeNode node)\n\n#### Parameters\n\nnode  \n\n### Method AOTsetSource\n\nSets the source code of this node.\n\n    public void AOTsetSource(str source, [boolean isStatic])\n\n#### Parameters\n\nsource  \nThe value that specifies whether the method is static; optional.\n\n<!-- -->\n\nisStatic  \nThe value that specifies whether the method is static; optional.\n\n#### Remarks\n\nThis method is overridden by nodes that have source code.\n\n### Method notifyFileRenamed\n\n    public static void notifyFileRenamed(TreeNode node, str oldName)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\noldName  \n\n### Method notifyFileDeleted\n\n    public static void notifyFileDeleted(TreeNode node, str aotPath)\n\n#### Parameters\n\nnode  \n\n<!-- -->\n\naotPath  \n\n## Class VSProjectNode\n    class VSProjectNode extends xResourceNode\n\nThe VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                | Description                                                                                       |\n|-----------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n| public container extract(\\[str path\\], \\[boolean extractReferenced\\]) | Extracts the whole project to disk.                                                               |\n| public VSProjectFolderNode getContentNode()                           | Gets the content VSProjectFolderNode object that contains the Visual Studio project files.        |\n| public DeployTo getDeployTo()                                         | Gets value of the deployTo property.                                                              |\n| public VSProjectFolderNode getOutputNode()                            | Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.  |\n| public VSProjectFileNode getPrimaryOutputNode()                       | Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project. |\n| public str getPrimaryTargetFileName()                                 | Gets the primary target file name of the Visual Studio project.                                   |\n| public Map getProxies()                                               | Gets the proxies in this project.                                                                 |\n| public container getProxiesContainer()                                | Gets the proxies in this project.                                                                 |\n| public str getReferencedProjectsInAOT()                               | Gets the AOT paths of the projects that are referenced by this Visual Studio project.             |\n| public str referencedProjects(\\[str value\\])                          |                                                                                                   |\n| public void setPrimaryTargetFileName(str targetFileName)              | Sets the primary target file name of the Visual Studio project.                                   |\n| public void extractToSpecificDir(str directory)                       |                                                                                                   |\n| public void setDeployTo(DeployTo deployTo)                            | Sets the value of the deployTo property.                                                          |\n\n### Method extract\n\nExtracts the whole project to disk.\n\n    public container extract([str path], [boolean extractReferenced])\n\n#### Parameters\n\npath  \nA Boolean value that determines whether to extract the referenced projects.\n\n<!-- -->\n\nextractReferenced  \nA Boolean value that determines whether to extract the referenced projects.\n\n#### Return Value\n\nA list of paths where the project was extracted.\n\n### Method getContentNode\n\nGets the content VSProjectFolderNode object that contains the Visual Studio project files.\n\n    public VSProjectFolderNode getContentNode()\n\n#### Return Value\n\nThe content VSProjectFolderNode object that contains the Visual Studio project files.\n\n### Method getDeployTo\n\nGets value of the deployTo property.\n\n    public DeployTo getDeployTo()\n\n#### Return Value\n\nThe deployTo property value.\n\n### Method getOutputNode\n\nGets the output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n    public VSProjectFolderNode getOutputNode()\n\n#### Return Value\n\nThe output VSProjectFolderNode object that contains the Visual Studio project output files.\n\n### Method getPrimaryOutputNode\n\nGets the VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n    public VSProjectFileNode getPrimaryOutputNode()\n\n#### Return Value\n\nA VSProjectFileNode object that represent the primary output of the Visual Studio project.\n\n### Method getPrimaryTargetFileName\n\nGets the primary target file name of the Visual Studio project.\n\n    public str getPrimaryTargetFileName()\n\n#### Return Value\n\nThe primary target file name of the Visual Studio project.\n\n### Method getProxies\n\nGets the proxies in this project.\n\n    public Map getProxies()\n\n#### Return Value\n\nA map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getProxiesContainer\n\nGets the proxies in this project.\n\n    public container getProxiesContainer()\n\n#### Return Value\n\nA container that holds the packed representation of a map that contains the Class, Enum, and Table keys. Each key contains a list of proxies.\n\n### Method getReferencedProjectsInAOT\n\nGets the AOT paths of the projects that are referenced by this Visual Studio project.\n\n    public str getReferencedProjectsInAOT()\n\n#### Return Value\n\nA list of AOT paths of the projects that are referenced by this Visual Studio project.\n\n### Method referencedProjects\n\n    public str referencedProjects([str value])\n\n#### Parameters\n\nvalue  \n\n#### Return Value\n\n### Method setPrimaryTargetFileName\n\nSets the primary target file name of the Visual Studio project.\n\n    public void setPrimaryTargetFileName(str targetFileName)\n\n#### Parameters\n\ntargetFileName  \nThe primary target file name of the Visual Studio project.\n\n### Method extractToSpecificDir\n\n    public void extractToSpecificDir(str directory)\n\n#### Parameters\n\ndirectory  \n\n### Method setDeployTo\n\nSets the value of the deployTo property.\n\n    public void setDeployTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe deployTo property value.\n\n## Class VSProjectsNode\n    class VSProjectsNode extends xResourceNode\n\nThe VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                            | Description                                                                                |\n|---------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|\n| public TreeNode AOTfindChild(str name, \\[int nodeType\\])                                          | Finds the specified child node of this node.                                               |\n| public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\]) | Creates a new instance of the VSProjectNode class.                                         |\n| public container getProjectsDeployingTo(DeployTo deployTo)                                        | Gets a list of VSProjectNode objects that have the specified deployTo property.            |\n| public container getProjectsModifiedAfter(DateTime timestamp)                                     | Gets a list of VSProjectNode objects that were modified after the specified date and time. |\n| public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)                              |                                                                                            |\n| public Object getVSProjectNodeObservable()                                                        | Gets the VSProjectNodeObservable object.                                                   |\n| public void AOTrefresh()                                                                          | Updates the node with the latest changes to the .aod file.                                 |\n\n### Method AOTfindChild\n\nFinds the specified child node of this node.\n\n    public TreeNode AOTfindChild(str name, [int nodeType])\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nnodeType  \n\n#### Return Value\n\nThe specified tree node.\n\n### Method createProjectNode\n\nCreates a new instance of the VSProjectNode class.\n\n    public VSProjectNode createProjectNode(str name, str projectTypesString, [boolean virtualNode])\n\n#### Parameters\n\nname  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Finance and Operations Store.\n\n<!-- -->\n\nprojectTypesString  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Finance and Operations Store.\n\n<!-- -->\n\nvirtualNode  \nA Boolean value that indicates whether the node is created only in memory. In this case, the node will not be persisted in the Finance and Operations Store.\n\n#### Return Value\n\nThe VSProjectNode object that is created.\n\n### Method getProjectsDeployingTo\n\nGets a list of VSProjectNode objects that have the specified deployTo property.\n\n    public container getProjectsDeployingTo(DeployTo deployTo)\n\n#### Parameters\n\ndeployTo  \nThe value of the deployTo property.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getProjectsModifiedAfter\n\nGets a list of VSProjectNode objects that were modified after the specified date and time.\n\n    public container getProjectsModifiedAfter(DateTime timestamp)\n\n#### Parameters\n\ntimestamp  \nThe date and time as a DB\\_DATETIME\\_TYPE value.\n\n#### Return Value\n\nA list of VSProjectNode objects.\n\n### Method getTypeNodeFromGuid\n\n    public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)\n\n#### Parameters\n\nprojectTypesString  \n\n#### Return Value\n\n### Method getVSProjectNodeObservable\n\nGets the VSProjectNodeObservable object.\n\n    public Object getVSProjectNodeObservable()\n\n#### Return Value\n\nThe VSProjectNodeObservable object.\n\n#### Remarks\n\nObservers can register with this and get notified of CRUD operations on Visual Studio projects.\n\n### Method AOTrefresh\n\nUpdates the node with the latest changes to the .aod file.\n\n    public void AOTrefresh()\n\n## Class VSProjectTypeNode\n    class VSProjectTypeNode extends TreeNode\n\nThe VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method | Description |\n|--------|-------------|\n\n## Class VSS\n    class VSS extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                                                        | Description                               |\n|---------------------------------------------------------------------------------------------------------------|-------------------------------------------|\n| public boolean connect()                                                                                      |                                           |\n| public boolean connected()                                                                                    |                                           |\n| public boolean disconnect()                                                                                   |                                           |\n| public container getCheckedoutFiles()                                                                         |                                           |\n| public container getConnectionInfo()                                                                          |                                           |\n| public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])      |                                           |\n| public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)                |                                           |\n| public VSSItem newSubProject(str name, str localPath)                                                         |                                           |\n| public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\]) |                                           |\n| public void new()                                                                                             | Initializes an instance of the VSS class. |\n\n### Method connect\n\n    public boolean connect()\n\n#### Return Value\n\n### Method connected\n\n    public boolean connected()\n\n#### Return Value\n\n### Method disconnect\n\n    public boolean disconnect()\n\n#### Return Value\n\n### Method getCheckedoutFiles\n\n    public container getCheckedoutFiles()\n\n#### Return Value\n\n### Method getConnectionInfo\n\n    public container getConnectionInfo()\n\n#### Return Value\n\n### Method getVSSItem\n\n    public VSSItem getVSSItem(str vssItemPath, str localFilePath, [boolean completePath], [int version])\n\n#### Parameters\n\nvssItemPath  \n\n<!-- -->\n\nlocalFilePath  \n\n<!-- -->\n\ncompletePath  \n\n<!-- -->\n\nversion  \n\n#### Return Value\n\n### Method init\n\n    public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)\n\n#### Parameters\n\nvssIni  \n\n<!-- -->\n\nvssPrjRoot  \n\n<!-- -->\n\nvssWorkingFolder  \n\n<!-- -->\n\nvssUser  \n\n<!-- -->\n\nvssPwd  \n\n#### Return Value\n\n### Method newSubProject\n\n    public VSSItem newSubProject(str name, str localPath)\n\n#### Parameters\n\nname  \n\n<!-- -->\n\nlocalPath  \n\n#### Return Value\n\n### Method synchronizeProjects\n\n    public Map synchronizeProjects([Set projects], [boolean force], [boolean delLocalFiles], [str label])\n\n#### Parameters\n\nprojects  \n\n<!-- -->\n\nforce  \n\n<!-- -->\n\ndelLocalFiles  \n\n<!-- -->\n\nlabel  \n\n#### Return Value\n\n### Method new\n\nInitializes an instance of the VSS class.\n\n    public void new()\n\n## Class VSSItem\n    class VSSItem extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                                               | Description                                      |\n|--------------------------------------------------------------------------------------|--------------------------------------------------|\n| public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])                      |                                                  |\n| public boolean checkin(\\[str comment\\])                                              |                                                  |\n| public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\]) |                                                  |\n| public boolean delete()                                                              |                                                  |\n| public boolean destroy()                                                             |                                                  |\n| public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\]) |                                                  |\n| public str getActionText()                                                           |                                                  |\n| public container getCheckedOutTo()                                                   |                                                  |\n| public int getCheckoutVersion()                                                      |                                                  |\n| public container getHistory()                                                        |                                                  |\n| public ComInterface getIUnknown()                                                    |                                                  |\n| public int getVersionNo()                                                            |                                                  |\n| public str getVSSPath()                                                              |                                                  |\n| public boolean isCheckedOut()                                                        |                                                  |\n| public boolean isRenamed()                                                           |                                                  |\n| public str name(str newName)                                                         |                                                  |\n| public boolean rename(str newName)                                                   |                                                  |\n| public boolean undoCheckout()                                                        |                                                  |\n| private void new()                                                                   | Initializes a new instance of the VSSItem class. |\n\n### Method add\n\n    public boolean add([boolean keepCheckedout], [str comment])\n\n#### Parameters\n\nkeepCheckedout  \n\n<!-- -->\n\ncomment  \n\n#### Return Value\n\n### Method checkin\n\n    public boolean checkin([str comment])\n\n#### Parameters\n\ncomment  \n\n#### Return Value\n\n### Method checkout\n\n    public boolean checkout([boolean allowMultipleCheckout], [boolean replaceLocal])\n\n#### Parameters\n\nallowMultipleCheckout  \n\n<!-- -->\n\nreplaceLocal  \n\n#### Return Value\n\n### Method delete\n\n    public boolean delete()\n\n#### Return Value\n\n### Method destroy\n\n    public boolean destroy()\n\n#### Return Value\n\n### Method get\n\n    public Map get([boolean force], [int version], [str label], [str localFile])\n\n#### Parameters\n\nforce  \n\n<!-- -->\n\nversion  \n\n<!-- -->\n\nlabel  \n\n<!-- -->\n\nlocalFile  \n\n#### Return Value\n\n### Method getActionText\n\n    public str getActionText()\n\n#### Return Value\n\n### Method getCheckedOutTo\n\n    public container getCheckedOutTo()\n\n#### Return Value\n\n### Method getCheckoutVersion\n\n    public int getCheckoutVersion()\n\n#### Return Value\n\n### Method getHistory\n\n    public container getHistory()\n\n#### Return Value\n\n### Method getIUnknown\n\n    public ComInterface getIUnknown()\n\n#### Return Value\n\n### Method getVersionNo\n\n    public int getVersionNo()\n\n#### Return Value\n\n### Method getVSSPath\n\n    public str getVSSPath()\n\n#### Return Value\n\n### Method isCheckedOut\n\n    public boolean isCheckedOut()\n\n#### Return Value\n\n### Method isRenamed\n\n    public boolean isRenamed()\n\n#### Return Value\n\n### Method name\n\n    public str name(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method rename\n\n    public boolean rename(str newName)\n\n#### Parameters\n\nnewName  \n\n#### Return Value\n\n### Method undoCheckout\n\n    public boolean undoCheckout()\n\n#### Return Value\n\n### Method new\n\nInitializes a new instance of the VSSItem class.\n\n    private void new()\n\n\n\n","nodes":[{"pos":[4,611],"embed":true,"restype":"x-metadata","content":"# required metadata\n\ntitle: V Classes\ndescription: System API classes that start with the letter V.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 55841\nms.assetid: fd3859a7-c0e5-41b3-9bd3-fc68099e727f\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"V Classes","nodes":[{"pos":[0,9],"content":"V Classes","nodes":[{"content":"V Classes","pos":[0,9]}]}],"path":["title"],"extradata":"MT"},{"content":"System API classes that start with the letter V.","nodes":[{"pos":[0,48],"content":"System API classes that start with the letter V.","nodes":[{"content":"System API classes that start with the letter V.","pos":[0,48]}]}],"path":["description"],"extradata":"MT"}],"header":"# required metadata\n","yml":true},{"pos":[619,628],"content":"V Classes","linkify":"V Classes","nodes":[{"content":"V Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter V.","pos":[674,722]},{"pos":[724,747],"content":"Class ValidateEventArgs","linkify":"Class ValidateEventArgs","nodes":[{"content":"Class ValidateEventArgs","pos":[0,23]}]},{"pos":[828,835],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[841,849],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[855,862],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[866,872]},{"content":"Description","pos":[922,933]},{"content":"public boolean parmValidateResult(<ph id=\"ph1\">\\[</ph>boolean result<ph id=\"ph2\">\\]</ph>)","pos":[1010,1063],"source":"public boolean parmValidateResult(\\[boolean result\\])"},{"content":"public void new(boolean result)","pos":[1082,1113]},{"pos":[1157,1182],"content":"Method parmValidateResult","linkify":"Method parmValidateResult","nodes":[{"content":"Method parmValidateResult","pos":[0,25]}]},{"pos":[1246,1256],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1258,1264]},{"pos":[1273,1285],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1291,1301],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1345,1355],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"result","pos":[1357,1363]},{"pos":[1370,1398],"content":"Class ValidateFieldEventArgs","linkify":"Class ValidateFieldEventArgs","nodes":[{"content":"Class ValidateFieldEventArgs","pos":[0,28]}]},{"pos":[1463,1470],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1476,1484],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[1490,1497],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[1501,1507]},{"content":"Description","pos":[1548,1559]},{"content":"public int parmFieldId()","pos":[1627,1651]},{"content":"public void new(int fieldId, boolean result)","pos":[1690,1734]},{"pos":[1756,1774],"content":"Method parmFieldId","linkify":"Method parmFieldId","nodes":[{"content":"Method parmFieldId","pos":[0,18]}]},{"pos":[1811,1823],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[1829,1839],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[1896,1906],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldId","pos":[1908,1915]},{"content":"result","pos":[1929,1935]},{"pos":[1942,1975],"content":"Class ValidateFieldValueEventArgs","linkify":"Class ValidateFieldValueEventArgs","nodes":[{"content":"Class ValidateFieldValueEventArgs","pos":[0,33]}]},{"pos":[2045,2052],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2058,2066],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2072,2079],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2083,2089]},{"content":"Description","pos":[2148,2159]},{"content":"public str parmFieldName()","pos":[2245,2271]},{"content":"public int parmArrayIndex()","pos":[2326,2353]},{"content":"public void new(str fieldName, int arrayIndex, boolean result)","pos":[2407,2469]},{"pos":[2491,2511],"content":"Method parmFieldName","linkify":"Method parmFieldName","nodes":[{"content":"Method parmFieldName","pos":[0,20]}]},{"pos":[2550,2562],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2568,2589],"content":"Method parmArrayIndex","linkify":"Method parmArrayIndex","nodes":[{"content":"Method parmArrayIndex","pos":[0,21]}]},{"pos":[2629,2641],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2647,2657],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"pos":[2732,2742],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fieldName","pos":[2744,2753]},{"content":"arrayIndex","pos":[2767,2777]},{"content":"result","pos":[2791,2797]},{"pos":[2804,2831],"content":"Class VirtualChannelManager","linkify":"Class VirtualChannelManager","nodes":[{"content":"Class VirtualChannelManager","pos":[0,27]}]},{"pos":[2884,2891],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[2897,2905],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[2911,2918],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[2922,2928]},{"content":"Description","pos":[2971,2982]},{"content":"public void finalize()","pos":[3154,3176]},{"content":"public void new()","pos":[3270,3287]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3319,3381]},{"content":"public void sendData(int listenerId, str data)","pos":[3386,3432]},{"pos":[3505,3520],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[3554,3564],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VirtualChannelManager class.","pos":[3566,3628]},{"pos":[3657,3672],"content":"Method sendData","linkify":"Method sendData","nodes":[{"content":"Method sendData","pos":[0,15]}]},{"pos":[3731,3741],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"listenerId","pos":[3743,3753]},{"content":"data","pos":[3767,3771]},{"pos":[3778,3794],"content":"Class VSItemNode","linkify":"Class VSItemNode","nodes":[{"content":"Class VSItemNode","pos":[0,16]}]},{"content":"The VSItemNode class is a base class for Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[3834,3973]},{"pos":[3979,3986],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3992,4000],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4006,4013],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4017,4023]},{"content":"Description","pos":[4086,4097]},{"content":"public str AOTgetSource()","pos":[4269,4294]},{"content":"Returns the source code of this node.","pos":[4338,4375]},{"content":"public BinData getFileData()","pos":[4395,4423]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[4521,4587]},{"content":"Notifies listeners that a file has been deleted.","pos":[4590,4638]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[4647,4700]},{"content":"Notifies listeners that a file has been updated.","pos":[4716,4764]},{"content":"public void setFileData(BinData data)","pos":[4773,4810]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[4899,4957],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[4968,5002]},{"content":"public void getFile(str fileName)","pos":[5025,5058]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[5151,5204]},{"content":"Notifies listeners that a new file has been created.","pos":[5220,5272]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[5277,5343]},{"content":"Notifies listeners that a file has been renamed.","pos":[5346,5394]},{"content":"public void setFile(str fileName)","pos":[5403,5436]},{"pos":[5532,5551],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[5553,5590]},{"pos":[5628,5640],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains the source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[5642,5777]},{"pos":[5784,5791],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[5793,5852]},{"pos":[5858,5876],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[5917,5929],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5935,5959],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"content":"Notifies listeners that a file has been deleted.","pos":[5961,6009]},{"pos":[6086,6096],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6098,6102]},{"content":"The AOT path of the file.","pos":[6105,6130]},{"content":"aotPath","pos":[6142,6149]},{"content":"The AOT path of the file.","pos":[6152,6177]},{"pos":[6183,6207],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"content":"Notifies listeners that a file has been updated.","pos":[6209,6257]},{"pos":[6321,6331],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[6333,6337]},{"content":"The node that has been updated.","pos":[6340,6371]},{"pos":[6377,6395],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[6445,6455],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[6457,6461]},{"pos":[6469,6488],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[6490,6524]},{"pos":[6593,6603],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[6605,6611]},{"content":"The value that specifies whether the method is static; optional.","pos":[6614,6678]},{"content":"isStatic","pos":[6690,6698]},{"content":"The value that specifies whether the method is static; optional.","pos":[6701,6765]},{"pos":[6772,6779],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[6781,6838]},{"pos":[6844,6858],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[6904,6914],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[6916,6924]},{"pos":[6932,6956],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"content":"Notifies listeners that a new file has been created.","pos":[6958,7010]},{"pos":[7074,7084],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7086,7090]},{"content":"The node that has been created.","pos":[7093,7124]},{"pos":[7130,7154],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"content":"Notifies listeners that a file has been renamed.","pos":[7156,7204]},{"pos":[7281,7291],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[7293,7297]},{"content":"The old name of the file.","pos":[7300,7325]},{"content":"oldName","pos":[7337,7344]},{"content":"The old name of the file.","pos":[7347,7372]},{"pos":[7378,7392],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[7438,7448],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[7450,7458]},{"pos":[7465,7488],"content":"Class VSProjectFileNode","linkify":"Class VSProjectFileNode","nodes":[{"content":"Class VSProjectFileNode","pos":[0,23]}]},{"content":"The VSProjectFileNode class represents files in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[7537,7687]},{"pos":[7693,7700],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7706,7714],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[7720,7727],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[7731,7737]},{"content":"Description","pos":[7800,7811]},{"content":"public str AOTgetSource()","pos":[7953,7978]},{"content":"Returns the source code of this node.","pos":[8022,8059]},{"content":"public BinData getFileData()","pos":[8064,8092]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[8175,8228]},{"content":"public void setFileData(BinData data)","pos":[8286,8323]},{"content":"public void getFile(str fileName)","pos":[8397,8430]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[8508,8574]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[8619,8672]},{"content":"public void setFile(str fileName)","pos":[8730,8763]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[8841,8907]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[8952,9010],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[9021,9055]},{"pos":[9066,9085],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[9087,9124]},{"pos":[9162,9174],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[9176,9307]},{"pos":[9314,9321],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[9323,9382]},{"pos":[9388,9406],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[9447,9459],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[9465,9489],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[9553,9563],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9565,9569]},{"pos":[9577,9595],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[9645,9655],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[9657,9661]},{"pos":[9669,9683],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[9729,9739],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[9741,9749]},{"pos":[9757,9781],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[9858,9868],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[9870,9874]},{"content":"aotPath","pos":[9888,9895]},{"pos":[9903,9927],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[9991,10001],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[10003,10007]},{"pos":[10015,10029],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[10075,10085],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[10087,10095]},{"pos":[10103,10127],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[10204,10214],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[10216,10220]},{"content":"oldName","pos":[10234,10241]},{"pos":[10249,10268],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[10270,10304]},{"pos":[10373,10383],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[10385,10391]},{"content":"The value that specifies whether the method is static; optional.","pos":[10394,10458]},{"content":"isStatic","pos":[10470,10478]},{"content":"The value that specifies whether the method is static; optional.","pos":[10481,10545]},{"pos":[10552,10559],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[10561,10618]},{"pos":[10623,10648],"content":"Class VSProjectFolderNode","linkify":"Class VSProjectFolderNode","nodes":[{"content":"Class VSProjectFolderNode","pos":[0,25]}]},{"content":"The VSProjectFolderNode class represents folders in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[10697,10851]},{"pos":[10857,10864],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10870,10878],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[10884,10891],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[10895,10901]},{"content":"Description","pos":[10990,11001]},{"content":"public str AOTgetSource()","pos":[11303,11328]},{"content":"Returns the source code of this node.","pos":[11398,11435]},{"content":"public VSProjectFileNode createFileNode(str name)","pos":[11507,11556]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[11602,11704]},{"content":"public VSProjectFolderNode createFolderNode(str name)","pos":[11711,11764]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[11806,11910]},{"content":"public VSProjectLinkNode createLinkNode(str name, str aotPath, <ph id=\"ph1\">\\[</ph>boolean createLinkedNode<ph id=\"ph2\">\\]</ph>)","pos":[11915,12007],"source":"public VSProjectLinkNode createLinkNode(str name, str aotPath, \\[boolean createLinkedNode\\])"},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[12010,12112]},{"content":"public BinData getFileData()","pos":[12119,12147]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[12323,12376]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[12527,12593]},{"content":"public void setFileData(BinData data)","pos":[12731,12768]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[12935,12993],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[13030,13064]},{"content":"public void getFile(str fileName)","pos":[13139,13172]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[13343,13396]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[13547,13613]},{"content":"public void setFile(str fileName)","pos":[13751,13784]},{"pos":[13958,13977],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[13979,14016]},{"pos":[14054,14066],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[14068,14199]},{"pos":[14206,14213],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[14215,14274]},{"pos":[14280,14301],"content":"Method createFileNode","linkify":"Method createFileNode","nodes":[{"content":"Method createFileNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectFileNode class as a child of this VSProjectFolderNode instance.","pos":[14303,14405]},{"pos":[14467,14477],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14479,14483]},{"content":"The name of the file node.","pos":[14486,14512]},{"pos":[14519,14531],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFileNode class.","pos":[14533,14581]},{"pos":[14587,14610],"content":"Method createFolderNode","linkify":"Method createFolderNode","nodes":[{"content":"Method createFolderNode","pos":[0,23]}]},{"content":"Creates a new instance of the VSProjectFolderNode class as a child of this VSProjectFolderNode instance.","pos":[14612,14716]},{"pos":[14782,14792],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[14794,14798]},{"content":"The name of the folder node.","pos":[14801,14829]},{"pos":[14836,14848],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectFolderNode class.","pos":[14850,14900]},{"pos":[14906,14927],"content":"Method createLinkNode","linkify":"Method createLinkNode","nodes":[{"content":"Method createLinkNode","pos":[0,21]}]},{"content":"Creates a new instance of the VSProjectLinkNode class as a child of this VSProjectFolderNode instance.","pos":[14929,15031]},{"pos":[15134,15144],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[15146,15150]},{"content":"aotPath","pos":[15164,15171]},{"content":"createLinkedNode","pos":[15185,15201]},{"pos":[15210,15222],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The new instance of the VSProjectLinkNode class.","pos":[15224,15272]},{"pos":[15278,15296],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[15337,15349],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[15355,15379],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[15443,15453],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15455,15459]},{"pos":[15467,15491],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[15568,15578],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[15580,15584]},{"content":"aotPath","pos":[15598,15605]},{"pos":[15613,15631],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[15681,15691],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[15693,15697]},{"pos":[15705,15724],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[15726,15760]},{"pos":[15829,15839],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[15841,15847]},{"content":"The value that specifies whether the method is static; optional.","pos":[15850,15914]},{"content":"isStatic","pos":[15926,15934]},{"content":"The value that specifies whether the method is static; optional.","pos":[15937,16001]},{"pos":[16008,16015],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[16017,16074]},{"pos":[16080,16094],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[16140,16150],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16152,16160]},{"pos":[16168,16192],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[16256,16266],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16268,16272]},{"pos":[16280,16304],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[16381,16391],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[16393,16397]},{"content":"oldName","pos":[16411,16418]},{"pos":[16426,16440],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[16486,16496],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[16498,16506]},{"pos":[16513,16536],"content":"Class VSProjectLinkNode","linkify":"Class VSProjectLinkNode","nodes":[{"content":"Class VSProjectLinkNode","pos":[0,23]}]},{"content":"The VSProjectLinkNode class represents links to other Finance and Operations Application Object Tree (AOT) nodes in the Microsoft Visual Studio project nodes in the AOT.","pos":[16585,16754]},{"pos":[16760,16767],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[16773,16781],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[16787,16794],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[16798,16804]},{"content":"Description","pos":[16867,16878]},{"content":"public str AOTgetSource()","pos":[17020,17045]},{"content":"Returns the source code of this node.","pos":[17089,17126]},{"content":"public str getAOTPath()","pos":[17131,17154]},{"content":"public BinData getFileData()","pos":[17242,17270]},{"content":"::public static void notifyFileCreated(TreeNode node)","pos":[17353,17406]},{"content":"public void setFile(str fileName)","pos":[17464,17497]},{"content":"public void setFileData(BinData data)","pos":[17575,17612]},{"content":"public void getFile(str fileName)","pos":[17686,17719]},{"content":"::public static void notifyFileUpdated(TreeNode node)","pos":[17797,17850]},{"content":"public void AOTsetSource(str source, <ph id=\"ph1\">\\[</ph>boolean isStatic<ph id=\"ph2\">\\]</ph>)","pos":[17908,17966],"source":"public void AOTsetSource(str source, \\[boolean isStatic\\])"},{"content":"Sets the source code of this node.","pos":[17977,18011]},{"content":"::public static void notifyFileRenamed(TreeNode node, str oldName)","pos":[18019,18085]},{"content":"::public static void notifyFileDeleted(TreeNode node, str aotPath)","pos":[18130,18196]},{"pos":[18244,18263],"content":"Method AOTgetSource","linkify":"Method AOTgetSource","nodes":[{"content":"Method AOTgetSource","pos":[0,19]}]},{"content":"Returns the source code of this node.","pos":[18265,18302]},{"pos":[18340,18352],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The string that contains source code, if there is any; otherwise, nullNothingnullptrunita null reference (Nothing in Visual Basic).","pos":[18354,18485]},{"pos":[18492,18499],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function is overridden by nodes that have source code.","pos":[18501,18560]},{"pos":[18566,18583],"content":"Method getAOTPath","linkify":"Method getAOTPath","nodes":[{"content":"Method getAOTPath","pos":[0,17]}]},{"pos":[18619,18631],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18637,18655],"content":"Method getFileData","linkify":"Method getFileData","nodes":[{"content":"Method getFileData","pos":[0,18]}]},{"pos":[18696,18708],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[18714,18738],"content":"Method notifyFileCreated","linkify":"Method notifyFileCreated","nodes":[{"content":"Method notifyFileCreated","pos":[0,24]}]},{"pos":[18802,18812],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[18814,18818]},{"pos":[18826,18840],"content":"Method setFile","linkify":"Method setFile","nodes":[{"content":"Method setFile","pos":[0,14]}]},{"pos":[18886,18896],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[18898,18906]},{"pos":[18914,18932],"content":"Method setFileData","linkify":"Method setFileData","nodes":[{"content":"Method setFileData","pos":[0,18]}]},{"pos":[18982,18992],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"data","pos":[18994,18998]},{"pos":[19006,19020],"content":"Method getFile","linkify":"Method getFile","nodes":[{"content":"Method getFile","pos":[0,14]}]},{"pos":[19066,19076],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileName","pos":[19078,19086]},{"pos":[19094,19118],"content":"Method notifyFileUpdated","linkify":"Method notifyFileUpdated","nodes":[{"content":"Method notifyFileUpdated","pos":[0,24]}]},{"pos":[19182,19192],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19194,19198]},{"pos":[19206,19225],"content":"Method AOTsetSource","linkify":"Method AOTsetSource","nodes":[{"content":"Method AOTsetSource","pos":[0,19]}]},{"content":"Sets the source code of this node.","pos":[19227,19261]},{"pos":[19330,19340],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"source","pos":[19342,19348]},{"content":"The value that specifies whether the method is static; optional.","pos":[19351,19415]},{"content":"isStatic","pos":[19427,19435]},{"content":"The value that specifies whether the method is static; optional.","pos":[19438,19502]},{"pos":[19509,19516],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This method is overridden by nodes that have source code.","pos":[19518,19575]},{"pos":[19581,19605],"content":"Method notifyFileRenamed","linkify":"Method notifyFileRenamed","nodes":[{"content":"Method notifyFileRenamed","pos":[0,24]}]},{"pos":[19682,19692],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19694,19698]},{"content":"oldName","pos":[19712,19719]},{"pos":[19727,19751],"content":"Method notifyFileDeleted","linkify":"Method notifyFileDeleted","nodes":[{"content":"Method notifyFileDeleted","pos":[0,24]}]},{"pos":[19828,19838],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"node","pos":[19840,19844]},{"content":"aotPath","pos":[19858,19865]},{"pos":[19872,19891],"content":"Class VSProjectNode","linkify":"Class VSProjectNode","nodes":[{"content":"Class VSProjectNode","pos":[0,19]}]},{"content":"The VSProjectNode class represents projects in the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[19939,20088]},{"pos":[20094,20101],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[20107,20115],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[20121,20128],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[20132,20138]},{"content":"Description","pos":[20204,20215]},{"content":"public container extract(<ph id=\"ph1\">\\[</ph>str path<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean extractReferenced<ph id=\"ph4\">\\]</ph>)","pos":[20480,20549],"source":"public container extract(\\[str path\\], \\[boolean extractReferenced\\])"},{"content":"Extracts the whole project to disk.","pos":[20552,20587]},{"content":"public VSProjectFolderNode getContentNode()","pos":[20654,20697]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[20726,20816]},{"content":"public DeployTo getDeployTo()","pos":[20828,20857]},{"content":"Gets value of the deployTo property.","pos":[20900,20936]},{"content":"public VSProjectFolderNode getOutputNode()","pos":[21002,21044]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[21074,21170]},{"content":"public VSProjectFileNode getPrimaryOutputNode()","pos":[21176,21223]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[21248,21345]},{"content":"public str getPrimaryTargetFileName()","pos":[21350,21387]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[21422,21485]},{"content":"public Map getProxies()","pos":[21524,21547]},{"content":"Gets the proxies in this project.","pos":[21596,21629]},{"content":"public container getProxiesContainer()","pos":[21698,21736]},{"content":"Gets the proxies in this project.","pos":[21770,21803]},{"content":"public str getReferencedProjectsInAOT()","pos":[21872,21911]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[21944,22029]},{"content":"public str referencedProjects(<ph id=\"ph1\">\\[</ph>str value<ph id=\"ph2\">\\]</ph>)","pos":[22046,22090],"source":"public str referencedProjects(\\[str value\\])"},{"content":"public void setPrimaryTargetFileName(str targetFileName)","pos":[22220,22276]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[22292,22355]},{"content":"public void extractToSpecificDir(str directory)","pos":[22394,22441]},{"content":"public void setDeployTo(DeployTo deployTo)","pos":[22568,22610]},{"content":"Sets the value of the deployTo property.","pos":[22640,22680]},{"pos":[22745,22759],"content":"Method extract","linkify":"Method extract","nodes":[{"content":"Method extract","pos":[0,14]}]},{"content":"Extracts the whole project to disk.","pos":[22761,22796]},{"pos":[22874,22884],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"path","pos":[22886,22890]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[22893,22968]},{"content":"extractReferenced","pos":[22980,22997]},{"content":"A Boolean value that determines whether to extract the referenced projects.","pos":[23000,23075]},{"pos":[23082,23094],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of paths where the project was extracted.","pos":[23096,23144]},{"pos":[23150,23171],"content":"Method getContentNode","linkify":"Method getContentNode","nodes":[{"content":"Method getContentNode","pos":[0,21]}]},{"content":"Gets the content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23173,23263]},{"pos":[23319,23331],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The content VSProjectFolderNode object that contains the Visual Studio project files.","pos":[23333,23418]},{"pos":[23424,23442],"content":"Method getDeployTo","linkify":"Method getDeployTo","nodes":[{"content":"Method getDeployTo","pos":[0,18]}]},{"content":"Gets value of the deployTo property.","pos":[23444,23480]},{"pos":[23522,23534],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The deployTo property value.","pos":[23536,23564]},{"pos":[23570,23590],"content":"Method getOutputNode","linkify":"Method getOutputNode","nodes":[{"content":"Method getOutputNode","pos":[0,20]}]},{"content":"Gets the output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23592,23688]},{"pos":[23743,23755],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The output VSProjectFolderNode object that contains the Visual Studio project output files.","pos":[23757,23848]},{"pos":[23854,23881],"content":"Method getPrimaryOutputNode","linkify":"Method getPrimaryOutputNode","nodes":[{"content":"Method getPrimaryOutputNode","pos":[0,27]}]},{"content":"Gets the VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[23883,23980]},{"pos":[24040,24052],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A VSProjectFileNode object that represent the primary output of the Visual Studio project.","pos":[24054,24144]},{"pos":[24150,24181],"content":"Method getPrimaryTargetFileName","linkify":"Method getPrimaryTargetFileName","nodes":[{"content":"Method getPrimaryTargetFileName","pos":[0,31]}]},{"content":"Gets the primary target file name of the Visual Studio project.","pos":[24183,24246]},{"pos":[24296,24308],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The primary target file name of the Visual Studio project.","pos":[24310,24368]},{"pos":[24374,24391],"content":"Method getProxies","linkify":"Method getProxies","nodes":[{"content":"Method getProxies","pos":[0,17]}]},{"content":"Gets the proxies in this project.","pos":[24393,24426]},{"pos":[24462,24474],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A map that contains the Class, Enum, and Table keys.","pos":[24476,24528]},{"content":"Each key contains a list of proxies.","pos":[24529,24565]},{"pos":[24571,24597],"content":"Method getProxiesContainer","linkify":"Method getProxiesContainer","nodes":[{"content":"Method getProxiesContainer","pos":[0,26]}]},{"content":"Gets the proxies in this project.","pos":[24599,24632]},{"pos":[24683,24695],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A container that holds the packed representation of a map that contains the Class, Enum, and Table keys.","pos":[24697,24801]},{"content":"Each key contains a list of proxies.","pos":[24802,24838]},{"pos":[24844,24877],"content":"Method getReferencedProjectsInAOT","linkify":"Method getReferencedProjectsInAOT","nodes":[{"content":"Method getReferencedProjectsInAOT","pos":[0,33]}]},{"content":"Gets the AOT paths of the projects that are referenced by this Visual Studio project.","pos":[24879,24964]},{"pos":[25016,25028],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of AOT paths of the projects that are referenced by this Visual Studio project.","pos":[25030,25116]},{"pos":[25122,25147],"content":"Method referencedProjects","linkify":"Method referencedProjects","nodes":[{"content":"Method referencedProjects","pos":[0,25]}]},{"pos":[25202,25212],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"value","pos":[25214,25219]},{"pos":[25228,25240],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[25246,25277],"content":"Method setPrimaryTargetFileName","linkify":"Method setPrimaryTargetFileName","nodes":[{"content":"Method setPrimaryTargetFileName","pos":[0,31]}]},{"content":"Sets the primary target file name of the Visual Studio project.","pos":[25279,25342]},{"pos":[25411,25421],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"targetFileName","pos":[25423,25437]},{"content":"The primary target file name of the Visual Studio project.","pos":[25440,25498]},{"pos":[25504,25531],"content":"Method extractToSpecificDir","linkify":"Method extractToSpecificDir","nodes":[{"content":"Method extractToSpecificDir","pos":[0,27]}]},{"pos":[25591,25601],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"directory","pos":[25603,25612]},{"pos":[25620,25638],"content":"Method setDeployTo","linkify":"Method setDeployTo","nodes":[{"content":"Method setDeployTo","pos":[0,18]}]},{"content":"Sets the value of the deployTo property.","pos":[25640,25680]},{"pos":[25735,25745],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[25747,25755]},{"content":"The deployTo property value.","pos":[25758,25786]},{"pos":[25791,25811],"content":"Class VSProjectsNode","linkify":"Class VSProjectsNode","nodes":[{"content":"Class VSProjectsNode","pos":[0,20]}]},{"content":"The VSProjectNode class is the root of the Microsoft Visual Studio project nodes in the Finance and Operations Application Object Tree (AOT).","pos":[25860,26001]},{"pos":[26007,26014],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[26020,26028],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[26034,26041],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[26045,26051]},{"content":"Description","pos":[26145,26156]},{"content":"public TreeNode AOTfindChild(str name, <ph id=\"ph1\">\\[</ph>int nodeType<ph id=\"ph2\">\\]</ph>)","pos":[26435,26491],"source":"public TreeNode AOTfindChild(str name, \\[int nodeType\\])"},{"content":"Finds the specified child node of this node.","pos":[26535,26579]},{"content":"public VSProjectNode createProjectNode(str name, str projectTypesString, <ph id=\"ph1\">\\[</ph>boolean virtualNode<ph id=\"ph2\">\\]</ph>)","pos":[26630,26727],"source":"public VSProjectNode createProjectNode(str name, str projectTypesString, \\[boolean virtualNode\\])"},{"content":"Creates a new instance of the VSProjectNode class.","pos":[26730,26780]},{"content":"public container getProjectsDeployingTo(DeployTo deployTo)","pos":[26825,26883]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[26925,27004]},{"content":"public container getProjectsModifiedAfter(DateTime timestamp)","pos":[27020,27081]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[27120,27210]},{"content":"public VSProjectTypeNode getTypeNodeFromGuid(str projectTypesString)","pos":[27215,27283]},{"content":"public Object getVSProjectNodeObservable()","pos":[27410,27452]},{"content":"Gets the VSProjectNodeObservable object.","pos":[27510,27550]},{"content":"public void AOTrefresh()","pos":[27605,27629]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[27705,27763]},{"pos":[27803,27822],"content":"Method AOTfindChild","linkify":"Method AOTfindChild","nodes":[{"content":"Method AOTfindChild","pos":[0,19]}]},{"content":"Finds the specified child node of this node.","pos":[27824,27868]},{"pos":[27935,27945],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[27947,27951]},{"content":"nodeType","pos":[27965,27973]},{"pos":[27982,27994],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The specified tree node.","pos":[27996,28020]},{"pos":[28026,28050],"content":"Method createProjectNode","linkify":"Method createProjectNode","nodes":[{"content":"Method createProjectNode","pos":[0,24]}]},{"content":"Creates a new instance of the VSProjectNode class.","pos":[28052,28102]},{"pos":[28210,28220],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[28222,28226]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28229,28303]},{"content":"In this case, the node will not be persisted in the Finance and Operations Store.","pos":[28304,28385]},{"content":"projectTypesString","pos":[28397,28415]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28418,28492]},{"content":"In this case, the node will not be persisted in the Finance and Operations Store.","pos":[28493,28574]},{"content":"virtualNode","pos":[28586,28597]},{"content":"A Boolean value that indicates whether the node is created only in memory.","pos":[28600,28674]},{"content":"In this case, the node will not be persisted in the Finance and Operations Store.","pos":[28675,28756]},{"pos":[28763,28775],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNode object that is created.","pos":[28777,28818]},{"pos":[28824,28853],"content":"Method getProjectsDeployingTo","linkify":"Method getProjectsDeployingTo","nodes":[{"content":"Method getProjectsDeployingTo","pos":[0,29]}]},{"content":"Gets a list of VSProjectNode objects that have the specified deployTo property.","pos":[28855,28934]},{"pos":[29005,29015],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"deployTo","pos":[29017,29025]},{"content":"The value of the deployTo property.","pos":[29028,29063]},{"pos":[29070,29082],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29084,29116]},{"pos":[29122,29153],"content":"Method getProjectsModifiedAfter","linkify":"Method getProjectsModifiedAfter","nodes":[{"content":"Method getProjectsModifiedAfter","pos":[0,31]}]},{"content":"Gets a list of VSProjectNode objects that were modified after the specified date and time.","pos":[29155,29245]},{"pos":[29319,29329],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"timestamp","pos":[29331,29340]},{"content":"The date and time as a DB<ph id=\"ph1\">\\_</ph>DATETIME<ph id=\"ph2\">\\_</ph>TYPE value.","pos":[29343,29391],"source":"The date and time as a DB\\_DATETIME\\_TYPE value."},{"pos":[29398,29410],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"A list of VSProjectNode objects.","pos":[29412,29444]},{"pos":[29450,29476],"content":"Method getTypeNodeFromGuid","linkify":"Method getTypeNodeFromGuid","nodes":[{"content":"Method getTypeNodeFromGuid","pos":[0,26]}]},{"pos":[29557,29567],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projectTypesString","pos":[29569,29587]},{"pos":[29596,29608],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[29614,29647],"content":"Method getVSProjectNodeObservable","linkify":"Method getVSProjectNodeObservable","nodes":[{"content":"Method getVSProjectNodeObservable","pos":[0,33]}]},{"content":"Gets the VSProjectNodeObservable object.","pos":[29649,29689]},{"pos":[29744,29756],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"content":"The VSProjectNodeObservable object.","pos":[29758,29793]},{"pos":[29800,29807],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Observers can register with this and get notified of CRUD operations on Visual Studio projects.","pos":[29809,29904]},{"pos":[29910,29927],"content":"Method AOTrefresh","linkify":"Method AOTrefresh","nodes":[{"content":"Method AOTrefresh","pos":[0,17]}]},{"content":"Updates the node with the latest changes to the .aod file.","pos":[29929,29987]},{"pos":[30022,30045],"content":"Class VSProjectTypeNode","linkify":"Class VSProjectTypeNode","nodes":[{"content":"Class VSProjectTypeNode","pos":[0,23]}]},{"content":"The VSProjectTypeNode class represents project types in the Visual Studio Project nodes in the AOT.","pos":[30092,30191]},{"pos":[30197,30204],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30210,30218],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30224,30231],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30235,30241]},{"content":"Description","pos":[30244,30255]},{"pos":[30287,30296],"content":"Class VSS","linkify":"Class VSS","nodes":[{"content":"Class VSS","pos":[0,9]}]},{"pos":[30331,30338],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[30344,30352],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[30358,30365],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[30369,30375]},{"content":"Description","pos":[30481,30492]},{"content":"public boolean connect()","pos":[30685,30709]},{"content":"public boolean connected()","pos":[30843,30869]},{"content":"public boolean disconnect()","pos":[31001,31028]},{"content":"public container getCheckedoutFiles()","pos":[31159,31196]},{"content":"public container getConnectionInfo()","pos":[31317,31353]},{"content":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, <ph id=\"ph1\">\\[</ph>boolean completePath<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>)","pos":[31475,31579],"source":"public VSSItem getVSSItem(str vssItemPath, str localFilePath, \\[boolean completePath\\], \\[int version\\])"},{"content":"public boolean init(str vssIni, str vssPrjRoot, str vssWorkingFolder, str vssUser, str vssPwd)","pos":[31633,31727]},{"content":"public VSSItem newSubProject(str name, str localPath)","pos":[31791,31844]},{"content":"public Map synchronizeProjects(<ph id=\"ph1\">\\[</ph>Set projects<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean force<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>boolean delLocalFiles<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str label<ph id=\"ph8\">\\]</ph>)","pos":[31949,32058],"source":"public Map synchronizeProjects(\\[Set projects\\], \\[boolean force\\], \\[boolean delLocalFiles\\], \\[str label\\])"},{"content":"public void new()","pos":[32107,32124]},{"content":"Initializes an instance of the VSS class.","pos":[32219,32260]},{"pos":[32268,32282],"content":"Method connect","linkify":"Method connect","nodes":[{"content":"Method connect","pos":[0,14]}]},{"pos":[32319,32331],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32337,32353],"content":"Method connected","linkify":"Method connected","nodes":[{"content":"Method connected","pos":[0,16]}]},{"pos":[32392,32404],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32410,32427],"content":"Method disconnect","linkify":"Method disconnect","nodes":[{"content":"Method disconnect","pos":[0,17]}]},{"pos":[32467,32479],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32485,32510],"content":"Method getCheckedoutFiles","linkify":"Method getCheckedoutFiles","nodes":[{"content":"Method getCheckedoutFiles","pos":[0,25]}]},{"pos":[32560,32572],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32578,32602],"content":"Method getConnectionInfo","linkify":"Method getConnectionInfo","nodes":[{"content":"Method getConnectionInfo","pos":[0,24]}]},{"pos":[32651,32663],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32669,32686],"content":"Method getVSSItem","linkify":"Method getVSSItem","nodes":[{"content":"Method getVSSItem","pos":[0,17]}]},{"pos":[32799,32809],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssItemPath","pos":[32811,32822]},{"content":"localFilePath","pos":[32836,32849]},{"content":"completePath","pos":[32863,32875]},{"content":"version","pos":[32889,32896]},{"pos":[32905,32917],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[32923,32934],"content":"Method init","linkify":"Method init","nodes":[{"content":"Method init","pos":[0,11]}]},{"pos":[33041,33051],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"vssIni","pos":[33053,33059]},{"content":"vssPrjRoot","pos":[33073,33083]},{"content":"vssWorkingFolder","pos":[33097,33113]},{"content":"vssUser","pos":[33127,33134]},{"content":"vssPwd","pos":[33148,33154]},{"pos":[33163,33175],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33181,33201],"content":"Method newSubProject","linkify":"Method newSubProject","nodes":[{"content":"Method newSubProject","pos":[0,20]}]},{"pos":[33267,33277],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[33279,33283]},{"content":"localPath","pos":[33297,33306]},{"pos":[33315,33327],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33333,33359],"content":"Method synchronizeProjects","linkify":"Method synchronizeProjects","nodes":[{"content":"Method synchronizeProjects","pos":[0,26]}]},{"pos":[33473,33483],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"projects","pos":[33485,33493]},{"content":"force","pos":[33507,33512]},{"content":"delLocalFiles","pos":[33526,33539]},{"content":"label","pos":[33553,33558]},{"pos":[33567,33579],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[33585,33595],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes an instance of the VSS class.","pos":[33597,33638]},{"pos":[33666,33679],"content":"Class VSSItem","linkify":"Class VSSItem","nodes":[{"content":"Class VSSItem","pos":[0,13]}]},{"pos":[33718,33725],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[33731,33739],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[33745,33752],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[33756,33762]},{"content":"Description","pos":[33843,33854]},{"content":"public boolean add(<ph id=\"ph1\">\\[</ph>boolean keepCheckedout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>str comment<ph id=\"ph4\">\\]</ph>)","pos":[34036,34099],"source":"public boolean add(\\[boolean keepCheckedout\\], \\[str comment\\])"},{"content":"public boolean checkin(<ph id=\"ph1\">\\[</ph>str comment<ph id=\"ph2\">\\]</ph>)","pos":[34176,34215],"source":"public boolean checkin(\\[str comment\\])"},{"content":"public boolean checkout(<ph id=\"ph1\">\\[</ph>boolean allowMultipleCheckout<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>boolean replaceLocal<ph id=\"ph4\">\\]</ph>)","pos":[34316,34400],"source":"public boolean checkout(\\[boolean allowMultipleCheckout\\], \\[boolean replaceLocal\\])"},{"content":"public boolean delete()","pos":[34456,34479]},{"content":"public boolean destroy()","pos":[34596,34620]},{"content":"public Map get(<ph id=\"ph1\">\\[</ph>boolean force<ph id=\"ph2\">\\]</ph>, <ph id=\"ph3\">\\[</ph>int version<ph id=\"ph4\">\\]</ph>, <ph id=\"ph5\">\\[</ph>str label<ph id=\"ph6\">\\]</ph>, <ph id=\"ph7\">\\[</ph>str localFile<ph id=\"ph8\">\\]</ph>)","pos":[34736,34820],"source":"public Map get(\\[boolean force\\], \\[int version\\], \\[str label\\], \\[str localFile\\])"},{"content":"public str getActionText()","pos":[34876,34902]},{"content":"public container getCheckedOutTo()","pos":[35016,35050]},{"content":"public int getCheckoutVersion()","pos":[35156,35187]},{"content":"public container getHistory()","pos":[35296,35325]},{"content":"public ComInterface getIUnknown()","pos":[35436,35469]},{"content":"public int getVersionNo()","pos":[35576,35601]},{"content":"public str getVSSPath()","pos":[35716,35739]},{"content":"public boolean isCheckedOut()","pos":[35856,35885]},{"content":"public boolean isRenamed()","pos":[35996,36022]},{"content":"public str name(str newName)","pos":[36136,36164]},{"content":"public boolean rename(str newName)","pos":[36276,36310]},{"content":"public boolean undoCheckout()","pos":[36416,36445]},{"content":"private void new()","pos":[36556,36574]},{"content":"Initializes a new instance of the VSSItem class.","pos":[36643,36691]},{"pos":[36699,36709],"content":"Method add","linkify":"Method add","nodes":[{"content":"Method add","pos":[0,10]}]},{"pos":[36781,36791],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"keepCheckedout","pos":[36793,36807]},{"content":"comment","pos":[36821,36828]},{"pos":[36837,36849],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36855,36869],"content":"Method checkin","linkify":"Method checkin","nodes":[{"content":"Method checkin","pos":[0,14]}]},{"pos":[36919,36929],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"comment","pos":[36931,36938]},{"pos":[36947,36959],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[36965,36980],"content":"Method checkout","linkify":"Method checkout","nodes":[{"content":"Method checkout","pos":[0,15]}]},{"pos":[37073,37083],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"allowMultipleCheckout","pos":[37085,37106]},{"content":"replaceLocal","pos":[37120,37132]},{"pos":[37141,37153],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37159,37172],"content":"Method delete","linkify":"Method delete","nodes":[{"content":"Method delete","pos":[0,13]}]},{"pos":[37208,37220],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37226,37240],"content":"Method destroy","linkify":"Method destroy","nodes":[{"content":"Method destroy","pos":[0,14]}]},{"pos":[37277,37289],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37295,37305],"content":"Method get","linkify":"Method get","nodes":[{"content":"Method get","pos":[0,10]}]},{"pos":[37394,37404],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"force","pos":[37406,37411]},{"content":"version","pos":[37425,37432]},{"content":"label","pos":[37446,37451]},{"content":"localFile","pos":[37465,37474]},{"pos":[37483,37495],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37501,37521],"content":"Method getActionText","linkify":"Method getActionText","nodes":[{"content":"Method getActionText","pos":[0,20]}]},{"pos":[37560,37572],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37578,37600],"content":"Method getCheckedOutTo","linkify":"Method getCheckedOutTo","nodes":[{"content":"Method getCheckedOutTo","pos":[0,22]}]},{"pos":[37647,37659],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37665,37690],"content":"Method getCheckoutVersion","linkify":"Method getCheckoutVersion","nodes":[{"content":"Method getCheckoutVersion","pos":[0,25]}]},{"pos":[37734,37746],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37752,37769],"content":"Method getHistory","linkify":"Method getHistory","nodes":[{"content":"Method getHistory","pos":[0,17]}]},{"pos":[37811,37823],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37829,37847],"content":"Method getIUnknown","linkify":"Method getIUnknown","nodes":[{"content":"Method getIUnknown","pos":[0,18]}]},{"pos":[37893,37905],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37911,37930],"content":"Method getVersionNo","linkify":"Method getVersionNo","nodes":[{"content":"Method getVersionNo","pos":[0,19]}]},{"pos":[37968,37980],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[37986,38003],"content":"Method getVSSPath","linkify":"Method getVSSPath","nodes":[{"content":"Method getVSSPath","pos":[0,17]}]},{"pos":[38039,38051],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38057,38076],"content":"Method isCheckedOut","linkify":"Method isCheckedOut","nodes":[{"content":"Method isCheckedOut","pos":[0,19]}]},{"pos":[38118,38130],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38136,38152],"content":"Method isRenamed","linkify":"Method isRenamed","nodes":[{"content":"Method isRenamed","pos":[0,16]}]},{"pos":[38191,38203],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38209,38220],"content":"Method name","linkify":"Method name","nodes":[{"content":"Method name","pos":[0,11]}]},{"pos":[38261,38271],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38273,38280]},{"pos":[38289,38301],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38307,38320],"content":"Method rename","linkify":"Method rename","nodes":[{"content":"Method rename","pos":[0,13]}]},{"pos":[38367,38377],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"newName","pos":[38379,38386]},{"pos":[38395,38407],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38413,38432],"content":"Method undoCheckout","linkify":"Method undoCheckout","nodes":[{"content":"Method undoCheckout","pos":[0,19]}]},{"pos":[38474,38486],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[38492,38502],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the VSSItem class.","pos":[38504,38552]}]}