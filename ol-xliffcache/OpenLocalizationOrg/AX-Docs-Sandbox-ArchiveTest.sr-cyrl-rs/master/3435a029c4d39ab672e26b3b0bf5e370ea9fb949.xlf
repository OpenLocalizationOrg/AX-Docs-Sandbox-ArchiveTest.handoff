<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="sr-cyrl-rs">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3435a029c4d39ab672e26b3b0bf5e370ea9fb949</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dev-itpro\user-interface\build-extensible-control.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">developer-content</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11d9df7b1937d51cb6cfd71aa3842d7b229f547c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">651dce75c95913b207bf35794b86c84d11d761f2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Build an extensible control</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This topic describes how to create new application controls that have a property sheet in Visual Studio and have server-side business logic.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Build an extensible control</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes how to create new application controls that have a property sheet in Visual Studio and have server-side business logic.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For this tutorial, you must access the environment by using Remote Desktop, and you must be provisioned as an administrator on the instance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access development instances<ept id="p1">](..\dev-tools\access-instances.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Overview</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Control Extensibility Framework lets you create new application controls.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use the same tools that Microsoft uses to build controls that are already present in the program, such as the chart control.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Three important artifacts are involved in the process of developing an extensible control:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The X++ build class<ept id="p1">**</ept> – The build class lets a developer define the properties that appear in the Microsoft Visual Studio property sheet for the control.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The developer can also define the modeling behavior for the control when it's used in the form designer.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The build class is consumed by the run-time class to initialize the state of the control based on the value of properties in the property sheet.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The X++ run-time class<ept id="p1">**</ept> – The run-time class lets a developer define server-side business logic and data access patterns for an extensible control.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Two concepts that are specific to building extensible controls are the <bpt id="p1">*</bpt>properties<ept id="p1">*</ept> and <bpt id="p2">*</bpt>commands<ept id="p2">*</ept> that the X++ class defines.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each property and command that is defined is serialized into a JavaScript view model at run time, and can be consumed by the client parts of the extensible control (the HTML and JavaScript).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These properties and commands are the main channels for moving information between the server-side and client-side parts of the control.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The control HTML and JavaScript<ept id="p1">**</ept> – Each control uses HTML, JavaScript, and CSS files to define control visualization and client-side interaction patterns.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By using the Microsoft Dynamics HTML binding syntax together with jQuery, a developer can consume the properties and commands that are defined in X++ to design powerful data-driven UI.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All three artifacts of extensible control development are explained in more detail in the following sections.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Key concepts</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Defining an extensible control's design-time behavior</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Defining an extensible control's run-time behavior</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Defining an extensible control's view by using HTML and CSS</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Defining an extensible control's view model by using JavaScript</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Setup</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Import the tutorial project and transactional data</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use Visual Studio to import the tutorial project.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The tutorial project includes the artifacts that you will use to complete this tutorial.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use Visual Studio to open the FMTutorial project and load the data for the tutorial.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You will use the <bpt id="p1">**</bpt>FMTDataHelper<ept id="p1">**</ept> class to load data for the Fleet Management tutorial.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Download the Fleet Management sample from <bpt id="p1">&lt;</bpt>https://github.com/Microsoft/FMLab<ept id="p1">&gt;</ept>, save it to <bpt id="p2">**</bpt>C:<ept id="p2">**</ept>, and unzip it.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>On the desktop, double-click the Visual Studio shortcut to open the development environment.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>On the **Dynamics 365 **menu, click <bpt id="p1">**</bpt>Import Project<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Import Project<ept id="p1">**</ept> dialog box, next to the <bpt id="p2">**</bpt>File name<ept id="p2">**</ept> text box, click the ellipsis button (...).</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Select the file to import<ept id="p1">**</ept> dialog box, browse to <bpt id="p2">**</bpt>C:<ph id="ph1">\\</ph>FMLab<ept id="p2">**</ept>, click <bpt id="p3">**</bpt>FMTutorialDataModel.axpp<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Open<ept id="p4">**</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Project file location<ept id="p1">**</ept> field, enter <bpt id="p2">**</bpt>C:<ph id="ph1">\\</ph>FMLab<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Overwrite Elements<ept id="p1">**</ept> check box and the <bpt id="p2">**</bpt>Current solution<ept id="p2">**</ept> option.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following screen shot shows the completed <bpt id="p1">**</bpt>Import Project<ept id="p1">**</ept> dialog box.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Ext1<ept id="p1">](./media/ext1.png)](./media/ext1.png)</ept></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, under the <bpt id="p1">**</bpt>FMTutorial<ept id="p1">**</ept> project, expand <bpt id="p2">**</bpt>Classes<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>FMTDataHelper<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Set as Startup Object<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>BUILD<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Rebuild Solution<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You use the rebuild to make sure that all the files in the project are built, regardless of timestamps.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can view the build progress in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the build is completed, press Ctrl+F5 to run the project.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Login<ept id="p1">**</ept> form closes when authentication succeeds, and then the data is loaded.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Set up aggregate data</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Use FMTAggregateMeasurements to populate the Microsoft SQL Server Analysis Services database with aggregate data.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> These steps must be completed immediately after you use the <bpt id="p2">**</bpt>FMTDataHelper<ept id="p2">**</ept> class to import data.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You may <bpt id="p1">**</bpt>NOT<ept id="p1">**</ept> need to do these steps if the <bpt id="p2">[</bpt>aggregate measure is "InMemoryRealTime"<ept id="p2">](../analytics/model-aggregate-data.md)</ept>, depending on what tutorial files you have.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, under <bpt id="p1">**</bpt>Analytics<ept id="p1">**</ept>, double-click <bpt id="p2">**</bpt>FMTAggregateMeasurement<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the designer, right-click <bpt id="p1">**</bpt>FMTAggregateMeasurement<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Deploy and Process<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Preview the clerk workspace</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Before you begin to build the contact control, look at the appearance of the current implementation.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the following sections, you will use the Control Extensibility Framework to enrich the visualization of the controls and the form.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, expand <bpt id="p1">**</bpt>Forms<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>FMTClerkWorkspace<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Set as Startup Object<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Press Ctrl+F5 to open the <bpt id="p1">**</bpt>Fleet management clerk<ept id="p1">**</ept> page in Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>As the following screen shot shows, the data on this page appears as a simple grid in a list style that contains several string and date controls.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Ext2<ept id="p1">](./media/ext2-1024x515.png)](./media/ext2.png)</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Exit Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Modify the build class for the contact control</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To save time, you will work on a partially completed extensible control that is named the contact control.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You will extend the contact control to complete its design, run-time, and visualization behaviors.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The partially completed contact control already supports multiple title fields, subfields, and action buttons.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, it doesn't currently support an image.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To add image support, you must extend the design experience for the contact control.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You will add a data field that can specify image data.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Technical overview</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To see an example of a build class, in Solution Explorer, expand <bpt id="p1">**</bpt>Classes<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>FMTBuildContactControl<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>View Code<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The class code appears in the code editor.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FMTBuildContactControl<ept id="p1">**</ept> is the build class for the contact control.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For each extensible control, the build class defines the properties that the control shows in the property sheet.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The build class also defines the modeling experience for the control in the Visual Studio form designer.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>There are three primary design-time behaviors that you can define for an extensible control.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Each behavior is declaratively defined by using a <bpt id="p1">**</bpt>FormDesign<ept id="p1">**</ept> attribute.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Here are the design-time behaviors that you can define:</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Name<ept id="p1">**</ept> – You can specify the control name that appears in the form designer when you add the control to a form.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To specify the name, add a <bpt id="p1">**</bpt>FormDesignControlAttribute<ept id="p1">**</ept> attribute to the build class declaration of the extensible control.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, the following declaration of the <bpt id="p1">**</bpt>FMTBuildContactControl<ept id="p1">**</ept> class shows the attribute.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x1<ept id="p1">](./media/x1.png)](./media/x1.png)</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Designer properties<ept id="p1">**</ept> – These are the properties that you see in the property sheet when you add the control to a form.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>There are several attributes that let you add various types of designer properties.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">**</bpt>FormDesignPropertyAttribute<ept id="p1">**</ept> attribute adds a property to the property sheet, and the property name and the section are supplied as arguments to the attribute.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For example, the following code adds the <bpt id="p1">**</bpt>Action Name<ept id="p1">**</ept> property to the <bpt id="p2">**</bpt>FMTContactControlAction<ept id="p2">**</ept> class.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x2<ept id="p1">](./media/x2.png)](./media/x2.png)</ept></source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following screen shot shows how this property appears in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> pane in Visual Studio.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Ext3<ept id="p1">](./media/ext3.png)](./media/ext3.png)</ept></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Child design components<ept id="p1">**</ept> – These are child nodes that you see after you add the control to a form.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>There are two types of child design components: leaf and leaf collection.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A leaf is defined by using a <bpt id="p1">**</bpt>FormDesignComponentAttribute<ept id="p1">**</ept> attribute on an X++ method that accepts or returns another build class.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The build class determines the properties that the leaf has in the property sheet.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A leaf collection is defined by using a <bpt id="p1">**</bpt>FormDesignComponentCollectionAttribute<ept id="p1">**</ept> attribute.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The allowable leaf types for the collection are defined by using <bpt id="p1">**</bpt>FormDesignComponentValidChildAttribute<ept id="p1">**</ept> attributes.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, the following code adds a leaf collection that is named <bpt id="p1">**</bpt>Actions<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>FMTBuildContactControl<ept id="p2">**</ept> class.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x3<ept id="p1">](./media/x3.png)](./media/x3.png)</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following screen shot shows how the specified child design component appears when you add the control to a form.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Ext4<ept id="p1">](./media/ext4.png)](./media/ext4.png)</ept></source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Tutorial steps</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Check that the code for the <bpt id="p1">**</bpt>FMTBuildContactControl<ept id="p1">**</ept> class appears in the code editor.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If it doesn't, in Solution Explorer, expand <bpt id="p1">**</bpt>Classes<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>FMTBuildContactControl<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>View Code<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Add a child design component to the FMTBuildContactControl class.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A child design component lets a developer who places the control in a form to specify the image that appears on the control.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>In this step, you will add the <bpt id="p1">**</bpt>FormDesignComponentAttribute<ept id="p1">**</ept> attribute to create a new entry in the property sheet.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You will then add the <bpt id="p1">**</bpt>FormDesignPropertyDataFieldAttribute<ept id="p1">**</ept> attribute, which indicates that the new designer property enables the selection of a data field.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Add the highlighted code that follows to the declarations for the class.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This code adds the <bpt id="p1">**</bpt>FormBindingDataField<ept id="p1">**</ept> field to the X++ that the <bpt id="p2">**</bpt>FMTBuildContactControl<ept id="p2">**</ept> class is using.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x4<ept id="p1">](./media/x4.png)](./media/x4.png)</ept></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p1">**</bpt>FMTBuildContactControl<ept id="p1">**</ept> class.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Add this method after the designer property for the data source.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x5<ept id="p1">](./media/x5.png)](./media/x5.png)</ept></source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The child design component will show the properties that are available on the <bpt id="p2">**</bpt>FormBindingDataField<ept id="p2">**</ept> build class.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This is appropriate, because you want to enable image data binding to a data field and data source.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This is all that is required to add a designer property to the build class of the contact control.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Press Ctrl+S to save your changes, and then close the code editor.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click <bpt id="p1">**</bpt>FMTutorial<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Build<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>FMTPickingUpTodayPart<ept id="p1">**</ept> form isn't already open, expand <bpt id="p2">**</bpt>Forms<ept id="p2">**</ept>, and then double-click <bpt id="p3">**</bpt>FMTPickingUpTodayPart<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The form opens in the form designer.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In the form designer, expand <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>PickingUpTodayGrid<ept id="p2">**</ept>, and then select and delete the controls that currently appear in the grid.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>PickingUpTodayGrid<ept id="p1">**</ept>, point to <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>FMTContactControl<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept> node, and notice that <bpt id="p2">**</bpt>Image<ept id="p2">**</ept> appears as a new child design component.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following illustration shows the contact control in the form designer.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Ext5<ept id="p1">](./media/ext5.png)](./media/ext5.png)</ept></source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You must also update the run-time class for the contact control to consume the design-time changes.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You will revisit adding the control to the form and specifying data bindings and property values later.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Press Ctrl+S to save your changes, and then close the form designer.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Modify the runtime class for the contact control</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Next, you must modify the run-time class to read the data source and data field for the image from the build class.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You must also create a run-time property, so that the image data is available to the control's client HTML and JavaScript.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Technical overview</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To see an example of the run-time class, in Solution Explorer, expand <bpt id="p1">**</bpt>Classes<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>FMTContactControl<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>View Code<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The class opens in the code editor.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept> is the run-time class for the contact control.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The class defines the run-time behavior of the contact control.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The run-time class typically contains X++ for data access or business logic.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>In addition, there are two primary run-time behaviors that are related to extensible controls that you define in the run-time class.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Each behavior is declaratively defined by using an attribute.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Run-time properties of the control<ept id="p1">**</ept> – These properties can be of two types:</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Static properties<ept id="p1">*</ept>, which are set via code or initialized with values from designer properties.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Bindable properties<ept id="p1">*</ept>, for which the run-time value is determined by a binding to a data source and data field combination.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Run-time properties are declared by using <bpt id="p1">**</bpt>FormPropertyAttribute<ept id="p1">**</ept> attributes.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example shows a property declaration in <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x6<ept id="p1">](./media/x6.png)](./media/x6.png)</ept></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>FormPropertyAttribute<ept id="p1">**</ept> attribute accepts two arguments:</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The first argument indicates to the framework the kind of JavaScript view model property to create.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If you supply <bpt id="p1">**</bpt>BindableValue<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>ReferenceProperty<ept id="p2">**</ept> is generated in the JavaScript view model.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>ReferenceProperty<ept id="p1">**</ept> updates itself when data changes in the data source.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If you supply <bpt id="p1">**</bpt>Value<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>ValueProperty<ept id="p2">**</ept> is generated in the JavaScript view model.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A developer must write code to update the value of a <bpt id="p1">**</bpt>ValueProperty<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The second argument of the attribute sets the name for the property as it will be defined in the JavaScript view model.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Don't be concerned if <bpt id="p2">**</bpt>TitleFields<ept id="p2">**</ept> don't seem to be bound to data because the example uses a <bpt id="p3">**</bpt>Value<ept id="p3">**</ept> property.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>TitleFields<ept id="p1">**</ept> property returns a List that contains <bpt id="p2">**</bpt>FormBindingDataFields<ept id="p2">**</ept>, each of which is data-bound.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The X++ method that has the <bpt id="p1">**</bpt>FormPropertyAttribute<ept id="p1">**</ept> attribute is a simple getter/setter that uses a <bpt id="p2">**</bpt>FormProperty<ept id="p2">**</ept> as the backing field.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>FormProperty<ept id="p1">**</ept> contains the logic for updating the property, based on value or data source changes.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>It also serves as the backing field for the property.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Run-time commands for the control<ept id="p1">**</ept> – Commands enable the client parts of the control to trigger X++ logic, based on client-side user interactions.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Commands are declared by using a <bpt id="p1">**</bpt>FormCommandAttribute<ept id="p1">**</ept> attribute.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The single argument specifies the name of the command as it will appear in the JavaScript view model.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The following example shows a command declaration in <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x7<ept id="p1">](./media/x7.png)](./media/x7.png)</ept></source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Tutorial steps</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Verify that the <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept> class is open in the code editor.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If it isn't, in Solution Explorer, expand <bpt id="p1">**</bpt>Classes<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>FMTContactControl<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>View Code<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Add a run-time property for the image data to <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept> class, declare a <bpt id="p2">**</bpt>FormProperty<ept id="p2">**</ept> that is named <bpt id="p3">**</bpt>imageFieldProperty<ept id="p3">**</ept>, as shown by the highlighted line in the following example.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x8<ept id="p1">](./media/x8.png)](./media/x8.png)</ept></source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Add the following X++ method after the <bpt id="p1">**</bpt>parmDataSource<ept id="p1">**</ept> X++ method.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The new method will serve as the getter/setter for <bpt id="p1">**</bpt>imageFieldProperty<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> You don't return the value of the image data here, because the framework will let you bind to the data in the client, as you will see later.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x9<ept id="p1">](./media/x9.png)](./media/x9.png)</ept></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Initialize <bpt id="p1">**</bpt>imageFieldProperty<ept id="p1">**</ept> by adding the highlighted line in the following example to the new method of <bpt id="p2">**</bpt>FMTContactControl<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x10<ept id="p1">](./media/x10.png)](./media/x10.png)</ept></source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Now supply the binding to <bpt id="p1">**</bpt>imageFieldProperty<ept id="p1">**</ept> by adding the highlighted line in the following example to the <bpt id="p2">**</bpt>applyBuild<ept id="p2">**</ept> method of <bpt id="p3">**</bpt>FMTContactControl<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x11<ept id="p1">](./media/x11.png)](./media/x11.png)</ept></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Press Ctrl+S to save the changes.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>You've now finished modifying the run-time class.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Next, you will update the HTML view to display the image.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Modify the HTML for the contact control</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The HTML of the contact control is where you add UI elements, such as text boxes, images, and buttons, that interact with the properties and commands that are defined in the run-time class.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Extensible controls use a declarative HTML-based binding syntax to bind HTML element behaviors to properties, commands, JavaScript expressions, and JavaScript functions.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>These bindings are parsed at run time, and the resulting HTML is injected into the DOM.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The following section explains a few of the bindings that are used in FMTContactControl.htm to add an image to the control.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Technical overview</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>bind<ept id="p1">**</ept> attribute, together with the <bpt id="p2">**</bpt>text<ept id="p2">**</ept> binding handler enables binding to the <bpt id="p3">**</bpt>text<ept id="p3">**</ept> property of an HTML element.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For example, the following HTML uses the <bpt id="p1">**</bpt>bind<ept id="p1">**</ept> attribute and the <bpt id="p2">**</bpt>text<ept id="p2">**</ept> binding handler.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x12<ept id="p1">](./media/x12.png)](./media/x12.png)</ept></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The preceding HTML is equivalent to the following HTML.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x13<ept id="p1">](./media/x13.png)](./media/x13.png)</ept></source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You will see the benefits of the binding when you bind to properties or commands.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>For example, if you have a view model property that is named <bpt id="p1">**</bpt>FirstName<ept id="p1">**</ept>, you can bind to it as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Here, <bpt id="p1">**</bpt>$data<ept id="p1">**</ept> is the object that contains the view model properties and commands.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x14<ept id="p1">](./media/x14.png)](./media/x14.png)</ept></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The HTML output changes, based on the current value of <bpt id="p1">**</bpt>FirstName<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The following example shows the output if <bpt id="p1">**</bpt>FirstName<ept id="p1">**</ept> has a value of <bpt id="p2">**</bpt>John<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt><ph id="ph1">![</ph>x15<ept id="p2">](./media/x15.png)**</ept><ept id="p1">](./media/x15.png)</ept></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">**</bpt>FirstName<ept id="p1">**</ept> property changes for some reason (for example, X++ or JavaScript was run to update the property), the binding is automatically reevaluated, and the HTML output immediately reflects the change.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>All binding handlers follow this pattern of automatic reevaluation when the binding value changes.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>if<ept id="p1">**</ept> and <bpt id="p2">**</bpt>foreach<ept id="p2">**</ept> binding handlers are unique in that they perform DOM manipulation based on the binding values.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>To conditionally add an element to the DOM, use the <bpt id="p1">**</bpt>if<ept id="p1">**</ept> binding handler and supply the condition under which the element should be added.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>If the condition is false, the element isn't added to or removed from the DOM, and no bindings that are associated with the element are evaluated.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Of course, if the binding value that is supplied to <bpt id="p1">**</bpt>if<ept id="p1">**</ept> changes, an element that was removed will be added to the DOM again, and the bindings will be evaluated.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>To iterate over an array of elements, use the <bpt id="p1">**</bpt>foreach<ept id="p1">**</ept> binding.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This is useful when nearly identical HTML elements must be displayed.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The following table shows some of the other binding handlers.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Binding handler</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>css</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Specify a CSS class, based on a condition.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>style</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Apply CSS styles, and bind the values to properties.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>attr</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Bind an HTML attribute.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>In addition to using HTML elements inside the HTML for your control, you can also add framework controls such as CheckBox, Group, Tile, SectionContainer, Label, and List to your control.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Instead of binding handlers, each framework control enables binding values to be passed to its view model properties.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For example, a <bpt id="p1">**</bpt>CommandButton<ept id="p1">**</ept> is added by using the <bpt id="p2">**</bpt>role<ept id="p2">**</ept> attribute.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x16<ept id="p1">](./media/x16.png)](./media/x16.png)</ept></source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>In this case, <bpt id="p1">**</bpt>ActionCommand<ept id="p1">**</ept> can be supplied with a JavaScript function.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x17<ept id="p1">](./media/x17.png)](./media/x17.png)</ept></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>One additional feature of the HTML binding syntax is the context-aware nature of bindings.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>By default, the context of all HTML elements is set to the JavaScript view model for the control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>However, the context changes in certain circumstances.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>For example, for a <bpt id="p1">**</bpt>foreach<ept id="p1">**</ept> binding, every child element that is nested inside the hosting element (the element that has the <bpt id="p2">**</bpt>foreach<ept id="p2">**</ept> binding) obtains the current item in the loop as the context.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>To access the context of the parent element when you're inside of a <bpt id="p1">**</bpt>foreach<ept id="p1">**</ept> binding, use the <bpt id="p2">**</bpt>$parent<ept id="p2">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The following example from FTMContactControl.htm will help make this point clearer.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x18<ept id="p1">](./media/x18.png)](./media/x18.png)</ept></source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Actions<ept id="p1">**</ept> is a List property that is available on the control's JavaScript view model.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This property was defined in the <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept> run-time class.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Each action in the <bpt id="p1">**</bpt>Actions<ept id="p1">**</ept> list has <bpt id="p2">**</bpt>Data Source<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Data Field<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Action Name<ept id="p4">**</ept> properties.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Within the <bpt id="p1">**</bpt>foreach<ept id="p1">**</ept> loop, <bpt id="p2">**</bpt>$data<ept id="p2">**</ept> refers to the current action, and <bpt id="p3">**</bpt>$data.ActionName<ept id="p3">**</ept> cam retrieve the <bpt id="p4">**</bpt>ActionName<ept id="p4">**</ept> property from the current action in the loop.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Within the loop, view model properties on the control aren't accessible via <bpt id="p1">**</bpt>$data<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Instead, <bpt id="p1">**</bpt>$parent<ept id="p1">**</ept> can be used to retrieve the view model properties.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Tutorial steps</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Add the HTML for the <bpt id="p1">**</bpt>ImageField<ept id="p1">**</ept> property that you created in the run-time class.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, expand the <bpt id="p1">**</bpt>Resources<ept id="p1">**</ept> folder under the <bpt id="p2">**</bpt>FMTutorial<ept id="p2">**</ept> project, and double-click <bpt id="p3">**</bpt>FMTContactControlHTM<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The FMTContactControl.htm file opens in the HTML editor.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Add the following HTML to the FMTContactControl.htm HTML.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The gray text is shown just for placement context.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x19<ept id="p1">](./media/x19.png)](./media/x19.png)</ept></source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Press Ctrl+S to save the changes to FMTContactControl.htm.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>In the preceding example, you use the framework image control to render the image.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Value<ept id="p1">**</ept> is a property that is defined on the Image control.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This property lets you specify the value for the image data.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The image control supports several kinds of image types, but for this example, you’re concerned with only two possible types: URLs and Base64 strings.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Because the image type depends on data that is known only at run time, you will use a property that derives this information, <bpt id="p1">**</bpt>ImageValue<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>You might notice that no such property is defined in the run-time class for <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Therefore, this property isn't part of the automatically generated JavaScript view model for that control, and it also isn't defined on <bpt id="p1">**</bpt>$data<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To make the <bpt id="p1">**</bpt>ImageValue<ept id="p1">**</ept> property accessible via <bpt id="p2">**</bpt>$data<ept id="p2">**</ept>, you must extend the automatically generated JavaScript view model to add the property.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Review the JavaScript for the contact control</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>As was mentioned earlier, for every X++ method that has either a <bpt id="p1">**</bpt>FormPropertyAttribute<ept id="p1">**</ept> or <bpt id="p2">**</bpt>FormCommandAttribute<ept id="p2">**</ept> attribute, a JavaScript property or command is generated and made accessible to an extensible control's HTML via the view model.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You can extend this view model with additional properties and commands that are defined only on the client.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>In other words, the properties and commands have no associated X++ methods.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>After you extend the view model, the additional client-only properties and commands can be used in bindings via the <bpt id="p1">**</bpt>$data<ept id="p1">**</ept> object.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Technical overview</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The Control Extensibility Framework offers many functions that help with data bindings and data access.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Some of the functions that are used in FMTContactControl.htm, such as <bpt id="p1">**</bpt>$field<ept id="p1">**</ept> or <bpt id="p2">**</bpt>$model<ept id="p2">**</ept>, make it easy to access the data source and its fields from the HTML bindings.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>These functions are functional aliases that are used in the HTML bindings for JavaScript functions that are defined by the framework.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Within the extended JavaScript view model, the equivalent, non-aliased functions are <bpt id="p1">**</bpt>$dyn.getField<ept id="p1">**</ept> and <bpt id="p2">**</bpt>$dyn.getModel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>You can also use jQuery within the extended JavaScript view model by using the <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> symbol.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The following example shows the standard pattern that is used to define a constructor for the extended JavaScript view model.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>In this example, you save a reference to <bpt id="p1">**</bpt>this<ept id="p1">**</ept>, apply the base <bpt id="p2">**</bpt>Control<ept id="p2">**</ept> class behaviors, and then combine the automatically generated properties and commands with the properties and command from the extended view model.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x20<ept id="p1">](./media/x20.png)](./media/x20.png)</ept></source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>self<ept id="p1">**</ept> variable now contains all properties and commands that are generated from the X++ run-time class.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a client-only property to extend the view model.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>x21<ept id="p1">](./media/x21.png)](./media/x21.png)</ept></source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>self<ept id="p1">**</ept> variable will then contain all the properties and commands that are generated from the X++ run-time class, and also the <bpt id="p2">**</bpt>ActionTypes<ept id="p2">**</ept> property that was added as a client-only property.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>There are many more topics that are related to building view models for controls, but they are outside the scope of this tutorial.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>For this tutorial, we don’t need to make any changes to the view model for <bpt id="p1">**</bpt>FMTContactControl<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Therefore, you can close the FMTContactControl.js file and proceed to the next section.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Add the extensible control to the Fleet Management workspace</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>You will now update the <bpt id="p1">**</bpt>Fleet Management Clerk<ept id="p1">**</ept> workspace so that it uses the contact control that you just completed.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, expand <bpt id="p1">**</bpt>Forms<ept id="p1">**</ept>, and then double-click <bpt id="p2">**</bpt>FMTPickingUpTodayPart<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The form opens in the form designer.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>In the form designer, expand <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>PickingUpTodayGrid<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>If there is an existing contact control, delete it.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>You must remove and then re-add the control, so that the form designer picks up the X++ changes that you made.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Right-click the existing control, and then click <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>PickingUpTodayGrid<ept id="p1">**</ept>, point to <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>FMT Contact Control<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>FMTContactControl1<ept id="p1">**</ept> node that you just added, and set the <bpt id="p2">**</bpt>Data Souce<ept id="p2">**</ept> property to <bpt id="p3">**</bpt>FMTCustomer<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>FMTContactControl1<ept id="p1">**</ept> node, click <bpt id="p2">**</bpt>Image<ept id="p2">**</ept>, and then, in the <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>FMTCustomer</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Image</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Create new title fields:</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Title Fields<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Title Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Title Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>FirstName</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>FMTCustomer</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>FirstName</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Title Fields<ept id="p1">**</ept> again, and then click <bpt id="p2">**</bpt>New Title Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Title Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>LastName</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>FMTCustomer</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>LastName</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Create new subtitle fields:</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Subtitle Fields<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Subtitle Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Subtitle Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>StartDate</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>FMTRental</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>StartDate</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Formatting Expression</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Pickup {0}</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Right-click ****Subtitle Fields**** again, and then click ****New Subtitle Field<bpt id="p1">**</bpt>.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Subtitle Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>EndDate</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>FMTRental</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>EndDate</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Formatting Expression</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Return {0}</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Subtitle Fields<ept id="p1">**</ept> again, and then click <bpt id="p2">**</bpt>New Subtitle Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Subtitle Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>VehicleDescription</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>FMTVehicle</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Press Ctrl+S to save your changes.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Copy <bpt id="p1">**</bpt>PickingUpTodayGrid<ept id="p1">**</ept> by right-clicking in the grid and clicking <bpt id="p2">**</bpt>Copy<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, click <bpt id="p1">**</bpt>Forms<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>FMTReturningTodayPart<ept id="p2">**</ept>, and then double-click <bpt id="p3">**</bpt>FMTReturningTodayPart<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The form opens in the form designer.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Design<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>ReturningTodayGrid<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Delete<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Design<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Paste<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>PickingUpTodayGrid<ept id="p1">**</ept> grid that you just added to the <bpt id="p2">**</bpt>FMTReturningTodayPart<ept id="p2">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> property to <bpt id="p2">**</bpt>ReturningTodayGrid<ept id="p2">**</ept>, and then press Ctrl+S to save the changes to the <bpt id="p3">**</bpt>EMTReturningTodayPart<ept id="p3">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, find the <bpt id="p1">**</bpt>FMTRentalRatesPart<ept id="p1">**</ept> form.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Double-click the form to open it in the form designer, and then click <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>RentalRatesGrid<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Delete each field from <bpt id="p1">**</bpt>RentalRatesGrid<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>To remove the fields, click the first field, hold down the Shift key while you click the last field, and then press Delete.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Right-click in the grid, point to <bpt id="p1">**</bpt>New<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>FMT Contact Control<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>FMTContactControl1<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Image<ept id="p2">**</ept>, and then, in the <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>FMTVehicleModel</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Image</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Title Fields<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Title Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Click the title field node that you just created, and then, in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>VehicleModel</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>FMTVehicleModel</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Model</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Subtitle Fields<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Subtitle Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Subtitle Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>VehicleMake</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>FMTVehicleMake</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Make</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Subtitle Fields<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Subtitle Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Subtitle Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>RatePerDay</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>FMTModelRate</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>RaterPerDay<bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> The <bpt id="p2">**</bpt>Data Field<ept id="p2">**</ept> value must match the table field name.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>If you correct the spelling error, the values won't match, and you will receive a run-time error.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Formatting Expression</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>${0} per day</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Right-click <bpt id="p1">**</bpt>Subtitle Fields<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Subtitle Field<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Subtitle Field<ept id="p1">**</ept> node that you just created, and then, in the <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept> pane, set the following properties.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>RatePerWeek</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>FMTModelRate</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Data Field</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>RatePerWeek</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Formatting Expression</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>${0} per week</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Press Ctrl+S to save your changes to <bpt id="p1">**</bpt>FMTRentalRatesPart<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the <bpt id="p1">**</bpt>FMTClerkWorkspace<ept id="p1">**</ept> form, and then click <bpt id="p2">**</bpt>Set as Startup Object<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Press Ctrl+F5 to open the updated contact control in Internet Explorer.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> If you receive a JavaScript error, you might have to clear the Internet Explorer cache, so that the browser loads the new JavaScript file:</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>When you're prompted to open the debugger, click <bpt id="p1">**</bpt>No<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>While Internet Explorer is open, press F12 (or click <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>F12 Developer Tools<ept id="p2">**</ept>), and then press Ctrl+R.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Clear Browser Cache<ept id="p1">**</ept> dialog box, click <bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Reload the page by pressing Ctrl+F5.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">![</ph>Ext6<ept id="p1">](./media/ext6-1024x428.png)](./media/ext6.png)</ept></source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>In this tutorial, you've seen how you can use X++ when you define the design-time and server-side behaviors for a control, and how you can consume a powerful HTML-based and JavaScript-based framework when you design the UI and user interaction patterns.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The Control Extensibility Framework helps provide a separation between the modeled behavior of a control and its physical manifestation.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>As a best practice, you should try to maintain this loose coupling between data, metadata, and UI when you build extensible controls.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Bidirectional or righttoleft support</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>To validate right-to-left (RTL) support for your extensible control, you simply need to set the <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> (direction) attribute on the HTML document.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>When this attribute is changed, the browser will automatically change the layout direction of your control.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>You should make sure that your control doesn’t implement any styling which interferes with this layout.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Instead of setting this attribute manually, you can also validate by placing your control on a form, and then selecting a RTL language.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Selecting a RTL language will cause the client to also update the <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> attribute appropriately.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>dir attribute<ept id="p1">](http://www.w3.org/TR/html5/dom.html#the-dir-attribute)</ept> in the HTML standards.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>