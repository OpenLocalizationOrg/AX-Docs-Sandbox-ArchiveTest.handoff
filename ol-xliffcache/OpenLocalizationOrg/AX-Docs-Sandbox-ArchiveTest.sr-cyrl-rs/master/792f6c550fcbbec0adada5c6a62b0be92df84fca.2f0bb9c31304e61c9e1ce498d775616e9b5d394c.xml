{"content":"---\n# required metadata\n\ntitle: U Classes\ndescription: System API classes that start with the letter U.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: 92bfbb9c-4f45-464a-8ccb-71fb227780fe\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# U Classes\n\n[!include[banner](../includes/banner.md)]\n\n\nSystem API classes that start with the letter U.\n\nClass UnitofWork\n----------------\n\n    class UnitofWork extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                       | Description                                         |\n|--------------------------------------------------------------|-----------------------------------------------------|\n| public boolean getByKey(Common record)                       |                                                     |\n| public void updateonSaveChanges(Common record)               |                                                     |\n| public void saveChanges(\\[UserConnection user\\_connection\\]) |                                                     |\n| public void deleteonSaveChanges(Common record)               |                                                     |\n| public void insertonSaveChanges(Common record)               |                                                     |\n| public void finalize()                                       |                                                     |\n| public void new()                                            | Initializes a new instance of the UnitofWork class. |\n| public void clear()                                          |                                                     |\n\n### Method getByKey\n\n    public boolean getByKey(Common record)\n\n#### Parameters\n\nrecord  \n\n#### Return Value\n\n### Method updateonSaveChanges\n\n    public void updateonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method saveChanges\n\n    public void saveChanges([UserConnection user_connection])\n\n#### Parameters\n\nuser\\_connection  \n\n### Method deleteonSaveChanges\n\n    public void deleteonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method insertonSaveChanges\n\n    public void insertonSaveChanges(Common record)\n\n#### Parameters\n\nrecord  \n\n### Method finalize\n\n    public void finalize()\n\n### Method new\n\nInitializes a new instance of the UnitofWork class.\n\n    public void new()\n\n### Method clear\n\n    public void clear()\n\n## Class UserConnection\n    class UserConnection extends Connection\n\nThe UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.\n\n### Remarks\n\nSQL statements are executed, and results are returned in the context of a UserConnection class. The UserConnection class can be used to obtain a separate transaction scope.\n\n### Examples\n\n    static void example()  \n    { \n        UserConnection Con; \n        Statement Stmt; \n        Str sql; \n        ResultSet R; \n        SqlStatementExecutePermission perm; \n        Con = new UserConnection(); \n        sql = 'SELECT VALUE FROM SQLSYSTEMVARIABLES'; \n        Stmt = Con.createStatement(); \n        perm = new SqlStatementExecutePermission(sql); \n        // Check for permission to use the statement. \n        perm.assert(); \n        R = Stmt.executeQuery(sql); \n        while ( R.next() ) \n        { \n            print R.getString(1); \n        } \n    }\n\n### Methods\n\n| Method                                                | Description                                         |\n|-------------------------------------------------------|-----------------------------------------------------|\n| public void new(\\[boolean generateNewTransactionID\\]) | Initializes a new instance of the Connection class. |\n\n### Method new\n\nInitializes a new instance of the Connection class.\n\n    public void new([boolean generateNewTransactionID])\n\n#### Parameters\n\ngenerateNewTransactionID  \n\n## Class UserMenuList\n    class UserMenuList extends TreeNode\n\nThe UserMenuList class enables you to create, read, update, and delete X++ code and metadata.\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                               | Description |\n|--------------------------------------|-------------|\n| public void createMenu(\\[str name\\]) |             |\n\n### Method createMenu\n\n    public void createMenu([str name])\n\n#### Parameters\n\nname  \n\n## Class UserSetup\n    class UserSetup extends TreeNode\n\nThe UserSetup class provides an interface for setting user parameters.\n\n### Remarks\n\nThis class is used mainly in the SysUserSetup form. This class lets you create, read, update, and delete X++ code and metadata. Make sure that the user has access to the development security key (SysDevelopment) before this API is called.\n\n### Examples\n\n### Methods\n\n| Method                                  | Description |\n|-----------------------------------------|-------------|\n| public boolean xRef(\\[boolean enable\\]) |             |\n| public void setUserSetup(Common cursor) |             |\n| public void setDefaults(Common cursor)  |             |\n\n### Method xRef\n\n    public boolean xRef([boolean enable])\n\n#### Parameters\n\nenable  \n\n#### Return Value\n\n### Method setUserSetup\n\n    public void setUserSetup(Common cursor)\n\n#### Parameters\n\ncursor  \n\n### Method setDefaults\n\n    public void setDefaults(Common cursor)\n\n#### Parameters\n\ncursor  \n\n## Class UtilFile\n    class UtilFile extends Object\n\n### Remarks\n\n### Examples\n\n### Methods\n\n| Method                                                      | Description                                                      |\n|-------------------------------------------------------------|------------------------------------------------------------------|\n| public boolean aodFileExist(UtilEntryLevel layer)           |                                                                  |\n| public int importAODFile(UtilEntryLevel layer, int modelId) |                                                                  |\n| public str layers()                                         |                                                                  |\n| public boolean needReindex()                                |                                                                  |\n| public void check(str layer, str action)                    |                                                                  |\n| public void new(str fileType)                               | Initializes a new instance of the Object class.                  |\n| public void reindex()                                       | Lets you create, read, update, and delete X++ code and metadata. |\n| public void flushCache()                                    |                                                                  |\n\n### Method aodFileExist\n\n    public boolean aodFileExist(UtilEntryLevel layer)\n\n#### Parameters\n\nlayer  \n\n#### Return Value\n\n### Method importAODFile\n\n    public int importAODFile(UtilEntryLevel layer, int modelId)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\nmodelId  \n\n#### Return Value\n\n### Method layers\n\n    public str layers()\n\n#### Return Value\n\n### Method needReindex\n\n    public boolean needReindex()\n\n#### Return Value\n\n### Method check\n\n    public void check(str layer, str action)\n\n#### Parameters\n\nlayer  \n\n<!-- -->\n\naction  \n\n### Method new\n\nInitializes a new instance of the Object class.\n\n    public void new(str fileType)\n\n#### Parameters\n\nfileType  \n\n### Method reindex\n\nLets you create, read, update, and delete X++ code and metadata.\n\n    public void reindex()\n\n#### Remarks\n\nMake sure that the user has access to the development security key (SysDevelopment) before you call this API.\n\n#### Examples\n\nThe following example calls the UtilFile.reindex method. It checks whether the user has the required security key before you perform a modification.\n\n    server static public void Main(Args _args) \n    { \n        UtilFile u; \n        u = new UtilFile(\"util\"); \n        if (u) \n        { \n            u.reindex(); \n        } \n    }\n\n### Method flushCache\n\n    public void flushCache()\n\n\n\n","nodes":[{"pos":[4,611],"embed":true,"restype":"x-metadata","content":"# required metadata\n\ntitle: U Classes\ndescription: System API classes that start with the letter U.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 51691\nms.assetid: 92bfbb9c-4f45-464a-8ccb-71fb227780fe\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"U Classes","nodes":[{"pos":[0,9],"content":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]}],"path":["title"],"extradata":"MT"},{"content":"System API classes that start with the letter U.","nodes":[{"pos":[0,48],"content":"System API classes that start with the letter U.","nodes":[{"content":"System API classes that start with the letter U.","pos":[0,48]}]}],"path":["description"],"extradata":"MT"}],"header":"# required metadata\n","yml":true},{"pos":[619,628],"content":"U Classes","linkify":"U Classes","nodes":[{"content":"U Classes","pos":[0,9]}]},{"content":"System API classes that start with the letter U.","pos":[674,722]},{"pos":[724,740],"content":"Class UnitofWork","linkify":"Class UnitofWork","nodes":[{"content":"Class UnitofWork","pos":[0,16]}]},{"pos":[800,807],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[813,821],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[827,834],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[838,844]},{"content":"Description","pos":[901,912]},{"content":"public boolean getByKey(Common record)","pos":[1076,1114]},{"content":"public void updateonSaveChanges(Common record)","pos":[1195,1241]},{"content":"public void saveChanges(<ph id=\"ph1\">\\[</ph>UserConnection user<ph id=\"ph2\">\\_</ph>connection<ph id=\"ph3\">\\]</ph>)","pos":[1314,1374],"source":"public void saveChanges(\\[UserConnection user\\_connection\\])"},{"content":"public void deleteonSaveChanges(Common record)","pos":[1433,1479]},{"content":"public void insertonSaveChanges(Common record)","pos":[1552,1598]},{"content":"public void finalize()","pos":[1671,1693]},{"content":"public void new()","pos":[1790,1807]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[1853,1904]},{"content":"public void clear()","pos":[1909,1928]},{"pos":[2031,2046],"content":"Method getByKey","linkify":"Method getByKey","nodes":[{"content":"Method getByKey","pos":[0,15]}]},{"pos":[2097,2107],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2109,2115]},{"pos":[2124,2136],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[2142,2168],"content":"Method updateonSaveChanges","linkify":"Method updateonSaveChanges","nodes":[{"content":"Method updateonSaveChanges","pos":[0,26]}]},{"pos":[2227,2237],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2239,2245]},{"pos":[2253,2271],"content":"Method saveChanges","linkify":"Method saveChanges","nodes":[{"content":"Method saveChanges","pos":[0,18]}]},{"pos":[2341,2351],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"user<ph id=\"ph1\">\\_</ph>connection","pos":[2353,2369],"source":"user\\_connection"},{"pos":[2377,2403],"content":"Method deleteonSaveChanges","linkify":"Method deleteonSaveChanges","nodes":[{"content":"Method deleteonSaveChanges","pos":[0,26]}]},{"pos":[2462,2472],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2474,2480]},{"pos":[2488,2514],"content":"Method insertonSaveChanges","linkify":"Method insertonSaveChanges","nodes":[{"content":"Method insertonSaveChanges","pos":[0,26]}]},{"pos":[2573,2583],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"record","pos":[2585,2591]},{"pos":[2599,2614],"content":"Method finalize","linkify":"Method finalize","nodes":[{"content":"Method finalize","pos":[0,15]}]},{"pos":[2648,2658],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the UnitofWork class.","pos":[2660,2711]},{"pos":[2740,2752],"content":"Method clear","linkify":"Method clear","nodes":[{"content":"Method clear","pos":[0,12]}]},{"pos":[2782,2802],"content":"Class UserConnection","linkify":"Class UserConnection","nodes":[{"content":"Class UserConnection","pos":[0,20]}]},{"content":"The UserConnection class represents an auxiliary connection to the SQL database, based on the same logon properties as the main connection.","pos":[2848,2987]},{"pos":[2993,3000],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"SQL statements are executed, and results are returned in the context of a UserConnection class.","pos":[3002,3097]},{"content":"The UserConnection class can be used to obtain a separate transaction scope.","pos":[3098,3174]},{"pos":[3180,3188],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[3763,3770],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[3774,3780]},{"content":"Description","pos":[3830,3841]},{"content":"public void new(<ph id=\"ph1\">\\[</ph>boolean generateNewTransactionID<ph id=\"ph2\">\\]</ph>)","pos":[3998,4051],"source":"public void new(\\[boolean generateNewTransactionID\\])"},{"content":"Initializes a new instance of the Connection class.","pos":[4054,4105]},{"pos":[4113,4123],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Connection class.","pos":[4125,4176]},{"pos":[4240,4250],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"generateNewTransactionID","pos":[4252,4276]},{"pos":[4283,4301],"content":"Class UserMenuList","linkify":"Class UserMenuList","nodes":[{"content":"Class UserMenuList","pos":[0,18]}]},{"content":"The UserMenuList class enables you to create, read, update, and delete X++ code and metadata.","pos":[4343,4436]},{"pos":[4442,4449],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4455,4463],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[4469,4476],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[4480,4486]},{"content":"Description","pos":[4519,4530]},{"content":"public void createMenu(<ph id=\"ph1\">\\[</ph>str name<ph id=\"ph2\">\\]</ph>)","pos":[4590,4626],"source":"public void createMenu(\\[str name\\])"},{"pos":[4648,4665],"content":"Method createMenu","linkify":"Method createMenu","nodes":[{"content":"Method createMenu","pos":[0,17]}]},{"pos":[4712,4722],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"name","pos":[4724,4728]},{"pos":[4735,4750],"content":"Class UserSetup","linkify":"Class UserSetup","nodes":[{"content":"Class UserSetup","pos":[0,15]}]},{"content":"The UserSetup class provides an interface for setting user parameters.","pos":[4789,4859]},{"pos":[4865,4872],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This class is used mainly in the SysUserSetup form.","pos":[4874,4925]},{"content":"This class lets you create, read, update, and delete X++ code and metadata.","pos":[4926,5001]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before this API is called.","pos":[5002,5112]},{"pos":[5118,5126],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5132,5139],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5143,5149]},{"content":"Description","pos":[5185,5196]},{"content":"public boolean xRef(<ph id=\"ph1\">\\[</ph>boolean enable<ph id=\"ph2\">\\]</ph>)","pos":[5259,5298],"source":"public boolean xRef(\\[boolean enable\\])"},{"content":"public void setUserSetup(Common cursor)","pos":[5317,5356]},{"content":"public void setDefaults(Common cursor)","pos":[5375,5413]},{"pos":[5436,5447],"content":"Method xRef","linkify":"Method xRef","nodes":[{"content":"Method xRef","pos":[0,11]}]},{"pos":[5497,5507],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"enable","pos":[5509,5515]},{"pos":[5524,5536],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[5542,5561],"content":"Method setUserSetup","linkify":"Method setUserSetup","nodes":[{"content":"Method setUserSetup","pos":[0,19]}]},{"pos":[5613,5623],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5625,5631]},{"pos":[5639,5657],"content":"Method setDefaults","linkify":"Method setDefaults","nodes":[{"content":"Method setDefaults","pos":[0,18]}]},{"pos":[5708,5718],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"cursor","pos":[5720,5726]},{"pos":[5733,5747],"content":"Class UtilFile","linkify":"Class UtilFile","nodes":[{"content":"Class UtilFile","pos":[0,14]}]},{"pos":[5787,5794],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[5800,5808],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"pos":[5814,5821],"content":"Methods","linkify":"Methods","nodes":[{"content":"Methods","pos":[0,7]}]},{"content":"Method","pos":[5825,5831]},{"content":"Description","pos":[5887,5898]},{"content":"public boolean aodFileExist(UtilEntryLevel layer)","pos":[6087,6136]},{"content":"public int importAODFile(UtilEntryLevel layer, int modelId)","pos":[6218,6277]},{"content":"public str layers()","pos":[6349,6368]},{"content":"public boolean needReindex()","pos":[6480,6508]},{"content":"public void check(str layer, str action)","pos":[6611,6651]},{"content":"public void new(str fileType)","pos":[6742,6771]},{"content":"Initializes a new instance of the Object class.","pos":[6804,6851]},{"content":"public void reindex()","pos":[6873,6894]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[6935,6999]},{"content":"public void flushCache()","pos":[7004,7028]},{"pos":[7138,7157],"content":"Method aodFileExist","linkify":"Method aodFileExist","nodes":[{"content":"Method aodFileExist","pos":[0,19]}]},{"pos":[7219,7229],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7231,7236]},{"pos":[7245,7257],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7263,7283],"content":"Method importAODFile","linkify":"Method importAODFile","nodes":[{"content":"Method importAODFile","pos":[0,20]}]},{"pos":[7355,7365],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7367,7372]},{"content":"modelId","pos":[7386,7393]},{"pos":[7402,7414],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7420,7433],"content":"Method layers","linkify":"Method layers","nodes":[{"content":"Method layers","pos":[0,13]}]},{"pos":[7465,7477],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7483,7501],"content":"Method needReindex","linkify":"Method needReindex","nodes":[{"content":"Method needReindex","pos":[0,18]}]},{"pos":[7542,7554],"content":"Return Value","linkify":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[7560,7572],"content":"Method check","linkify":"Method check","nodes":[{"content":"Method check","pos":[0,12]}]},{"pos":[7625,7635],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"layer","pos":[7637,7642]},{"content":"action","pos":[7656,7662]},{"pos":[7670,7680],"content":"Method new","linkify":"Method new","nodes":[{"content":"Method new","pos":[0,10]}]},{"content":"Initializes a new instance of the Object class.","pos":[7682,7729]},{"pos":[7771,7781],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"fileType","pos":[7783,7791]},{"pos":[7799,7813],"content":"Method reindex","linkify":"Method reindex","nodes":[{"content":"Method reindex","pos":[0,14]}]},{"content":"Lets you create, read, update, and delete X++ code and metadata.","pos":[7815,7879]},{"pos":[7913,7920],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Make sure that the user has access to the development security key (SysDevelopment) before you call this API.","pos":[7922,8031]},{"pos":[8038,8046],"content":"Examples","linkify":"Examples","nodes":[{"content":"Examples","pos":[0,8]}]},{"content":"The following example calls the UtilFile.reindex method.","pos":[8048,8104]},{"content":"It checks whether the user has the required security key before you perform a modification.","pos":[8105,8196]},{"pos":[8384,8401],"content":"Method flushCache","linkify":"Method flushCache","nodes":[{"content":"Method flushCache","pos":[0,17]}]}]}