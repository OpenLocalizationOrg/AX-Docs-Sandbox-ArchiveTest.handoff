{"content":"---\n# required metadata\n\ntitle: X++ date run-time functions\ndescription: This topic describes the date run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31341\nms.assetid: fbaf07ef-63d0-40aa-bef5-e44d6c6a4643\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n\n---\n\n# X++ date run-time functions\n\n[!include[banner](../includes/banner.md)]\n\n\nThis topic describes the date run-time functions.\n\ndayName\n-------\n\nRetrieves the name of the day of the week that is specified by a number.\n\n    str dayName(int number)\n\n### Parameters\n\n| Parameter | Description                    |\n|-----------|--------------------------------|\n| number    | The number of a day in a week. |\n\n### Return value\n\nThe day of the week specified by the number parameter.\n\n### Remarks\n\nThe valid values for the number parameter are **1** through **7**. Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**.\n\n### Example\n\n    static void dayNameExample(Args _arg)\n    {\n            str s;\n            ;\n            s = dayName(01);\n            print \"First day of the week's name is \" + s;\n            pause;\n    }\n\n## dayOfMth\nCalculates the number of the day in the month for the specified date.\n\n    int dayOfMth(date date)\n\n### Parameters\n\n| Parameter | Description       |\n|-----------|-------------------|\n| date      | The date to test. |\n\n### Return value\n\nAn integer between 1 and 31 that indicates the day of the month for the specified date.\n\n### Remarks\n\n    dayOfMth(31122001) //returns 31.\n\n### Example\n\n    static void dayOfMthExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfMth(d);\n            print \"Today's day of the month is \" + int2Str(i);\n            pause;\n    }\n\n## dayOfWk\nCalculates the number of day in the week for the specified date. **Note:** Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**.\n\n    int dayOfWk(date date)\n\n### Parameters\n\n| Parameter | Description                                               |\n|-----------|-----------------------------------------------------------|\n| date      | A **date** value that indicates the year, month, and day. |\n\n### Return value\n\nThe number of the specified day in the week.\n\n### Example\n\n    static void dayOfWkExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfWk(d);\n            print \"Today's day of the week is \" + int2Str(i);\n            pause;\n    }\n\n## dayOfYr\nCalculates the number of days between January 1 and the specified date.\n\n    int dayOfYr(date _date)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| \\_date    | A date that specifies the year, month, and day. |\n\n### Return value\n\nThe number of days between January 1 and the specified date, inclusive.\n\n### Remarks\n\nJanuary 1 is **1**, and December 31 is either **365** or **366**.\n\n### Example\n\n    static void dayOfYrExample(Args _arg)\n    {\n            date d = today();\n            int i;\n            ;\n            i = dayOfYr(d);\n            print \"Today's day of the year is \" + int2Str(i);\n            pause;\n    }\n\n## endMth\nCalculates the last date in the month of the specified date.\n\n    date endMth(date date)\n\n### Parameters\n\n| Parameter | Description                                             |\n|-----------|---------------------------------------------------------|\n| date      | A **date** value that indicates a year, month, and day. |\n\n### Return value\n\nThe **date** value of the last day in the specified month.\n\n### Remarks\n\n    endMth(0221988); //Returns the date 2921988 because 1988 is a leap year.\n    endMth(0221989); //Returns the date 2821989.\n\n## mkDate\nCreates a date, based on three integers that indicate the day, month, and year, respectively.\n\n    date mkDate(int day, int month, int year)\n\n### Parameters\n\n| Parameter | Description                                                               |\n|-----------|---------------------------------------------------------------------------|\n| day       | An integer that represents the day of the month.                          |\n| month     | An integer that represents the month of the year.                         |\n| year      | An integer that represents the year, which must be between 1900 and 2154. |\n\n### Return value\n\nA **date** value that is based on the values of the *day*, *month*, and *year* parameters.\n\n### Remarks\n\nIf the date isn't valid, this method returns a **0** (zero, 1/1/1900) date. Beginning with Dynamics AX 7.0(February 2016), shortcut values for the year, e.g. 75 for 1975, are not supported. If you provide a shortcut value for the year, a date of 1/1/1900 is returned.\n\n### Example\n\n    static void mkDateExample(Args _arg)\n    {\n            date d;\n            ;\n            // Returns the date 0112005.\n            d = mkDate(1, 1, 2005);\n            print d;\n            pause;\n    }\n\n## mthName\nRetrieves the name of the specified month\n\n    str monthName(int number)\n\n### Parameters\n\n| Parameter | Description              |\n|-----------|--------------------------|\n| number    | The number of the month. |\n\n### Return value\n\nThe name of the specified month.\n\n### Remarks\n\nThe valid values of the *number* parameter are **1** through **12**. January is represented by **1** and December by **12**.\n\n### Example\n\n    static void mthNameExample(Args _arg)\n    {\n            str s;\n            ;\n            // MthName(6) returns the text string \"June\".\n            s = mthName(6);\n            print \"Month name is \" + s;\n            pause;\n    }\n\n## mthOfYr\nRetrieves the number of the month in the year for the specified date. **Note:** January is **1**, February is **2**, and December is **12**.\n\n    int mthOfYr(date date)\n\n### Parameters\n\n| Parameter | Description                                   |\n|-----------|-----------------------------------------------|\n| date      | A date that specifies a year, month, and day. |\n\n### Return value\n\nThe number of the month in the year, for the month that is represented by the *date* parameter.\n\n### Example\n\n    static void mthOfYrExample(Args _arg)\n    {\n            int i;\n            ;\n            i = mthOfYr(today());\n            print \"The number of the month in today's date is \" + int2Str(i);\n            pause;\n    }\n\n## nextMth\nRetrieves the date in the following month that corresponds most closely to the specified date.\n\n    date nextMth(date date)\n\n### Parameters\n\n| Parameter | Description                               |\n|-----------|-------------------------------------------|\n| date      | The date to match in the following month. |\n\n### Return value\n\nThe closest match to the specified date that is found in the next month.\n\n### Remarks\n\n    nextMth(2921996); //returns 29/03/1996.\n    nextMth(3111996); //returns 2921996, because 1996 is a leap year.\n\n### Example\n\n    static void nextMthExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextMth(today());\n            print \"Closest date next month is \"\n            + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## nextQtr\nRetrieves the date in the following quarter that corresponds most closely to the specified date.\n\n    date nextQtr(date date)\n\n### Parameters\n\n| Parameter | Description                                 |\n|-----------|---------------------------------------------|\n| date      | The date to match in the following quarter. |\n\n### Return value\n\nThe closest match to specified date that is found in the next quarter.\n\n### Remarks\n\nFor example, **nextQtr(3111998)** returns **3041998**.\n\n### Example\n\n    static void nextQtrExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextQtr(today());\n            print \"Closest date next quarter is \"\n                    + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## nextYr\nRetrieves the date in the following year that corresponds most closely to the specified date.\n\n    date nextYr(date date)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| date      | The date to match in the following year. |\n\n### Return value\n\nThe closest match to the specified date that is found in the following year.\n\n### Remarks\n\nFor example, **nextyr(2921998)** returns **2821999**.\n\n### Example\n\n    static void nextYrExample(Args _arg)\n    {\n            date d;\n            ;\n            d = nextYr(today());\n            print \"Closest date next year is \"\n                    + date2Str(d, 2, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## prevMth\nRetrieves the date in the previous month that corresponds most closely to the specified date.\n\n    date prevMth(date date)\n\n### Parameters\n\n| Parameter | Description                              |\n|-----------|------------------------------------------|\n| date      | The date to match in the previous month. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous month.\n\n### Remarks\n\n    prevMth(3131996); //Returns the date 29/02/1996 because 1996 is a leap year.\n    prevMth(2821998); //Returns the date 28/01/1998.\n\n## prevQtr\nRetrieves the date in the previous quarter that corresponds most closely to the specified date.\n\n    date prevQtr(date date)\n\n### Parameters\n\n| Parameter | Description                                |\n|-----------|--------------------------------------------|\n| date      | The date to match in the previous quarter. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous quarter.\n\n### Remarks\n\n    prevQtr(3041998); //Returns the date 30/01/1998.\n    prevQtr(2951996); //Returns the date 29/02/1996, because 1996 is a leap year.\n\n## prevYr\nRetrieves the date in the previous year that corresponds most closely to the specified date.\n\n    date prevYr(date date)\n\n### Parameters\n\n| Parameter | Description                             |\n|-----------|-----------------------------------------|\n| date      | The date to match in the previous year. |\n\n### Return value\n\nThe closest match to the specified date that is found in the previous year.\n\n### Remarks\n\n    prevYr(2921996); //Returns the date 28/02/1995 because 1996 is a leap year.\n    prevYr(2821998); //Returns the date 28/02/1997.\n\n## systemDateGet\nRetrieves the session date, if it has been set.\n\n    date systemDateGet()\n\n### Return value\n\nThe session date if it has been set; otherwise, the system date.\n\n### Remarks\n\nConsider using **Session date and time** on the **Tools** menu to open the **Session date and time** page. This page can be used to actively set the session date. After this set action is detected by the system, subsequent calls to the **systemDateGet** function return the session date. The **today** function returns the system date. This function doesn't support time zones.\n\n### Example\n\nThe following example shows the date in the Infolog window.\n\n    static void Job_systemDateGet(Args _arg)\n    {\n            info( date2Str(\n                    systemDateGet(),        // X++ language function.\n                    321,                    // 321 = ymd\n                    DateDay::Digits2,\n                    DateSeparator::Hyphen,  // separator1\n                    DateMonth::Digits2,\n                    DateSeparator::Hyphen,  // separator2\n                    DateYear::Digits4\n            )\n    );\n    /*********** Actual Infolog output\n    Message (03:46:00 pm)\n    2012-04-16\n    ***********/\n    }\n\n## systemDateSet\nChanges the system date.\n\n    date systemDateSet(date _date)\n\n### Parameters\n\n| Parameter | Description                  |\n|-----------|------------------------------|\n| \\_date    | The new date for the system. |\n\n### Return value\n\nThe new system date.\n\n### Remarks\n\nThis function doesn't affect the session date. This method changes the date, but the time will be set to **0** (zero).\n\n### Example\n\nThe following example sets the system date to today's date.\n\n    static void systemDateSetExample(Args _arg)\n    {\n            date d = today();\n            d = systemDateSet(d);\n            print d;\n    }\n\n## timeNow\nRetrieves the current system time.\n\n    int timeNow()\n\n### Return value\n\nThe number of seconds that have passed since midnight.\n\n### Example\n\n    static void timeNowExample(Args _arg)\n    {\n            int i;\n            ;\n            i = timeNow();\n            print \"The number of seconds since midnight is \" + int2Str(i);\n            pause;\n    }\n\n## today\nRetrieves the current date on the system.\n\n    date today()\n\n### Return value\n\nThe current date.\n\n### Example\n\n    static void todayExample(Args _arg)\n    {\n            date d;\n            ;\n            d = today();\n            print \"Today's date is \" + date2Str(d, 0, 2, -1, 2, -1, 4);\n            pause;\n    }\n\n## wkOfYr\nCalculates the week of the year that a date falls in, according to the ISO 8601 specification.\n\n    int wkOfYr(date _date)\n\n### Parameters\n\n| Parameter | Description                                     |\n|-----------|-------------------------------------------------|\n| \\_date    | The date to calculate the week of the year for. |\n\n### Return value\n\nThe sequence number of the week that the *\\_date* parameter occurs in.\n\n### Example\n\nThe following code example compares the **wkOfYr** function with the **Global::weekOfYear** method. The function and the method produce different results.\n\n    // X++ job, under AOT > Jobs.\n    static void WeekTests3Job(Args _args)\n    {\n    int weekNum, i;\n    date dateTest;\n    str sMessages[];\n    //---------------------------------------------\n    sMessages[1] = \"----- #1.  For Sunday, January 5, 2003 -----\";\n    dateTest = 512003; // DayMonthYear  format.\n    weekNum = wkOfYr(dateTest);\n    sMessages[2] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[3] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    //---------------------------------------------\n    sMessages[4] = \" \";\n    sMessages[5] = \"----- #2.  For Wednesday, August 20, 2003 -----\";\n    dateTest = 2082003;\n    weekNum = wkOfYr(dateTest);\n    sMessages[6] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[7] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    //---------------------------------------------\n    sMessages[8] = \" \";\n    sMessages[9] = \"----- #3.  For Sunday, December 28, 2003 -----\";\n    dateTest = 28122003;\n    weekNum = wkOfYr(dateTest);\n    sMessages[10] = int2str(weekNum) + \" = wkOfYr funtion\";\n    weekNum = Global::weekOfYear(dateTest);\n    sMessages[11] = int2str(weekNum) + \" = Global::weekOfYear method\";\n    for (i=1; i<= 11; i++)\n    {\n    Global::info(sMessages[i]);\n    }\n    }\n\nThe previous example sent the following information to the Infolog for display. The output shows that there are differences between **wkOfYr** and **Global::weekOfYear**. \n\n    Message (01:59:13 pm) ----- \n    #1. For Sunday, January 5, 2003 ----- 1 = wkOfYr funtion 2 = Global::weekOfYear method ----- \n    #2. For Wednesday, August 20, 2003 ----- 34 = wkOfYr funtion 34 = Global::weekOfYear method ----- \n    #3. For Sunday, December 28, 2003 ----- 52 = wkOfYr funtion 1 = Global::weekOfYear method\n\n## year\nRetrieves the year from a **date** value.\n\n    int year(date _date)\n\n### Parameters\n\n| Parameter | Description                       |\n|-----------|-----------------------------------|\n| \\_date    | The date to return the year from. |\n\n### Return value\n\nThe year of the specified date.\n\n### Remarks\n\n    year(0221998); //Returns the value 1998.\n\n\n\n","nodes":[{"pos":[4,630],"embed":true,"restype":"x-metadata","content":"# required metadata\n\ntitle: X++ date run-time functions\ndescription: This topic describes the date run-time functions.\nauthor: RobinARH\nmanager: AnnBe\nms.date: 06/20/2017\nms.topic: article\nms.prod: \nms.service: dynamics-ax-platform\nms.technology: \n\n# optional metadata\n\n# ms.search.form: \n# ROBOTS: \naudience: Developer\n# ms.devlang: \nms.reviewer: robinr\nms.search.scope: AX 7.0.0, Operations, UnifiedOperations\n# ms.tgt_pltfrm: \nms.custom: 31341\nms.assetid: fbaf07ef-63d0-40aa-bef5-e44d6c6a4643\nms.search.region: Global\n# ms.search.industry: \nms.author: robinr\nms.search.validFrom: 2016-02-28\nms.dyn365.ops.version: AX 7.0.0\n","nodes":[{"content":"X++ date run-time functions","nodes":[{"pos":[0,27],"content":"X++ date run-time functions","nodes":[{"content":"X++ date run-time functions","pos":[0,27]}]}],"path":["title"],"extradata":"MT"},{"content":"This topic describes the date run-time functions.","nodes":[{"pos":[0,49],"content":"This topic describes the date run-time functions.","nodes":[{"content":"This topic describes the date run-time functions.","pos":[0,49]}]}],"path":["description"],"extradata":"MT"}],"header":"# required metadata\n","yml":true},{"pos":[638,665],"content":"X++ date run-time functions","linkify":"X++ date run-time functions","nodes":[{"content":"X++ date run-time functions","pos":[0,27]}]},{"content":"This topic describes the date run-time functions.","pos":[711,760]},{"pos":[762,769],"content":"dayName","linkify":"dayName","nodes":[{"content":"dayName","pos":[0,7]}]},{"content":"Retrieves the name of the day of the week that is specified by a number.","pos":[779,851]},{"pos":[886,896],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[900,909]},{"content":"Description","pos":[912,923]},{"content":"number","pos":[994,1000]},{"content":"The number of a day in a week.","pos":[1006,1036]},{"pos":[1044,1056],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The day of the week specified by the number parameter.","pos":[1058,1112]},{"pos":[1118,1125],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The valid values for the number parameter are <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> through <bpt id=\"p2\">**</bpt>7<ept id=\"p2\">**</ept>.","pos":[1127,1193],"source":"The valid values for the number parameter are **1** through **7**."},{"content":"Monday is represented by <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>, Tuesday by <bpt id=\"p2\">**</bpt>2<ept id=\"p2\">**</ept>, and Sunday by <bpt id=\"p3\">**</bpt>7<ept id=\"p3\">**</ept>.","pos":[1194,1264],"source":" Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**."},{"pos":[1270,1277],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[1476,1484],"content":"dayOfMth","linkify":"dayOfMth","nodes":[{"content":"dayOfMth","pos":[0,8]}]},{"content":"Calculates the number of the day in the month for the specified date.","pos":[1485,1554]},{"pos":[1589,1599],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[1603,1612]},{"content":"Description","pos":[1615,1626]},{"content":"date","pos":[1671,1675]},{"content":"The date to test.","pos":[1683,1700]},{"pos":[1708,1720],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"An integer between 1 and 31 that indicates the day of the month for the specified date.","pos":[1722,1809]},{"pos":[1815,1822],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[1866,1873],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2108,2115],"content":"dayOfWk","linkify":"dayOfWk","nodes":[{"content":"dayOfWk","pos":[0,7]}]},{"content":"Calculates the number of day in the week for the specified date.","pos":[2116,2180]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> Monday is represented by <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept>, Tuesday by <bpt id=\"p3\">**</bpt>2<ept id=\"p3\">**</ept>, and Sunday by <bpt id=\"p4\">**</bpt>7<ept id=\"p4\">**</ept>.","pos":[2181,2261],"source":"**Note:** Monday is represented by **1**, Tuesday by **2**, and Sunday by **7**."},{"pos":[2295,2305],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2309,2318]},{"content":"Description","pos":[2321,2332]},{"content":"date","pos":[2457,2461]},{"pos":[2469,2526],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that indicates the year, month, and day.","source":"A **date** value that indicates the year, month, and day."},{"pos":[2534,2546],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of the specified day in the week.","pos":[2548,2592]},{"pos":[2598,2605],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2837,2844],"content":"dayOfYr","linkify":"dayOfYr","nodes":[{"content":"dayOfYr","pos":[0,7]}]},{"content":"Calculates the number of days between January 1 and the specified date.","pos":[2845,2916]},{"pos":[2951,2961],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[2965,2974]},{"content":"Description","pos":[2977,2988]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[3093,3099],"source":"\\_date"},{"content":"A date that specifies the year, month, and day.","pos":[3105,3152]},{"pos":[3160,3172],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of days between January 1 and the specified date, inclusive.","pos":[3174,3245]},{"pos":[3251,3258],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[3260,3325],"content":"January 1 is <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept>, and December 31 is either <bpt id=\"p2\">**</bpt>365<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>366<ept id=\"p3\">**</ept>.","source":"January 1 is **1**, and December 31 is either **365** or **366**."},{"pos":[3331,3338],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[3570,3576],"content":"endMth","linkify":"endMth","nodes":[{"content":"endMth","pos":[0,6]}]},{"content":"Calculates the last date in the month of the specified date.","pos":[3577,3637]},{"pos":[3671,3681],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[3685,3694]},{"content":"Description","pos":[3697,3708]},{"content":"date","pos":[3829,3833]},{"pos":[3841,3896],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that indicates a year, month, and day.","source":"A **date** value that indicates a year, month, and day."},{"pos":[3904,3916],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[3918,3976],"content":"The <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value of the last day in the specified month.","source":"The **date** value of the last day in the specified month."},{"pos":[3982,3989],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[4121,4127],"content":"mkDate","linkify":"mkDate","nodes":[{"content":"mkDate","pos":[0,6]}]},{"content":"Creates a date, based on three integers that indicate the day, month, and year, respectively.","pos":[4128,4221]},{"pos":[4274,4284],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[4288,4297]},{"content":"Description","pos":[4300,4311]},{"content":"day","pos":[4468,4471]},{"content":"An integer that represents the day of the month.","pos":[4480,4528]},{"content":"month","pos":[4558,4563]},{"content":"An integer that represents the month of the year.","pos":[4570,4619]},{"content":"year","pos":[4648,4652]},{"content":"An integer that represents the year, which must be between 1900 and 2154.","pos":[4660,4733]},{"pos":[4741,4753],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[4755,4845],"content":"A <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value that is based on the values of the <bpt id=\"p2\">*</bpt>day<ept id=\"p2\">*</ept>, <bpt id=\"p3\">*</bpt>month<ept id=\"p3\">*</ept>, and <bpt id=\"p4\">*</bpt>year<ept id=\"p4\">*</ept> parameters.","source":"A **date** value that is based on the values of the *day*, *month*, and *year* parameters."},{"pos":[4851,4858],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"If the date isn't valid, this method returns a <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero, 1/1/1900) date.","pos":[4860,4935],"source":"If the date isn't valid, this method returns a **0** (zero, 1/1/1900) date."},{"content":"Beginning with Dynamics AX 7.0(February 2016), shortcut values for the year, e.g. 75 for 1975, are not supported.","pos":[4936,5049]},{"content":"If you provide a shortcut value for the year, a date of 1/1/1900 is returned.","pos":[5050,5127]},{"pos":[5133,5140],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[5350,5357],"content":"mthName","linkify":"mthName","nodes":[{"content":"mthName","pos":[0,7]}]},{"content":"Retrieves the name of the specified month","pos":[5358,5399]},{"pos":[5436,5446],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[5450,5459]},{"content":"Description","pos":[5462,5473]},{"content":"number","pos":[5532,5538]},{"content":"The number of the month.","pos":[5544,5568]},{"pos":[5576,5588],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The name of the specified month.","pos":[5590,5622]},{"pos":[5628,5635],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"The valid values of the <bpt id=\"p1\">*</bpt>number<ept id=\"p1\">*</ept> parameter are <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept> through <bpt id=\"p3\">**</bpt>12<ept id=\"p3\">**</ept>.","pos":[5637,5705],"source":"The valid values of the *number* parameter are **1** through **12**."},{"content":"January is represented by <bpt id=\"p1\">**</bpt>1<ept id=\"p1\">**</ept> and December by <bpt id=\"p2\">**</bpt>12<ept id=\"p2\">**</ept>.","pos":[5706,5761],"source":" January is represented by **1** and December by **12**."},{"pos":[5767,5774],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6012,6019],"content":"mthOfYr","linkify":"mthOfYr","nodes":[{"content":"mthOfYr","pos":[0,7]}]},{"content":"Retrieves the number of the month in the year for the specified date.","pos":[6020,6089]},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> January is <bpt id=\"p2\">**</bpt>1<ept id=\"p2\">**</ept>, February is <bpt id=\"p3\">**</bpt>2<ept id=\"p3\">**</ept>, and December is <bpt id=\"p4\">**</bpt>12<ept id=\"p4\">**</ept>.","pos":[6090,6160],"source":"**Note:** January is **1**, February is **2**, and December is **12**."},{"pos":[6194,6204],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6208,6217]},{"content":"Description","pos":[6220,6231]},{"content":"date","pos":[6332,6336]},{"content":"A date that specifies a year, month, and day.","pos":[6344,6389]},{"pos":[6397,6409],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[6411,6506],"content":"The number of the month in the year, for the month that is represented by the <bpt id=\"p1\">*</bpt>date<ept id=\"p1\">*</ept> parameter.","source":"The number of the month in the year, for the month that is represented by the *date* parameter."},{"pos":[6512,6519],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[6743,6750],"content":"nextMth","linkify":"nextMth","nodes":[{"content":"nextMth","pos":[0,7]}]},{"content":"Retrieves the date in the following month that corresponds most closely to the specified date.","pos":[6751,6845]},{"pos":[6880,6890],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[6894,6903]},{"content":"Description","pos":[6906,6917]},{"content":"date","pos":[7010,7014]},{"content":"The date to match in the following month.","pos":[7022,7063]},{"pos":[7071,7083],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the next month.","pos":[7085,7157]},{"pos":[7163,7170],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7291,7298],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[7540,7547],"content":"nextQtr","linkify":"nextQtr","nodes":[{"content":"nextQtr","pos":[0,7]}]},{"content":"Retrieves the date in the following quarter that corresponds most closely to the specified date.","pos":[7548,7644]},{"pos":[7679,7689],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[7693,7702]},{"content":"Description","pos":[7705,7716]},{"content":"date","pos":[7813,7817]},{"content":"The date to match in the following quarter.","pos":[7825,7868]},{"pos":[7876,7888],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to specified date that is found in the next quarter.","pos":[7890,7960]},{"pos":[7966,7973],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[7975,8029],"content":"For example, <bpt id=\"p1\">**</bpt>nextQtr(3111998)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>3041998<ept id=\"p2\">**</ept>.","source":"For example, **nextQtr(3111998)** returns **3041998**."},{"pos":[8035,8042],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[8294,8300],"content":"nextYr","linkify":"nextYr","nodes":[{"content":"nextYr","pos":[0,6]}]},{"content":"Retrieves the date in the following year that corresponds most closely to the specified date.","pos":[8301,8394]},{"pos":[8428,8438],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[8442,8451]},{"content":"Description","pos":[8454,8465]},{"content":"date","pos":[8556,8560]},{"content":"The date to match in the following year.","pos":[8568,8608]},{"pos":[8616,8628],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the following year.","pos":[8630,8706]},{"pos":[8712,8719],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[8721,8774],"content":"For example, <bpt id=\"p1\">**</bpt>nextyr(2921998)<ept id=\"p1\">**</ept> returns <bpt id=\"p2\">**</bpt>2821999<ept id=\"p2\">**</ept>.","source":"For example, **nextyr(2921998)** returns **2821999**."},{"pos":[8780,8787],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[9034,9041],"content":"prevMth","linkify":"prevMth","nodes":[{"content":"prevMth","pos":[0,7]}]},{"content":"Retrieves the date in the previous month that corresponds most closely to the specified date.","pos":[9042,9135]},{"pos":[9170,9180],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9184,9193]},{"content":"Description","pos":[9196,9207]},{"content":"date","pos":[9298,9302]},{"content":"The date to match in the previous month.","pos":[9310,9350]},{"pos":[9358,9370],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous month.","pos":[9372,9448]},{"pos":[9454,9461],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[9601,9608],"content":"prevQtr","linkify":"prevQtr","nodes":[{"content":"prevQtr","pos":[0,7]}]},{"content":"Retrieves the date in the previous quarter that corresponds most closely to the specified date.","pos":[9609,9704]},{"pos":[9739,9749],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[9753,9762]},{"content":"Description","pos":[9765,9776]},{"content":"date","pos":[9871,9875]},{"content":"The date to match in the previous quarter.","pos":[9883,9925]},{"pos":[9933,9945],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous quarter.","pos":[9947,10025]},{"pos":[10031,10038],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10179,10185],"content":"prevYr","linkify":"prevYr","nodes":[{"content":"prevYr","pos":[0,6]}]},{"content":"Retrieves the date in the previous year that corresponds most closely to the specified date.","pos":[10186,10278]},{"pos":[10312,10322],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[10326,10335]},{"content":"Description","pos":[10338,10349]},{"content":"date","pos":[10438,10442]},{"content":"The date to match in the previous year.","pos":[10450,10489]},{"pos":[10497,10509],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The closest match to the specified date that is found in the previous year.","pos":[10511,10586]},{"pos":[10592,10599],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"pos":[10737,10750],"content":"systemDateGet","linkify":"systemDateGet","nodes":[{"content":"systemDateGet","pos":[0,13]}]},{"content":"Retrieves the session date, if it has been set.","pos":[10751,10798]},{"pos":[10830,10842],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The session date if it has been set; otherwise, the system date.","pos":[10844,10908]},{"pos":[10914,10921],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"Consider using <bpt id=\"p1\">**</bpt>Session date and time<ept id=\"p1\">**</ept> on the <bpt id=\"p2\">**</bpt>Tools<ept id=\"p2\">**</ept> menu to open the <bpt id=\"p3\">**</bpt>Session date and time<ept id=\"p3\">**</ept> page.","pos":[10923,11029],"source":"Consider using **Session date and time** on the **Tools** menu to open the **Session date and time** page."},{"content":"This page can be used to actively set the session date.","pos":[11030,11085]},{"content":"After this set action is detected by the system, subsequent calls to the <bpt id=\"p1\">**</bpt>systemDateGet<ept id=\"p1\">**</ept> function return the session date.","pos":[11086,11210],"source":" After this set action is detected by the system, subsequent calls to the **systemDateGet** function return the session date."},{"content":"The <bpt id=\"p1\">**</bpt>today<ept id=\"p1\">**</ept> function returns the system date.","pos":[11211,11258],"source":" The **today** function returns the system date."},{"content":"This function doesn't support time zones.","pos":[11259,11300]},{"pos":[11306,11313],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example shows the date in the Infolog window.","pos":[11315,11374]},{"pos":[11942,11955],"content":"systemDateSet","linkify":"systemDateSet","nodes":[{"content":"systemDateSet","pos":[0,13]}]},{"content":"Changes the system date.","pos":[11956,11980]},{"pos":[12022,12032],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[12036,12045]},{"content":"Description","pos":[12048,12059]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[12126,12132],"source":"\\_date"},{"content":"The new date for the system.","pos":[12138,12166]},{"pos":[12174,12186],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The new system date.","pos":[12188,12208]},{"pos":[12214,12221],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]},{"content":"This function doesn't affect the session date.","pos":[12223,12269]},{"content":"This method changes the date, but the time will be set to <bpt id=\"p1\">**</bpt>0<ept id=\"p1\">**</ept> (zero).","pos":[12270,12341],"source":" This method changes the date, but the time will be set to **0** (zero)."},{"pos":[12347,12354],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following example sets the system date to today's date.","pos":[12356,12415]},{"pos":[12566,12573],"content":"timeNow","linkify":"timeNow","nodes":[{"content":"timeNow","pos":[0,7]}]},{"content":"Retrieves the current system time.","pos":[12574,12608]},{"pos":[12633,12645],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The number of seconds that have passed since midnight.","pos":[12647,12701]},{"pos":[12707,12714],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[12928,12933],"content":"today","linkify":"today","nodes":[{"content":"today","pos":[0,5]}]},{"content":"Retrieves the current date on the system.","pos":[12934,12975]},{"pos":[12999,13011],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The current date.","pos":[13013,13030]},{"pos":[13036,13043],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[13251,13257],"content":"wkOfYr","linkify":"wkOfYr","nodes":[{"content":"wkOfYr","pos":[0,6]}]},{"content":"Calculates the week of the year that a date falls in, according to the ISO 8601 specification.","pos":[13258,13352]},{"pos":[13386,13396],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[13400,13409]},{"content":"Description","pos":[13412,13423]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[13528,13534],"source":"\\_date"},{"content":"The date to calculate the week of the year for.","pos":[13540,13587]},{"pos":[13595,13607],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[13609,13679],"content":"The sequence number of the week that the <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\_</ph>date<ept id=\"p1\">*</ept> parameter occurs in.","source":"The sequence number of the week that the *\\_date* parameter occurs in."},{"pos":[13685,13692],"content":"Example","linkify":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"content":"The following code example compares the <bpt id=\"p1\">**</bpt>wkOfYr<ept id=\"p1\">**</ept> function with the <bpt id=\"p2\">**</bpt>Global::weekOfYear<ept id=\"p2\">**</ept> method.","pos":[13694,13793],"source":"The following code example compares the **wkOfYr** function with the **Global::weekOfYear** method."},{"content":"The function and the method produce different results.","pos":[13794,13848]},{"content":"The previous example sent the following information to the Infolog for display.","pos":[15194,15273]},{"content":"The output shows that there are differences between <bpt id=\"p1\">**</bpt>wkOfYr<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Global::weekOfYear<ept id=\"p2\">**</ept>.","pos":[15274,15364],"source":" The output shows that there are differences between **wkOfYr** and **Global::weekOfYear**."},{"pos":[15699,15703],"content":"year","linkify":"year","nodes":[{"content":"year","pos":[0,4]}]},{"pos":[15704,15745],"content":"Retrieves the year from a <bpt id=\"p1\">**</bpt>date<ept id=\"p1\">**</ept> value.","source":"Retrieves the year from a **date** value."},{"pos":[15777,15787],"content":"Parameters","linkify":"Parameters","nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"Parameter","pos":[15791,15800]},{"content":"Description","pos":[15803,15814]},{"content":"<ph id=\"ph1\">\\_</ph>date","pos":[15891,15897],"source":"\\_date"},{"content":"The date to return the year from.","pos":[15903,15936]},{"pos":[15944,15956],"content":"Return value","linkify":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"content":"The year of the specified date.","pos":[15958,15989]},{"pos":[15995,16002],"content":"Remarks","linkify":"Remarks","nodes":[{"content":"Remarks","pos":[0,7]}]}]}