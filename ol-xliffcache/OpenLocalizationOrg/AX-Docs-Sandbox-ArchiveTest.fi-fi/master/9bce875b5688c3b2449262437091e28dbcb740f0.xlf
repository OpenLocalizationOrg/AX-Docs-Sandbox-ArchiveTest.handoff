<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fi-fi">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-5a646d1" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bce875b5688c3b2449262437091e28dbcb740f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scm\pim\system-defined-user-defined-table-constraints.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">basic</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">HT</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9696404eed1658e05690e7f6c5f91c4d977a8158</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ba9782473e7901ad3e4cfc645496f80d617fcf4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>System-defined and user-defined table constraints</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>This article explains the two types of table constraints for components in a product configuration model -  user-defined and system-defined.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" restype="x-metadata">
          <source>Table constraints represent matrices of the allowed attribute combinations, where each row defines one set of possible attribute values.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>System-defined and user-defined table constraints</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article explains the two types of table constraints for components in a product configuration model -  user-defined and system-defined.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Table constraints represent matrices of the allowed attribute combinations, where each row defines one set of possible attribute values.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Table constraints represent matrices of the combinations of attributes that are allowed for components in a product configuration model.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each row in the table defines one set of possible attribute values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can declare two types of constraints in a product configuration model:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Expression constraint<ept id="p1">**</ept> – Create an expression that defines relations between attributes to guarantee that only compatible values can be selected during product configuration.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Table constraint<ept id="p1">**</ept> – Create a table that defines all the combinations that are allowed for a specified set of attributes.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Two types of table constraints are available: user-defined table constraints and system-defined table constraints.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This article describes user-defined and system-defined table constraints for components in a product configuration model.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>User-defined table constraints</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A user-defined table constraint is a type of matrix that is used to describe the combinations of attribute values that are defined by attribute types.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, if you produce speakers, you can include columns for the cabinet finish and the front grill in the user-defined table constraint.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The attribute type for the cabinet finish has four values, and the attribute type for the front grill has three values.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Therefore, if constraints aren't used, there are 4 × 3 = 12 possible combinations.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, in this example, only six combinations are allowed, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This information is displayed on the <bpt id="p1">**</bpt>Allowed combinations<ept id="p1">**</ept> tab on the <bpt id="p2">**</bpt>Edit table constraint<ept id="p2">**</ept> page.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Cabinet finish</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Front grill</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Black</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Black</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Black</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Metal</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Oak</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Black</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Rosewood</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>White</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>White</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Black</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>White</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>White</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>User-defined table constraints are defined by static table input that works the same way as an expression constraint.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you use a user-defined table constraint, the advantage is that tables are often easier to create, understand, and maintain than long expression constraints.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>System-defined table constraints</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A system-defined table constraint creates a dynamic mapping between an attribute type and a field in a table.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When a system-defined table constraint is included in a product configuration model, the mapping guarantees that the data in the table is shown instead of the values of the attribute type.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result is a dynamic constraint, because the table contents can be modified (for example, by other modules).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When you create a system-defined table constraint, you select a table, optionally define the query to use, and then associate attribute types to the fields in the selected table.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The types of fields must match the types of attribute types.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Before a table constraint can take effect on a product configuration model, the table constraint must be included in a constraint on one of the model's components.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The procedure is to create a new constraint, select the table constraint type, and then select the table constraint definition to use.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Finally, all fields in the table constraint must be mapped to attributes in the product configuration model.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Key concepts in product configuration models<ept id="p1">](product-configuration-models.md)</ept></source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>